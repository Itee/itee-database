"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("itee-validators"),r=require("itee-core"),t=require("path"),s=require("buffer"),n=require("fs"),i=require("stream");function o(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function a(e){if(e&&e.__esModule)return e;var r=Object.create(null);return e&&Object.keys(e).forEach(function(t){if("default"!==t){var s=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,s.get?s:{enumerable:!0,get:function(){return e[t]}})}}),r.default=e,Object.freeze(r)}var u,c=o(t),l=a(s),d=o(n),p=new Uint8Array(16);function h(){if(!u&&!(u="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return u(p)}var f=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;for(var g=[],E=0;E<256;++E)g.push((E+256).toString(16).substr(1));function b(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=(g[e[r+0]]+g[e[r+1]]+g[e[r+2]]+g[e[r+3]]+"-"+g[e[r+4]]+g[e[r+5]]+"-"+g[e[r+6]]+g[e[r+7]]+"-"+g[e[r+8]]+g[e[r+9]]+"-"+g[e[r+10]]+g[e[r+11]]+g[e[r+12]]+g[e[r+13]]+g[e[r+14]]+g[e[r+15]]).toLowerCase();if(!function(e){return"string"==typeof e&&f.test(e)}(t))throw TypeError("Stringified UUID is invalid");return t}function x(e,r,t){var s=(e=e||{}).random||(e.rng||h)();if(s[6]=15&s[6]|64,s[8]=63&s[8]|128,r){t=t||0;for(var n=0;n<16;++n)r[t+n]=s[n];return r}return b(s)}
/**
 * @module Messages/AbstractError
 * @desc Export the AbstractError abstract class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires {@link https://github.com/uuidjs/uuid uuid}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class _ extends Error{constructor(r){super(),this._uuid=x(),this._name=this.constructor.name,this._message=(()=>{const t="Expect a non empty string.";if(e.isNotDefined(r))throw new ReferenceError(`The error message cannot be null or undefined. ${t}`);if(e.isNotString(r))throw new TypeError(`The error message cannot be an instance of ${r.constructor.name}. ${t}`);if(e.isEmptyString(r))throw new TypeError(`The error message cannot be an empty string. ${t}`);if(e.isBlankString(r))throw new TypeError(`The error message cannot be a blank string. ${t}`);return r})(),this._stack=this.stack,Object.defineProperty(this,"stack",{get:()=>this._stack,set:()=>{throw new SyntaxError("Try to assign a read only property.")}})}get isAbstractError(){return!0}get uuid(){return this._uuid}set uuid(e){throw new SyntaxError("Try to assign a read only property.")}get name(){return this._name}set name(e){throw new SyntaxError("Try to assign a read only property.")}get message(){return this._message}set message(e){throw new SyntaxError("Try to assign a read only property.")}}
/**
 * @module Messages/HTTP/AbstractHTTPError
 * @desc Export the AbstractHTTPError abstract class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/AbstractError~AbstractError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class y extends _{static get isAbstractHTTPError(){return!0}get statusCode(){if(e.isNotDefined(this.constructor.statusCode))throw new ReferenceError(`${this.name} class need to reimplement static statusCode getter.`);return this.constructor.statusCode}set statusCode(e){throw new SyntaxError("Try to assign a read only property.")}}
/**
 * @module Messages/HTTP/UnknownError
 * @desc Export the UnknownError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class m extends y{static get statusCode(){return 520}get isUnknownError(){return!0}}
/**
 * @module Databases/TAbstractResponder
 * @desc Export the TAbstractResponder abstract class.
 * @exports TAbstractResponder
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class v extends r.TAbstractObject{static _formatErrors(r=[]){const t=e.isArray(r)?r:[r];let s=[];for(let e=0,r=t.length;e<r;e++)s.push(v._formatError(t[e]));return s}static _formatError(r){let t;if(r instanceof Error)t=r,t.statusCode=500;else if(e.isString(r))t=new m(r);else if(e.isObject(r)){const e=r.name,s=r.message||"Empty message...";t=new m(s),e&&(t.name=e)}else t=new m(r.toString());return t}static returnNotFound(r){if(e.isFunction(r))return r();r.headersSent||r.status(204).end()}static returnError(r,t){if(e.isFunction(t))return t(r,null);if(t.headersSent)return;const s=v._formatError(r);t.format({"application/json":()=>{t.status(s.statusCode).json(s)},default:()=>{t.status(406).send("Not Acceptable")}})}static returnData(r,t){if(e.isFunction(t))return t(null,r);if(t.headersSent)return;const s=e.isArray(r)?r:[r];t.format({"application/json":()=>{t.status(200).json(s)},default:()=>{t.status(406).send("Not Acceptable")}})}static returnErrorAndData(r,t,s){if(e.isFunction(s))return s(r,t);if(s.headersSent)return;const n={errors:v._formatErrors(r),datas:t};s.format({"application/json":()=>{s.status(416).json(n)},default:()=>{s.status(416).send("Range Not Satisfiable")}})}static return(r,t={}){const s=Object.assign({immediate:null,beforeAll:null,beforeReturnErrorAndData:null,afterReturnErrorAndData:null,beforeReturnError:null,afterReturnError:null,beforeReturnData:null,afterReturnData:null,beforeReturnNotFound:null,afterReturnNotFound:null,afterAll:null},t,{returnErrorAndData:v.returnErrorAndData.bind(this),returnError:v.returnError.bind(this),returnData:v.returnData.bind(this),returnNotFound:v.returnNotFound.bind(this)});return s.immediate&&s.immediate(),function(t=null,n=null){const i=e.isDefined(n),o=e.isDefined(t);s.beforeAll&&s.beforeAll(),i&&o?(s.beforeReturnErrorAndData&&s.beforeReturnErrorAndData(t,n),s.returnErrorAndData(t,n,r),s.afterReturnErrorAndData&&s.afterReturnErrorAndData(t,n)):i&&!o?(s.beforeReturnData&&s.beforeReturnData(n),s.returnData(n,r),s.afterReturnData&&s.afterReturnData(n)):!i&&o?(s.beforeReturnError&&s.beforeReturnError(t),s.returnError(t,r),s.afterReturnError&&s.afterReturnError(t)):i||o||(s.beforeReturnNotFound&&s.beforeReturnNotFound(),s.returnNotFound(r),s.afterReturnNotFound&&s.afterReturnNotFound()),s.afterAll&&s.afterAll()}}constructor(e={}){super({...e})}}
/**
 * @module Messages/HTTP/ClientErrors/UnprocessableEntityError
 * @desc Export the AbstractHTTPError abstract class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class w extends y{static get statusCode(){return 422}get isUnprocessableEntityError(){return!0}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @class TDatabaseController
 * @classdesc The TDatabaseController is the base class to perform CRUD operations on the database
 */class C extends v{constructor(e){const r={driver:null,useNext:!1,...e};super(r),this.driver=r.driver,this.useNext=r.useNext}get useNext(){return this._useNext}set useNext(r){if(e.isNull(r))throw new TypeError("Driver cannot be null ! Expect a database driver.");if(e.isUndefined(r))throw new TypeError("Driver cannot be undefined ! Expect a database driver.");if(e.isNotBoolean(r))throw new TypeError("Driver cannot be undefined ! Expect a database driver.");this._useNext=r}get driver(){return this._driver}set driver(r){if(e.isNull(r))throw new TypeError("Driver cannot be null ! Expect a database driver.");if(e.isUndefined(r))throw new TypeError("Driver cannot be undefined ! Expect a database driver.");this._driver=r}create(r,t,s){const n=r.body;e.isNotDefined(n)?C.returnError(new w("Le corps de la requete ne peut pas être null ou indefini."),this.useNext?s:t):e.isArray(n)?e.isEmptyArray(n)?C.returnError(new w("Le tableau d'objet de la requete ne peut pas être vide."),this.useNext?s:t):this._createMany(n,t,s):e.isObject(n)?e.isEmptyObject(n)?C.returnError(new w("L'objet de la requete ne peut pas être vide."),this.useNext?s:t):this._createOne(n,t,s):C.returnError(new w("Le type de donnée de la requete est invalide. Les paramètres valides sont objet ou un tableau d'objet."),this.useNext?s:t)}_createOne(){}_createMany(){}read(r,t,s){const n=r.params.id,i=r.body,o=e.isDefined(i),a=o?i.ids:null,u=o?i.query:null,c=o?i.projection:null;e.isDefined(n)?e.isNotString(n)?C.returnError(new w("L'identifiant devrait être une chaine de caractères."),this.useNext?s:t):e.isEmptyString(n)||e.isBlankString(n)?C.returnError(new w("L'identifiant ne peut pas être une chaine de caractères vide."),this.useNext?s:t):this._readOne(n,c,t,s):e.isDefined(a)?e.isNotArray(a)?C.returnError(new w("Le tableau d'identifiants devrait être un tableau de chaine de caractères."),this.useNext?s:t):e.isEmptyArray(a)?C.returnError(new w("Le tableau d'identifiants ne peut pas être vide."),this.useNext?s:t):this._readMany(a,c,t,s):e.isDefined(u)?e.isNotObject(u)?C.returnError(new w("La requete devrait être un objet javascript."),this.useNext?s:t):e.isEmptyObject(u)?this._readAll(c,t,s):this._readWhere(u,c,t,s):C.returnError(new w("La requete ne peut pas être null."),this.useNext?s:t)}_readOne(){}_readMany(){}_readWhere(){}_readAll(){}update(r,t,s){const n=r.params.id,i=r.body,o=e.isDefined(i),a=o?i.ids:null,u=o?i.query:null,c=o?i.update:null;e.isNotDefined(c)?C.returnError(new w("La mise à jour a appliquer ne peut pas être null ou indefini."),this.useNext?s:t):e.isDefined(n)?e.isNotString(n)?C.returnError(new w("L'identifiant devrait être une chaine de caractères."),this.useNext?s:t):e.isEmptyString(n)||e.isBlankString(n)?C.returnError(new w("L'identifiant ne peut pas être une chaine de caractères vide."),this.useNext?s:t):this._updateOne(n,c,t,s):e.isDefined(a)?e.isNotArray(a)?C.returnError(new w("Le tableau d'identifiants devrait être un tableau de chaine de caractères."),this.useNext?s:t):e.isEmptyArray(a)?C.returnError(new w("Le tableau d'identifiants ne peut pas être vide."),this.useNext?s:t):this._updateMany(a,c,t,s):e.isDefined(u)?e.isNotObject(u)?C.returnError(new w("La requete devrait être un objet javascript."),this.useNext?s:t):e.isEmptyObject(u)?this._updateAll(c,t,s):this._updateWhere(u,c,t,s):C.returnError(new w("La requete ne peut pas être vide."),this.useNext?s:t)}_updateOne(){}_updateMany(){}_updateWhere(){}_updateAll(){}delete(r,t,s){const n=r.params.id,i=r.body,o=e.isDefined(i),a=o?i.ids:null,u=o?i.query:null;e.isDefined(n)?e.isNotString(n)?C.returnError(new w("L'identifiant devrait être une chaine de caractères."),this.useNext?s:t):e.isEmptyString(n)||e.isBlankString(n)?C.returnError(new w("L'identifiant ne peut pas être une chaine de caractères vide."),this.useNext?s:t):this._deleteOne(n,t,s):e.isDefined(a)?e.isNotArray(a)?C.returnError(new w("Le tableau d'identifiants devrait être un tableau de chaine de caractères."),this.useNext?s:t):e.isEmptyArray(a)?C.returnError(new w("Le tableau d'identifiants ne peut pas être vide."),this.useNext?s:t):this._deleteMany(a,t,s):e.isDefined(u)?e.isNotObject(u)?C.returnError(new w("La requete devrait être un objet javascript."),this.useNext?s:t):e.isEmptyObject(u)?this._deleteAll(t,s):this._deleteWhere(u,t,s):C.returnError(new w("La requete ne peut pas être vide."),this.useNext?s:t)}_deleteOne(){}_deleteMany(){}_deleteWhere(){}_deleteAll(){}}
/**
 * @author [Ahmed DCHAR]{@link https://github.com/dragoneel}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 */
class T extends v{static _convertFilesObjectToArray(e){const r=[];for(let t in e)Object.prototype.hasOwnProperty.call(e,t)&&r.push(e[t]);return r}constructor(e={}){const r={driver:null,useNext:!1,converters:new Map,convertersOptions:void 0,rules:{},inserter:{},...e};super(),this._driver=r.driver,this._useNext=r.useNext,this._converters=r.converters,this._convertersOptions=r.convertersOptions,this._rules=r.rules,this._inserter=new r.inserter({driver:this._driver}),this._errors=[],this._processedFiles=[],this._filesToProcess=0}_fileConversionSuccessCallback(e,r,t,s){t?t(s):this._inserter.save(s,this._convertersOptions,this._fileInsertionSuccessCallback.bind(this,e,r),this._fileConversionProgressCallback.bind(this,e),this._fileConversionErrorCallback.bind(this,e,r))}_fileInsertionSuccessCallback(e,r,t){this._filesToProcess--,this._checkEndOfReturns(e,r,t)}_fileConversionProgressCallback(e,r){this.logger.log(r)}_fileConversionErrorCallback(e,r,t){this._errors.push(t),this._filesToProcess--,this._checkEndOfReturns(e,r,null)}_checkEndOfReturns(e,r,t){this._errors.length>0?this._useNext?r(this._errors):(T.return(e)(this._errors),this._errors=[]):this._useNext?r():T.returnData(t,e)}processFiles(e,r,t){const s=T._convertFilesObjectToArray(e.files),n=s.length;if(0===n){if(this._useNext)return void t("Aucun fichier à traiter !");T.returnError("Aucun fichier à traiter !",r)}this._convertersOptions=e.body;const i=[];for(let e=0;e<n;e++){let n=s[e];if(this._processedFiles.includes(n.name)){if(this._useNext)return void t(`Le fichier ${n.name} à déjà été inséré.`);T.returnError(`Le fichier ${n.name} à déjà été inséré.`,r)}this._processedFiles.push(n.name),i.push(n)}const o=i.length;if(0===o){if(this._useNext)return void t(`Impossible d'analyser ${o} fichiers associatifs simultanément !`);T.returnError(`Impossible d'analyser ${o} fichiers associatifs simultanément !`,r)}this._filesToProcess+=o,this._processFiles(i,this._convertersOptions,r,t)}_processFiles(r,t,s,n){const i=r.map(e=>c.default.extname(e.name)),o=this._rules.filter(r=>{const t=r.on;if(e.isArray(t)){for(let e=0;e<t.length;e++)if(!i.includes(t[e]))return!1;return!0}return i.includes(t)});for(let i=0,a=o.length;i<a;i++){let a=o[i].use;if(e.isArray(a)){let e;for(let i=a.length-1;i>=0;i--){const o=a[i];0===i?this._converters[o].convert(r,t,this._fileConversionSuccessCallback.bind(this,s,n,e),this._fileConversionProgressCallback.bind(this,s),this._fileConversionErrorCallback.bind(this,s,n)):e=i===a.length-1?e=>{this._converters[o].convert(e,t,this._fileConversionSuccessCallback.bind(this,s,n,null),this._fileConversionProgressCallback.bind(this,s),this._fileConversionErrorCallback.bind(this,s,n))}:r=>{this._converters[o].convert(r,t,this._fileConversionSuccessCallback.bind(this,s,n,e),this._fileConversionProgressCallback.bind(this,s),this._fileConversionErrorCallback.bind(this,s,n))}}}else this._converters[a].convert(r[0],t,this._fileConversionSuccessCallback.bind(this,s,n,null),this._fileConversionProgressCallback.bind(this,s),this._fileConversionErrorCallback.bind(this,s,n))}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
class N extends i.Writable{constructor(e){super(e);const r=e.bufferSize||l.kStringMaxLength;this.memoryBuffer=Buffer.alloc(r),this.offset=0}_final(e){e()}_write(e,r,t){const s=Buffer.isBuffer(e)?e:new Buffer(e,r);for(let e=0,r=s.length;e<r;e++)this.memoryBuffer[this.offset]=s[e],this.offset++;t()}_writev(e,r){for(let r=0,t=e.length;r<t;r++)this.memoryBuffer=Buffer.concat([this.memoryBuffer,e[r]]);r()}_releaseMemory(){this.memoryBuffer=null}toArrayBuffer(){const e=this.memoryBuffer,r=new ArrayBuffer(e.length),t=new Uint8Array(r);for(let r=0;r<e.length;++r)t[r]=e[r];return this._releaseMemory(),r}toJSON(){return JSON.parse(this.toString())}toString(){const e=this.memoryBuffer.toString();return this._releaseMemory(),e}}class S{constructor(e={}){const r={dumpType:S.DumpType.ArrayBuffer,...e};this.dumpType=r.dumpType,this._isProcessing=!1,this._queue=[]}get dumpType(){return this._dumpType}set dumpType(r){if(e.isNull(r))throw new TypeError("Dump type cannot be null ! Expect a non empty string.");if(e.isUndefined(r))throw new TypeError("Dump type cannot be undefined ! Expect a non empty string.");this._dumpType=r}setDumpType(e){return this.dumpType=e,this}convert(e,r,t,s,n){e?(this._queue.push({file:e,parameters:r,onSuccess:t,onProgress:s,onError:n}),this._processQueue()):n("File cannot be null or empty, aborting file convertion !!!")}_processQueue(){if(0===this._queue.length||this._isProcessing)return;this._isProcessing=!0;const r=this,t=this._queue.shift(),s=t.file,n=t.parameters,i=t.onSuccess,o=t.onProgress,a=t.onError;if(e.isString(s))r._dumpFileInMemoryAs(r._dumpType,s,n,u,l,d);else{const e=s.data;switch(r._dumpType){case S.DumpType.ArrayBuffer:{const r=e.length,t=new ArrayBuffer(r),s=new Uint8Array(t);for(let t=0;t<r;++t)s[t]=e[t];u(t)}break;case S.DumpType.JSON:u(JSON.parse(e.toString()));break;case S.DumpType.String:u(e.toString());break;default:throw new RangeError(`Invalid switch parameter: ${r._dumpType}`)}}function u(e){r._convert(e,n,c,l,d)}function c(e){i(e),r._isProcessing=!1,r._processQueue()}function l(e){o(e)}function d(e){a(e),r._isProcessing=!1,r._processQueue()}}_dumpFileInMemoryAs(e,r,t,s,n,i){let o=!1;const a=d.default.createReadStream(r);a.on("error",e=>{o=!0,i(e)});const u=parseInt(t.fileSize),c=new N({bufferSize:u});c.on("error",e=>{o=!0,i(e)}),c.on("finish",()=>{if(!o){switch(e){case S.DumpType.ArrayBuffer:s(c.toArrayBuffer());break;case S.DumpType.String:s(c.toString());break;case S.DumpType.JSON:s(c.toJSON());break;default:throw new RangeError(`Invalid switch parameter: ${e}`)}a.unpipe(),a.close(),c.end()}}),a.pipe(c)}_convert(){}}S.MAX_FILE_SIZE=67108864,S.DumpType=Object.freeze({ArrayBuffer:0,String:1,JSON:2});
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 */
class R extends r.TAbstractObject{static _registerRoutesTo(e,r,t,s,n,i){for(let o=0,a=n.length;o<a;o++){const a=n[o],u=new(s.get(a.controller.name))({driver:e,...a.controller.options}),c=t({mergeParams:!0});i.log(`\tAdd controller for base route: ${a.route}`),r.use(a.route,R._populateRouter(c,u,a.controller.can,i))}}static _populateRouter(e,r,t={},s){for(let n in t){const i=t[n];s.log(`\t\tMap route ${i.over} on (${i.on}) to ${r.constructor.name}.${n} method.`),e[i.on](i.over,r[n].bind(r))}return e}constructor(e={}){const r={controllers:new Map,descriptors:[],...e};super(r),this.controllers=r.controllers,this.descriptors=r.descriptors,this.__dirname=void 0}get controllers(){return this._controllers}set controllers(r){if(e.isNull(r))throw new TypeError("Controllers cannot be null ! Expect a map of controller.");if(e.isUndefined(r))throw new TypeError("Controllers cannot be undefined ! Expect a map of controller.");if(!(r instanceof Map))throw new TypeError(`Controllers cannot be an instance of ${r.constructor.name} ! Expect a map of controller.`);this._controllers=r}get descriptors(){return this._descriptors}set descriptors(r){if(e.isNull(r))throw new TypeError("Descriptors cannot be null ! Expect an array of POJO.");if(e.isUndefined(r))throw new TypeError("Descriptors cannot be undefined ! Expect an array of POJO.");this._descriptors=r}addController(e){return this._controllers.set(e.name,e),this}addDescriptor(e){return this._descriptors.push(e),this}beforeRegisterRoutes(){}registerTo(e,r,t){this.beforeRegisterRoutes(e),R._registerRoutesTo(e,r,t,this._controllers,this._descriptors,this.logger)}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class A extends r.TAbstractObject{constructor(e={}){const r={driver:null,application:null,router:null,plugins:[],...e};super(r),this.driver=r.driver,this.application=r.application,this.router=r.router,this.plugins=r.plugins}get plugins(){return this._plugins}set plugins(r){if(e.isNull(r))throw new TypeError("Plugins cannot be null ! Expect an array of TDatabasePlugin.");if(e.isUndefined(r))throw new TypeError("Plugins cannot be undefined ! Expect an array of TDatabasePlugin.");this._plugins=r,this._registerPlugins()}get router(){return this._router}set router(r){if(e.isNull(r))throw new TypeError("Router cannot be null ! Expect a Express Router.");if(e.isUndefined(r))throw new TypeError("Router cannot be undefined ! Expect a Express Router.");this._router=r}get application(){return this._application}set application(r){if(e.isNull(r))throw new TypeError("Application cannot be null ! Expect a Express Application.");if(e.isUndefined(r))throw new TypeError("Application cannot be undefined ! Expect a Express Application.");this._application=r}get driver(){return this._driver}set driver(r){if(e.isNull(r))throw new TypeError("Driver cannot be null ! Expect a database driver.");if(e.isUndefined(r))throw new TypeError("Driver cannot be undefined ! Expect a database driver.");this._driver=r}setPlugins(e){return this.plugins=e,this}addPlugin(e){this._plugins.push(e);const[r,t]=Object.entries(e)[0];return this._registerPlugin(r,t),this}setRouter(e){return this.router=e,this}setApplication(e){return this.application=e,this}setDriver(e){return this.driver=e,this}init(){}_registerPlugins(){for(let[e,r]of Object.entries(this._plugins))this._registerPlugin(e,r)}_registerPlugin(e,r){this._registerPackagePlugin(e,r)||this._registerLocalPlugin(e,r)||this.logger.error(`Unable to register the plugin ${e} the package or local folder doesn't seem to exist ! Skip it.`)}_registerPackagePlugin(e,r){let t=!1;try{let s=require(e);s.registerPlugin&&(s=s.registerPlugin(r)),s instanceof R?(this.logger.log(`Use ${e} plugin from node_modules`),s.__dirname=c.default.dirname(require.resolve(e)),s.registerTo(this.driver,this.application,this.router),t=!0):this.logger.error(`The plugin ${e} doesn't seem to be an instance of an extended class from TAbstractDatabasePlugin ! Skip it.`)}catch(e){e.code&&"MODULE_NOT_FOUND"===e.code||this.logger.error(e)}return t}_registerLocalPlugin(e,r){let t=!1;try{const s=c.default.join(__dirname,"../../../","databases/plugins/",e,`${e}.js`);let n=require(s);n.registerPlugin&&(n=n.registerPlugin(r)),n instanceof R?(this.logger.log(`Use ${e} plugin from local folder`),n.__dirname=c.default.dirname(require.resolve(s)),n.registerTo(this.driver,this.application,this.router),t=!0):this.logger.error(`The plugin ${e} doesn't seem to be an instance of an extended class from TAbstractDatabasePlugin ! Skip it.`)}catch(e){this.logger.error(e)}return t}connect(){}close(){}on(){}}
/**
 * @module Messages/HTTP/BadRequestError
 * @desc Export the BadRequestError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
const P=new Map;exports.ATimeoutOccuredError=
/**
 * @module Messages/HTTP/ATimeoutOccuredError
 * @desc Export the ATimeoutOccuredError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
class extends y{static get statusCode(){return 524}get isATimeoutOccuredError(){return!0}}
/**
 * @module Messages/HTTP/BadGatewayError
 * @desc Export the BadGatewayError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.AbstractError=_,exports.AbstractHTTPError=y,exports.BadGatewayError=class extends y{static get statusCode(){return 502}get isBadGatewayError(){return!0}}
/**
 * @module Messages/HTTP/BandwidthLimitExceededError
 * @desc Export the BandwidthLimitExceededError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.BadMappingError=
/**
 * @module Messages/HTTP/BadMappingError
 * @desc Export the BadMappingError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
class extends y{static get statusCode(){return 421}get isBadMappingError(){return!0}}
/**
 * @module Messages/HTTP/BlockedByWindowsParentalControlsError
 * @desc Export the BlockedByWindowsParentalControlsError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.BadRequestError=class extends y{static get statusCode(){return 400}get isBadRequestError(){return!0}},exports.BandwidthLimitExceededError=class extends y{static get statusCode(){return 509}get isBandwidthLimitExceededError(){return!0}}
/**
 * @module Messages/HTTP/ConnectionTimedOutError
 * @desc Export the ConnectionTimedOutError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.BlockedByWindowsParentalControlsError=class extends y{static get statusCode(){return 450}get isBlockedByWindowsParentalControlsError(){return!0}}
/**
 * @module Messages/HTTP/ClientClosedRequestError
 * @desc Export the ClientClosedRequestError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.ClientClosedRequestError=class extends y{static get statusCode(){return 499}get isClientClosedRequestError(){return!0}}
/**
 * @module Messages/HTTP/ConflictError
 * @desc Export the ConflictError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.ConflictError=class extends y{static get statusCode(){return 409}get isConflictError(){return!0}}
/**
 * @module Messages/HTTP/ExpectationFailedError
 * @desc Export the ExpectationFailedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.ConnectionTimedOutError=class extends y{static get statusCode(){return 522}get isConnectionTimedOutError(){return!0}}
/**
 * @module Messages/HTTP/GatewayTimeOutError
 * @desc Export the GatewayTimeOutError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.Databases=P,exports.ExpectationFailedError=class extends y{static get statusCode(){return 417}get isExpectationFailedError(){return!0}}
/**
 * @module Messages/HTTP/ForbiddenError
 * @desc Export the ForbiddenError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.ForbiddenError=class extends y{static get statusCode(){return 403}get isForbiddenError(){return!0}}
/**
 * @module Messages/HTTP/GoneError
 * @desc Export the GoneError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.GatewayTimeOutError=class extends y{static get statusCode(){return 504}get isGatewayTimeOutError(){return!0}}
/**
 * @module Messages/HTTP/HTTPVersionNotSupportedError
 * @desc Export the HTTPVersionNotSupportedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.GoneError=class extends y{static get statusCode(){return 410}get isGoneError(){return!0}}
/**
 * @module Messages/HTTP/HTTPRequestSentToHTTPSPortError
 * @desc Export the HTTPRequestSentToHTTPSPortError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.HTTPRequestSentToHTTPSPortError=class extends y{static get statusCode(){return 497}get isHTTPRequestSentToHTTPSPortError(){return!0}}
/**
 * @module Messages/HTTP/ImATeapotError
 * @desc Export the ImATeapotError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.HTTPVersionNotSupportedError=class extends y{static get statusCode(){return 505}get isHTTPVersionNotSupportedError(){return!0}}
/**
 * @module Messages/HTTP/InsufficientStorageError
 * @desc Export the InsufficientStorageError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.ImATeapotError=class extends y{static get statusCode(){return 418}get isImATeapotError(){return!0}}
/**
 * @module Messages/HTTP/LengthRequiredError
 * @desc Export the LengthRequiredError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.InsufficientStorageError=class extends y{static get statusCode(){return 507}get isInsufficientStorageError(){return!0}}
/**
 * @module Messages/HTTP/InternalServerError
 * @desc Export the InternalServerError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.InternalServerError=class extends y{static get statusCode(){return 500}get isInternalServerError(){return!0}}
/**
 * @module Messages/HTTP/InvalidSSLCertificateError
 * @desc Export the InvalidSSLCertificateError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.InvalidSSLCertificateError=class extends y{static get statusCode(){return 526}get isInvalidSSLCertificateError(){return!0}}
/**
 * @module Messages/HTTP/LoopDetectedError
 * @desc Export the LoopDetectedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.LengthRequiredError=class extends y{static get statusCode(){return 411}get isLengthRequiredError(){return!0}}
/**
 * @module Messages/HTTP/LockedError
 * @desc Export the LockedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.LockedError=class extends y{static get statusCode(){return 423}get isLockedError(){return!0}}
/**
 * @module Messages/HTTP/MethodFailureError
 * @desc Export the MethodFailureError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.LoopDetectedError=class extends y{static get statusCode(){return 508}get isLoopDetectedError(){return!0}}
/**
 * @module Messages/HTTP/NetworkAuthenticationRequiredError
 * @desc Export the NetworkAuthenticationRequiredError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.MemoryWriteStream=N,exports.MethodFailureError=class extends y{static get statusCode(){return 424}get isMethodFailureError(){return!0}}
/**
 * @module Messages/HTTP/MethodNotAllowedError
 * @desc Export the MethodNotAllowedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.MethodNotAllowedError=class extends y{static get statusCode(){return 405}get isMethodNotAllowedError(){return!0}}
/**
 * @module Messages/HTTP/NoResponseError
 * @desc Export the NoResponseError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.NetworkAuthenticationRequiredError=class extends y{static get statusCode(){return 511}get isNetworkAuthenticationRequiredError(){return!0}}
/**
 * @module Messages/HTTP/NotExtendedError
 * @desc Export the NotExtendedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.NoResponseError=class extends y{static get statusCode(){return 444}get isNoResponseError(){return!0}}
/**
 * @module Messages/HTTP/NotAcceptableError
 * @desc Export the NotAcceptableError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.NotAcceptableError=class extends y{static get statusCode(){return 406}get isNotAcceptableError(){return!0}}
/**
 * @module Messages/HTTP/NotFoundError
 * @desc Export the NotFoundError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.NotExtendedError=class extends y{static get statusCode(){return 510}get isNotExtendedError(){return!0}}
/**
 * @module Messages/HTTP/NotImplementedError
 * @desc Export the NotImplementedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.NotFoundError=class extends y{static get statusCode(){return 404}get isNotFoundError(){return!0}}
/**
 * @module Messages/HTTP/PaymentRequiredError
 * @desc Export the PaymentRequiredError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.NotImplementedError=class extends y{static get statusCode(){return 501}get isNotImplementedError(){return!0}}
/**
 * @module Messages/HTTP/OriginIsUnreachableError
 * @desc Export the OriginIsUnreachableError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.OriginIsUnreachableError=class extends y{static get statusCode(){return 523}get isOriginIsUnreachableError(){return!0}}
/**
 * @module Messages/HTTP/RailgunError
 * @desc Export the RailgunError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.PaymentRequiredError=class extends y{static get statusCode(){return 402}get isPaymentRequiredError(){return!0}}
/**
 * @module Messages/HTTP/PreconditionFailedError
 * @desc Export the PreconditionFailedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.PreconditionFailedError=class extends y{static get statusCode(){return 412}get isPreconditionFailedError(){return!0}}
/**
 * @module Messages/HTTP/PreconditionRequiredError
 * @desc Export the PreconditionRequiredError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.PreconditionRequiredError=class extends y{static get statusCode(){return 428}get isPreconditionRequiredError(){return!0}}
/**
 * @module Messages/HTTP/ProxyAuthenticationRequiredError
 * @desc Export the ProxyAuthenticationRequiredError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.ProxyAuthenticationRequiredError=class extends y{static get statusCode(){return 407}get isProxyAuthenticationRequiredError(){return!0}}
/**
 * @module Messages/HTTP/RequestEntityTooLargeError
 * @desc Export the RequestEntityTooLargeError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.RailgunError=class extends y{static get statusCode(){return 527}get isRailgunError(){return!0}}
/**
 * @module Messages/HTTP/ServiceUnavailableError
 * @desc Export the ServiceUnavailableError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.RequestEntityTooLargeError=class extends y{static get statusCode(){return 413}get isRequestEntityTooLargeError(){return!0}}
/**
 * @module Messages/HTTP/RequestHeaderFieldsTooLargeError
 * @desc Export the RequestHeaderFieldsTooLargeError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.RequestHeaderFieldsTooLargeError=class extends y{static get statusCode(){return 431}get isRequestHeaderFieldsTooLargeError(){return!0}}
/**
 * @module Messages/HTTP/RequestRangeUnsatisfiableError
 * @desc Export the RequestRangeUnsatisfiableError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.RequestRangeUnsatisfiableError=class extends y{static get statusCode(){return 416}get isRequestRangeUnsatisfiableError(){return!0}}
/**
 * @module Messages/HTTP/RequestTimeOutError
 * @desc Export the RequestTimeOutError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.RequestTimeOutError=class extends y{static get statusCode(){return 408}get isRequestTimeOutError(){return!0}}
/**
 * @module Messages/HTTP/RetryWithError
 * @desc Export the RetryWithError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.RetryWithError=class extends y{static get statusCode(){return 449}get isRetryWithError(){return!0}}
/**
 * @module Messages/HTTP/SSLCertificateError
 * @desc Export the SSLCertificateError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.SSLCertificateError=class extends y{static get statusCode(){return 495}get isSSLCertificateError(){return!0}}
/**
 * @module Messages/HTTP/SSLCertificateRequiredError
 * @desc Export the SSLCertificateRequiredError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.SSLCertificateRequiredError=class extends y{static get statusCode(){return 496}get isSSLCertificateRequiredError(){return!0}}
/**
 * @module Messages/HTTP/TooManyRequestsError
 * @desc Export the TooManyRequestsError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.SSLHandshakeFailedError=
/**
 * @module Messages/HTTP/SSLHandshakeFailedError
 * @desc Export the SSLHandshakeFailedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
class extends y{static get statusCode(){return 525}get isSSLHandshakeFailedError(){return!0}}
/**
 * @module Messages/HTTP/VariantAlsoNegotiatesError
 * @desc Export the VariantAlsoNegotiatesError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.ServiceUnavailableError=class extends y{static get statusCode(){return 503}get isServiceUnavailableError(){return!0}},exports.TAbstractConverterManager=T,exports.TAbstractDataController=C,exports.TAbstractDataConverter=class{constructor(){this._isProcessing=!1,this._queue=[]}convert(e,r,t,s,n){this._queue.push({file:e,parameters:r,onSuccess:t,onProgress:s,onError:n}),this._isProcessing||this._processQueue()}_processQueue(){if(0===this._queue.length)return void(this._isProcessing=!1);this._isProcessing=!0;const e=this,r=this._queue.shift(),t=r.file,s=r.parameters,n=r.onSuccess,i=r.onProgress,o=r.onError;e._convert(t,s,function(r){n(r),e._processQueue()},function(e){i(e)},function(r){o(r),e._processQueue()})}_convert(){}},exports.TAbstractDataInserter=class{constructor(e={}){const r={driver:null,...e};this._driver=r.driver,this._isProcessing=!1,this._queue=[]}save(e,r,t,s,n){e?r?(this._queue.push({data:e,parameters:r,onSuccess:t,onProgress:s,onError:n}),this._processQueue()):n("Invalid parent id, unable to set children to unknown database node !!!"):n("Data cannot be null or empty, aborting database insert !!!")}_processQueue(){if(0===this._queue.length||this._isProcessing)return;this._isProcessing=!0;const e=this,r=this._queue.shift(),t=r.data,s=r.parameters,n=r.onSuccess,i=r.onProgress,o=r.onError;e._save(t,s,function(r){n(r),e._isProcessing=!1,e._processQueue()},function(e){i(e)},function(r){o(r),e._isProcessing=!1,e._processQueue()})}_save(){}},exports.TAbstractDatabase=A,exports.TAbstractDatabasePlugin=R,exports.TAbstractFileConverter=S,exports.TAbstractResponder=v,exports.TooManyRequestsError=class extends y{static get statusCode(){return 429}get isTooManyRequestsError(){return!0}}
/**
 * @module Messages/HTTP/UnauthorizedError
 * @desc Export the UnauthorizedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.UnauthorizedError=class extends y{static get statusCode(){return 401}get isUnauthorizedError(){return!0}}
/**
 * @module Messages/HTTP/UnavailableForLegalReasonsError
 * @desc Export the UnavailableForLegalReasonsError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.UnavailableForLegalReasonsError=class extends y{static get statusCode(){return 451}get isUnavailableForLegalReasonsError(){return!0}}
/**
 * @module Messages/HTTP/UnorderedCollectionError
 * @desc Export the UnorderedCollectionError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.UnknownError=m,exports.UnorderedCollectionError=class extends y{static get statusCode(){return 425}get isUnorderedCollectionError(){return!0}}
/**
 * @module Messages/HTTP/UnrecoverableError
 * @desc Export the UnrecoverableError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.UnprocessableEntityError=w,exports.UnrecoverableError=class extends y{static get statusCode(){return 456}get isUnrecoverableError(){return!0}}
/**
 * @module Messages/HTTP/UpgradeRequiredError
 * @desc Export the UpgradeRequiredError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.UpgradeRequiredError=class extends y{static get statusCode(){return 426}get isUpgradeRequiredError(){return!0}},exports.VariantAlsoNegotiatesError=class extends y{static get statusCode(){return 506}get isVariantAlsoNegotiatesError(){return!0}}
/**
 * @module Messages/HTTP/WebServerIsDownError
 * @desc Export the WebServerIsDownError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */,exports.WebServerIsDownError=class extends y{static get statusCode(){return 521}get isWebServerIsDownError(){return!0}};
