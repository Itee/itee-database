"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var iteeValidators=require("itee-validators"),path=_interopDefault(require("path")),globalBuffer=require("buffer"),fs=_interopDefault(require("fs")),stream=require("stream"),CassandraDriver=require("cassandra-driver"),CoucheBaseDriver=require("couchbase"),CouchDBDriver=require("nano"),ElasticSearchDriver=require("elasticsearch"),LevelUpDriver=require("levelup"),iteeUtils=require("itee-utils"),MongoDBDriver=require("mongoose"),MySQLDriver=require("mysql"),Neo4JDriver=require("apoc"),OracleDBDriver=require("oracledb"),PostgreSQL=_interopDefault(require("pg-promise")),RedisDriver=require("redis"),SQLiteDriver=require("sqlite3"),SqlServerDriver=require("tedious");class TAbstractDataController{static __checkData(e,t,r){const a=t.body,s=t.params,n=t.query;return iteeValidators.isDefined(a)&&a[e]?a[e]:iteeValidators.isDefined(s)&&s[e]?s[e]:iteeValidators.isDefined(n)&&n[e]?n[e]:void TAbstractDataController.returnError({title:"Erreur de paramètre",message:`${e} n'existe pas dans les paramètres !`},r)}static _formatError(e){let t=[];if(iteeValidators.isArray(e))for(let r=0,a=e.length;r<a;++r)t=t.concat(TAbstractDataController._formatError(e[r]));else if(iteeValidators.isObject(e))if("ValidationError"===e.name){let r="",a=e.errors;for(let e in a)Object.prototype.hasOwnProperty.call(a,e)&&(r+=a[e].message+"<br>");t.push({title:"Erreur de validation",message:r||"Aucun message d'erreur... Gloups !"})}else"VersionError"===e.name?t.push({title:"Erreur de base de donnée",message:"Aucun document correspondant n'as put être trouvé pour la requete !"}):t.push({title:e.title||"Erreur",message:e.message||"Aucun message d'erreur... Gloups !"});else{if(!iteeValidators.isString(e))throw new Error(`Unknown error type: ${e} !`);t.push({title:"Erreur",message:e})}return t}static returnNotFound(e){if(iteeValidators.isFunction(e))return e();e.headersSent||e.status(204).end()}static returnError(e,t){if(iteeValidators.isFunction(t))return t(e,null);if(t.headersSent)return;const r=TAbstractDataController._formatError(e);t.format({"application/json":()=>{t.status(500).json(r)},default:()=>{t.status(406).send("Not Acceptable")}})}static returnData(e,t){if(iteeValidators.isFunction(t))return t(null,e);if(t.headersSent)return;const r=iteeValidators.isArray(e)?e:[e];t.format({"application/json":()=>{t.status(200).json(r)},default:()=>{t.status(406).send("Not Acceptable")}})}static returnErrorAndData(e,t,r){if(iteeValidators.isFunction(r))return r(e,t);if(r.headersSent)return;const a={errors:e,datas:t};r.format({"application/json":()=>{r.status(416).json(a)},default:()=>{r.status(416).send("Range Not Satisfiable")}})}constructor(e={}){const t={driver:null,useNext:!1,...e};this._driver=t.driver,this._useNext=t.useNext}return(e,t={}){const r=Object.assign({immediate:null,beforeAll:null,beforeReturnErrorAndData:null,afterReturnErrorAndData:null,beforeReturnError:null,afterReturnError:null,beforeReturnData:null,afterReturnData:null,beforeReturnNotFound:null,afterReturnNotFound:null,afterAll:null},t,{returnErrorAndData:TAbstractDataController.returnErrorAndData.bind(this),returnError:TAbstractDataController.returnError.bind(this),returnData:TAbstractDataController.returnData.bind(this),returnNotFound:TAbstractDataController.returnNotFound.bind(this)});return r.immediate&&r.immediate(),function(t=null,a=null){const s=iteeValidators.isDefined(a),n=iteeValidators.isDefined(t);r.beforeAll&&r.beforeAll(),s&&n?(r.beforeReturnErrorAndData&&r.beforeReturnErrorAndData(t,a),r.returnErrorAndData(t,a,e),r.afterReturnErrorAndData&&r.afterReturnErrorAndData(t,a)):s&&!n?(r.beforeReturnData&&r.beforeReturnData(a),r.returnData(a,e),r.afterReturnData&&r.afterReturnData(a)):!s&&n?(r.beforeReturnError&&r.beforeReturnError(t),r.returnError(t,e),r.afterReturnError&&r.afterReturnError(t)):s||n||(r.beforeReturnNotFound&&r.beforeReturnNotFound(),r.returnNotFound(e),r.afterReturnNotFound&&r.afterReturnNotFound()),r.afterAll&&r.afterAll()}}create(e,t,r){const a=e.body;iteeValidators.isNotDefined(a)?TAbstractDataController.returnError({title:"Erreur de paramètre",message:"Le corps de la requete ne peut pas être null ou indefini."},this._useNext?r:t):iteeValidators.isArray(a)?iteeValidators.isEmptyArray(a)?TAbstractDataController.returnError({title:"Erreur de paramètre",message:"Le tableau d'objet de la requete ne peut pas être vide."},this._useNext?r:t):this._createMany(a,t,r):iteeValidators.isObject(a)?iteeValidators.isEmptyObject(a)?TAbstractDataController.returnError({title:"Erreur de paramètre",message:"L'objet de la requete ne peut pas être vide."},this._useNext?r:t):this._createOne(a,t,r):TAbstractDataController.returnError({title:"Erreur de paramètre",message:"Le type de donnée de la requete est invalide. Les paramètres valides sont objet ou un tableau d'objet."},this._useNext?r:t)}_createOne(){}_createMany(){}read(e,t,r){const a=e.params.id,s=e.body,n=iteeValidators.isDefined(s),o=n?s.ids:null,i=n?s.query:null,l=n?s.projection:null;iteeValidators.isDefined(a)?iteeValidators.isNotString(a)?TAbstractDataController.returnError({title:"Erreur de paramètre",message:"L'identifiant devrait être une chaine de caractères."},this._useNext?r:t):iteeValidators.isEmptyString(a)||iteeValidators.isBlankString(a)?TAbstractDataController.returnError({title:"Erreur de paramètre",message:"L'identifiant ne peut pas être une chaine de caractères vide."},this._useNext?r:t):this._readOne(a,l,t,r):iteeValidators.isDefined(o)?iteeValidators.isNotArray(o)?TAbstractDataController.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants devrait être un tableau de chaine de caractères."},this._useNext?r:t):iteeValidators.isEmptyArray(o)?TAbstractDataController.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants ne peut pas être vide."},this._useNext?r:t):this._readMany(o,l,t,r):iteeValidators.isDefined(i)?iteeValidators.isNotObject(i)?TAbstractDataController.returnError({title:"Erreur de paramètre",message:"La requete devrait être un objet javascript."},this._useNext?r:t):iteeValidators.isEmptyObject(i)?this._readAll(l,t,r):this._readWhere(i,l,t,r):TAbstractDataController.returnError({title:"Erreur de paramètre",message:"La requete ne peut pas être null."},this._useNext?r:t)}_readOne(){}_readMany(){}_readWhere(){}_readAll(){}update(e,t,r){const a=e.params.id,s=e.body,n=iteeValidators.isDefined(s),o=n?s.ids:null,i=n?s.query:null,l=n?s.update:null;iteeValidators.isNotDefined(l)?TAbstractDataController.returnError({title:"Erreur de paramètre",message:"La mise à jour a appliquer ne peut pas être null ou indefini."},this._useNext?r:t):iteeValidators.isDefined(a)?iteeValidators.isNotString(a)?TAbstractDataController.returnError({title:"Erreur de paramètre",message:"L'identifiant devrait être une chaine de caractères."},this._useNext?r:t):iteeValidators.isEmptyString(a)||iteeValidators.isBlankString(a)?TAbstractDataController.returnError({title:"Erreur de paramètre",message:"L'identifiant ne peut pas être une chaine de caractères vide."},this._useNext?r:t):this._updateOne(a,l,t,r):iteeValidators.isDefined(o)?iteeValidators.isNotArray(o)?TAbstractDataController.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants devrait être un tableau de chaine de caractères."},this._useNext?r:t):iteeValidators.isEmptyArray(o)?TAbstractDataController.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants ne peut pas être vide."},this._useNext?r:t):this._updateMany(o,l,t,r):iteeValidators.isDefined(i)?iteeValidators.isNotObject(i)?TAbstractDataController.returnError({title:"Erreur de paramètre",message:"La requete devrait être un objet javascript."},this._useNext?r:t):iteeValidators.isEmptyObject(i)?this._updateAll(l,t,r):this._updateWhere(i,l,t,r):TAbstractDataController.returnError({title:"Erreur de paramètre",message:"La requete ne peut pas être vide."},this._useNext?r:t)}_updateOne(){}_updateMany(){}_updateWhere(){}_updateAll(){}delete(e,t,r){const a=e.params.id,s=e.body,n=iteeValidators.isDefined(s),o=n?s.ids:null,i=n?s.query:null;iteeValidators.isDefined(a)?iteeValidators.isNotString(a)?TAbstractDataController.returnError({title:"Erreur de paramètre",message:"L'identifiant devrait être une chaine de caractères."},this._useNext?r:t):iteeValidators.isEmptyString(a)||iteeValidators.isBlankString(a)?TAbstractDataController.returnError({title:"Erreur de paramètre",message:"L'identifiant ne peut pas être une chaine de caractères vide."},this._useNext?r:t):this._deleteOne(a,t,r):iteeValidators.isDefined(o)?iteeValidators.isNotArray(o)?TAbstractDataController.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants devrait être un tableau de chaine de caractères."},this._useNext?r:t):iteeValidators.isEmptyArray(o)?TAbstractDataController.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants ne peut pas être vide."},this._useNext?r:t):this._deleteMany(o,t,r):iteeValidators.isDefined(i)?iteeValidators.isNotObject(i)?TAbstractDataController.returnError({title:"Erreur de paramètre",message:"La requete devrait être un objet javascript."},this._useNext?r:t):iteeValidators.isEmptyObject(i)?this._deleteAll(t,r):this._deleteWhere(i,t,r):TAbstractDataController.returnError({title:"Erreur de paramètre",message:"La requete ne peut pas être vide."},this._useNext?r:t)}_deleteOne(){}_deleteMany(){}_deleteWhere(){}_deleteAll(){}}class TAbstractDataConverter{constructor(){this._isProcessing=!1,this._queue=[]}convert(e,t,r,a,s){this._queue.push({file:e,parameters:t,onSuccess:r,onProgress:a,onError:s}),this._isProcessing||this._processQueue()}_processQueue(){if(0===this._queue.length)return void(this._isProcessing=!1);this._isProcessing=!0;const e=this,t=this._queue.shift(),r=t.file,a=t.parameters,s=t.onSuccess,n=t.onProgress,o=t.onError;e._convert(r,a,function(t){s(t),e._processQueue()},function(e){n(e)},function(t){o(t),e._processQueue()})}_convert(){}}class TAbstractConverterManager{static _formatError(e){let t=[];if(iteeValidators.isArray(e))for(let r=0,a=e.length;r<a;++r)t=t.concat(TAbstractConverterManager._formatError(e[r]));else if(iteeValidators.isObject(e))if("ValidationError"===e.name){let r="",a=e.errors;for(let e in a)Object.prototype.hasOwnProperty.call(a,e)&&(r+=a[e].message+"<br>");t.push({title:"Erreur de validation",message:r||"Aucun message d'erreur... Gloups !"})}else"VersionError"===e.name?t.push({title:"Erreur de base de donnée",message:"Aucun document correspondant n'as put être trouvé pour la requete !"}):t.push({title:e.title||"Erreur",message:e.message||"Aucun message d'erreur... Gloups !"});else{if(!iteeValidators.isString(e))throw new Error(`Unknown error type: ${e} !`);t.push({title:"Erreur",message:e})}return t}static _convertFilesObjectToArray(e){const t=[];for(let r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.push(e[r]);return t}static returnNotFound(e){if(iteeValidators.isFunction(e))return e();e.headersSent||e.status(204).end()}static returnError(e,t){if(iteeValidators.isFunction(t))return t(e,null);if(t.headersSent)return;const r=TAbstractConverterManager._formatError(e);t.format({"application/json":()=>{t.status(500).json(r)},default:()=>{t.status(406).send("Not Acceptable")}})}static returnData(e,t){if(iteeValidators.isFunction(t))return t(null,e);if(t.headersSent)return;const r=iteeValidators.isArray(e)?e:[e];t.format({"application/json":()=>{t.status(200).json(r)},default:()=>{t.status(406).send("Not Acceptable")}})}static returnErrorAndData(e,t,r){if(iteeValidators.isFunction(r))return r(e,t);if(r.headersSent)return;const a={errors:e,datas:t};r.format({"application/json":()=>{r.status(416).json(a)},default:()=>{r.status(416).send("Range Not Satisfiable")}})}static return(e,t={}){const r=Object.assign({immediate:null,beforeAll:null,beforeReturnErrorAndData:null,afterReturnErrorAndData:null,beforeReturnError:null,afterReturnError:null,beforeReturnData:null,afterReturnData:null,beforeReturnNotFound:null,afterReturnNotFound:null,afterAll:null},t,{returnErrorAndData:TAbstractConverterManager.returnErrorAndData.bind(this),returnError:TAbstractConverterManager.returnError.bind(this),returnData:TAbstractConverterManager.returnData.bind(this),returnNotFound:TAbstractConverterManager.returnNotFound.bind(this)});return r.immediate&&r.immediate(),function(t=null,a=null){const s=iteeValidators.isDefined(a),n=iteeValidators.isDefined(t);r.beforeAll&&r.beforeAll(),s&&n?(r.beforeReturnErrorAndData&&r.beforeReturnErrorAndData(t,a),r.returnErrorAndData(t,a,e),r.afterReturnErrorAndData&&r.afterReturnErrorAndData(t,a)):s&&!n?(r.beforeReturnData&&r.beforeReturnData(a),r.returnData(a,e),r.afterReturnData&&r.afterReturnData(a)):!s&&n?(r.beforeReturnError&&r.beforeReturnError(t),r.returnError(t,e),r.afterReturnError&&r.afterReturnError(t)):s||n||(r.beforeReturnNotFound&&r.beforeReturnNotFound(),r.returnNotFound(e),r.afterReturnNotFound&&r.afterReturnNotFound()),r.afterAll&&r.afterAll()}}constructor(e={}){const t={driver:null,useNext:!1,converters:new Map,convertersOptions:void 0,rules:{},inserter:{},...e};this._driver=t.driver,this._useNext=t.useNext,this._converters=t.converters,this._convertersOptions=t.convertersOptions,this._rules=t.rules,this._inserter=new t.inserter(this._driver),this._errors=[],this._processedFiles=[]}_fileConversionSuccessCallback(e,t,r,a){r?r(a):this._inserter.save(a,this._convertersOptions,this._fileInsertionSuccessCallback.bind(this,e,t),this._fileConversionProgressCallback.bind(this,e),this._fileConversionErrorCallback.bind(this,e,t))}_fileInsertionSuccessCallback(e,t,r){this._checkEndOfReturns(e,t,r)}_fileConversionProgressCallback(e,t){console.log(t)}_fileConversionErrorCallback(e,t,r){this._errors.push(r),this._checkEndOfReturns(e,t,null)}_checkEndOfReturns(e,t,r){this._errors.length>0?this._useNext?t(this._errors):(TAbstractConverterManager.return(e)(this._errors),this._errors=[]):this._useNext?t():TAbstractConverterManager.returnData(r,e)}processFiles(e,t,r){const a=TAbstractConverterManager._convertFilesObjectToArray(e.files),s=a.length;this._convertersOptions=e.body;for(let e=0;e<s;e++){let t=a[e];if(this._processedFiles.includes(t.filename))return;this._processedFiles.push(t.filename)}0===s&&(this._useNext?r(`Impossible d'analyser ${s} fichiers associatifs simultanément !`):TAbstractConverterManager.returnError(`Impossible d'analyser ${s} fichiers associatifs simultanément !`,t)),this._processFiles(a,this._convertersOptions,t,r)}_processFiles(e,t,r,a){const s=e.map(e=>path.extname(e.filename)),n=this._rules.filter(e=>{const t=e.on;if(Array.isArray(t)){for(var r=0;r<t.length;r++)if(!s.includes(t[r]))return!1;return!0}return s.includes(t)});for(let s=0,o=n.length;s<o;s++){let o=n[s].use;if(Array.isArray(o)){let s=void 0;for(let n=o.length-1;n>=0;n--){const i=o[n];0===n?this._converters[i].convert(e,t,this._fileConversionSuccessCallback.bind(this,r,a,s),this._fileConversionProgressCallback.bind(this,r),this._fileConversionErrorCallback.bind(this,r,a)):s=n===o.length-1?e=>{this._converters[i].convert(e,t,this._fileConversionSuccessCallback.bind(this,r,a,null),this._fileConversionProgressCallback.bind(this,r),this._fileConversionErrorCallback.bind(this,r,a))}:e=>{this._converters[i].convert(e,t,this._fileConversionSuccessCallback.bind(this,r,a,s),this._fileConversionProgressCallback.bind(this,r),this._fileConversionErrorCallback.bind(this,r,a))}}}else this._converters[o].convert(e[0].file,t,this._fileConversionSuccessCallback.bind(this,r,a,null),this._fileConversionProgressCallback.bind(this,r),this._fileConversionErrorCallback.bind(this,r,a))}}}class TAbstractDataInserter{constructor(e={}){const t={driver:null,...e};this._driver=t.driver,this._isProcessing=!1,this._queue=[]}save(e,t,r,a,s){e?t?(this._queue.push({data:e,parameters:t,onSuccess:r,onProgress:a,onError:s}),this._processQueue()):s("Invalid parent id, unable to set children to unknown database node !!!"):s("Data cannot be null or empty, aborting database insert !!!")}_processQueue(){if(0===this._queue.length||this._isProcessing)return;this._isProcessing=!0;const e=this,t=this._queue.shift(),r=t.data,a=t.parameters,s=t.onSuccess,n=t.onProgress,o=t.onError;e._save(r,a,function(t){s(t),e._isProcessing=!1,e._processQueue()},function(e){n(e)},function(t){o(t),e._isProcessing=!1,e._processQueue()})}_save(){}}class MemoryWriteStream extends stream.Writable{constructor(e){super(e);const t=e.bufferSize||globalBuffer.kStringMaxLength;this.memoryBuffer=Buffer.alloc(t),this.offset=0}toString(){const e=this.memoryBuffer.toString();return this._releaseMemory(),e}_final(e){e()}_write(e,t,r){const a=Buffer.isBuffer(e)?e:new Buffer(e,t);for(let e=0,t=a.length;e<t;e++)this.memoryBuffer[this.offset]=a[e],this.offset++;r()}_writev(e,t){for(let t=0,r=e.length;t<r;t++)this.memoryBuffer=Buffer.concat([this.memoryBuffer,e[t]]);t()}_releaseMemory(){this.memoryBuffer=null}toArrayBuffer(){const e=this.memoryBuffer,t=new ArrayBuffer(e.length),r=new Uint8Array(t);for(let t=0;t<e.length;++t)r[t]=e[t];return this._releaseMemory(),t}toJSON(){return JSON.parse(this.toString())}}class TAbstractFileConverter{constructor(e={}){const t={dumpType:TAbstractFileConverter.DumpType.ArrayBuffer,...e};this.dumpType=t.dumpType,this._isProcessing=!1,this._queue=[]}get dumpType(){return this._dumpType}set dumpType(e){if(iteeValidators.isNull(e))throw new TypeError("Dump type cannot be null ! Expect a non empty string.");if(iteeValidators.isUndefined(e))throw new TypeError("Dump type cannot be undefined ! Expect a non empty string.");this._dumpType=e}setDumpType(e){return this.dumpType=e,this}convert(e,t,r,a,s){e?(this._queue.push({file:e,parameters:t,onSuccess:r,onProgress:a,onError:s}),this._processQueue()):s("File cannot be null or empty, aborting file convertion !!!")}_processQueue(){if(0===this._queue.length||this._isProcessing)return;this._isProcessing=!0;const e=this,t=this._queue.shift(),r=t.file,a=t.parameters,s=t.onSuccess,n=t.onProgress,o=t.onError;function i(t){s(t),e._isProcessing=!1,e._processQueue()}function l(e){n(e)}function c(t){o(t),e._isProcessing=!1,e._processQueue()}e._dumpFileInMemoryAs(e._dumpType,r,a,function(t){e._convert(t,a,i,l,c)},l,c)}_dumpFileInMemoryAs(e,t,r,a,s,n){let o=!1;const i=fs.createReadStream(t);i.on("error",e=>{console.error(`Read stream on error: ${e}`),o=!0,n(e)});const l=parseInt(r.fileSize),c=new MemoryWriteStream({bufferSize:l});c.on("error",e=>{o=!0,n(e)}),c.on("finish",()=>{if(!o){switch(e){case TAbstractFileConverter.DumpType.ArrayBuffer:a(c.toArrayBuffer());break;case TAbstractFileConverter.DumpType.String:a(c.toString());break;case TAbstractFileConverter.DumpType.JSON:a(c.toJSON());break;default:throw new RangeError(`Invalid switch parameter: ${e}`)}i.unpipe(),i.close(),c.end()}}),i.pipe(c)}_convert(){}}TAbstractFileConverter.MAX_FILE_SIZE=67108864,TAbstractFileConverter.DumpType=Object.freeze({ArrayBuffer:0,String:1,JSON:2});class TAbstractDatabasePlugin{static _registerRoutesTo(e,t,r,a,s){for(let n=0,o=s.length;n<o;n++){const o=s[n],i=new(a.get(o.controller.name))({driver:e,...o.controller.options}),l=r({mergeParams:!0});console.log(`\tAdd controller for base route: ${o.route}`),t.use(o.route,TAbstractDatabasePlugin._populateRouter(l,i,o.controller.can))}}static _populateRouter(e,t,r={}){for(let a in r){const s=r[a];console.log(`\t\tMap route ${s.over} on (${s.on}) to ${t.constructor.name}.${a} method.`),e[s.on](s.over,t[a].bind(t))}return e}constructor(e={}){const t={controllers:new Map,descriptors:[],...e};this.controllers=t.controllers,this.descriptors=t.descriptors,this.__dirname=void 0}get controllers(){return this._controllers}set controllers(e){if(iteeValidators.isNull(e))throw new TypeError("Controllers cannot be null ! Expect a map of controller.");if(iteeValidators.isUndefined(e))throw new TypeError("Controllers cannot be undefined ! Expect a map of controller.");if(!(e instanceof Map))throw new TypeError(`Controllers cannot be an instance of ${e.constructor.name} ! Expect a map of controller.`);this._controllers=e}get descriptors(){return this._descriptors}set descriptors(e){if(iteeValidators.isNull(e))throw new TypeError("Descriptors cannot be null ! Expect an array of POJO.");if(iteeValidators.isUndefined(e))throw new TypeError("Descriptors cannot be undefined ! Expect an array of POJO.");this._descriptors=e}addController(e){return this._controllers.set(e.name,e),this}addDescriptor(e){return this._descriptors.push(e),this}beforeRegisterRoutes(){}registerTo(e,t,r){this.beforeRegisterRoutes(e),TAbstractDatabasePlugin._registerRoutesTo(e,t,r,this._controllers,this._descriptors)}}class TAbstractDatabase{constructor(e={}){const t={driver:null,application:null,router:null,plugins:[],...e};this.driver=t.driver,this.application=t.application,this.router=t.router,this.plugins=t.plugins,this.init(),this._registerPlugins()}get plugins(){return this._plugins}set plugins(e){if(iteeValidators.isNull(e))throw new TypeError("Plugins cannot be null ! Expect an array of TDatabasePlugin.");if(iteeValidators.isUndefined(e))throw new TypeError("Plugins cannot be undefined ! Expect an array of TDatabasePlugin.");this._plugins=e}get router(){return this._router}set router(e){if(iteeValidators.isNull(e))throw new TypeError("Router cannot be null ! Expect a Express Router.");if(iteeValidators.isUndefined(e))throw new TypeError("Router cannot be undefined ! Expect a Express Router.");this._router=e}get application(){return this._application}set application(e){if(iteeValidators.isNull(e))throw new TypeError("Application cannot be null ! Expect a Express Application.");if(iteeValidators.isUndefined(e))throw new TypeError("Application cannot be undefined ! Expect a Express Application.");this._application=e}get driver(){return this._driver}set driver(e){if(iteeValidators.isNull(e))throw new TypeError("Driver cannot be null ! Expect a database driver.");if(iteeValidators.isUndefined(e))throw new TypeError("Driver cannot be undefined ! Expect a database driver.");this._driver=e}setPlugins(e){return this.plugins=e,this}setRouter(e){return this.router=e,this}setApplication(e){return this.application=e,this}setDriver(e){return this.driver=e,this}init(){}_registerPlugins(){for(let[e,t]of Object.entries(this._plugins))this._registerPackagePlugin(e,t)?console.log(`Use ${e} plugin from node_modules`):this._registerLocalPlugin(e,t)?console.log(`Use ${e} plugin from local folder`):console.error(`Unable to register the plugin ${e} the package or local folder doesn't seem to exist ! Skip it.`)}_registerPackagePlugin(e){let t=!1;try{const r=require(e);r instanceof TAbstractDatabasePlugin?(r.__dirname=path.dirname(require.resolve(e)),r.registerTo(this._driver,this._application,this._router),t=!0):console.error(`The plugin ${e} doesn't seem to be an instance of an extended class from TAbstractDatabasePlugin ! Skip it.`)}catch(e){e.code&&"MODULE_NOT_FOUND"===e.code||console.error(e)}return t}_registerLocalPlugin(e){let t=!1;try{const r=path.join(__dirname,"../../../","databases/plugins/",e,`${e}.js`),a=require(r);a instanceof TAbstractDatabasePlugin?(a.__dirname=path.dirname(require.resolve(r)),a.registerTo(this._driver,this._application,this._router),t=!0):console.error(`The plugin ${e} doesn't seem to be an instance of an extended class from TAbstractDatabasePlugin ! Skip it.`)}catch(e){console.error(e)}return t}connect(){}close(){}on(){}}class TCassandraDatabase extends TAbstractDatabase{constructor(e={}){super({...e,driver:CassandraDriver})}close(){}connect(){new this._driver.Client({contactPoints:["localhost"]}).execute("select key from system.local",function(e,t){if(e)throw e;console.log(t.rows[0])})}init(){super.init()}on(){}}class TCouchBaseDatabase extends TAbstractDatabase{constructor(e={}){super({...e,driver:CoucheBaseDriver})}close(){}connect(){var e=new this._driver.Cluster("http://localhost:8091").openBucket("bucketName");e.insert("document-key",{name:"Matt",shoeSize:13},function(e,t){e?console.log(e):console.log(t)});var t=this.driver.N1qlQuery.fromString("SELECT d.* FROM `bucketName` d WHERE shoeSize = $1");e.query(t,[13],function(e,t){e?console.log(e):console.log(t)})}init(){super.init()}on(){}}class TCouchDBDatabase extends TAbstractDatabase{constructor(e={}){super({...e,driver:CouchDBDriver})}close(){}connect(){var e=this._driver("http://localhost:5984");e.db.create("books");var t=e.db.use("books");t.insert({name:"The Art of war"},null,function(e,t){e?console.log(e):console.log(t)}),t.list(function(e,t){e?console.log(e):console.log(t.rows)})}init(){super.init()}on(){}}class TElasticSearchDatabase extends TAbstractDatabase{constructor(e={}){super({...e,driver:ElasticSearchDriver})}close(){}connect(){this._driver.Client({host:"localhost:9200"}).search({index:"books",type:"book",body:{query:{multi_match:{query:"express js",fields:["title","description"]}}}}).then(function(e){var t=e.hits.hits;console.log(t)},function(e){console.trace(e.message)})}init(){super.init()}on(){}}class TLevelDBDatabase extends TAbstractDatabase{constructor(e={}){super({...e,driver:LevelUpDriver})}close(){}connect(){var e=this._driver("./mydb");e.put("name","LevelUP",function(t){if(t)return console.log("Ooops!",t);e.get("name",function(e,t){if(e)return console.log("Ooops!",e);console.log("name="+t)})})}init(){super.init()}on(){}}class TMongooseController extends TAbstractDataController{constructor(e={}){const t={driver:null,schemaName:"",...e};super(t),this.databaseSchema=this._driver.model(t.schemaName)}get databaseSchema(){return this._databaseSchema}set databaseSchema(e){if(iteeValidators.isNull(e))throw new TypeError("Database schema cannot be null.");if(iteeValidators.isUndefined(e))throw new TypeError("Database schema cannot be undefined.");this._databaseSchema=e}setDatabaseSchema(e){return this.databaseSchema=e,this}_createMany(e,t){super._createMany(e,t),this._databaseSchema.create(e,this.return(t))}_createOne(e,t){super._createOne(e,t),this._databaseSchema.create(e,this.return(t))}_deleteAll(e){super._deleteAll(e),this._databaseSchema.collection.drop(this.return(e))}_deleteMany(e,t){super._deleteMany(e,t),this._databaseSchema.deleteMany({_id:{$in:e}},this.return(t))}_deleteOne(e,t){super._deleteOne(e,t),this._databaseSchema.findByIdAndDelete(e).then(e=>TAbstractDataController.returnData(e,t)).catch(e=>TAbstractDataController.returnError(e,t))}_deleteWhere(e,t){super._deleteWhere(e,t),this._databaseSchema.deleteMany(e,this.return(t))}_readAll(e,t){super._readAll(e,t),this._databaseSchema.find({},e).lean().exec().then(e=>TAbstractDataController.returnData(e,t)).catch(e=>TAbstractDataController.returnError(e,t))}_readMany(e,t,r){super._readMany(e,t,r),this._databaseSchema.find({_id:{$in:e}},t).lean().exec().then(t=>{iteeValidators.isNull(t)||iteeValidators.isEmptyArray(t)?TAbstractDataController.returnNotFound(r):e.length!==t.length?TAbstractDataController.returnErrorAndData({title:"Missing data",message:"Some requested objects could not be found."},t,r):TAbstractDataController.returnData(t,r)}).catch(e=>TAbstractDataController.returnError(e,r))}_readOne(e,t,r){super._readOne(e,t,r),this._databaseSchema.findById(e,t).lean().exec().then(e=>{iteeValidators.isNull(e)?TAbstractDataController.returnNotFound(r):TAbstractDataController.returnData(e,r)}).catch(e=>TAbstractDataController.returnError(e,r))}_readWhere(e,t,r){super._readWhere(e,t,r),this._databaseSchema.find(e,t).lean().exec().then(e=>TAbstractDataController.returnData(e,r)).catch(e=>TAbstractDataController.returnError(e,r))}_updateAll(e,t){super._updateAll(e,t),this._databaseSchema.update({},e,{multi:!0},this.return(t))}_updateMany(e,t,r){super._updateMany(e,t,r),this._databaseSchema.update({_id:{$in:e}},t,{multi:!0},this.return(r))}_updateOne(e,t,r){super._updateOne(e,t,r),this._databaseSchema.findByIdAndUpdate(e,t).exec().then(e=>TAbstractDataController.returnData(e,r)).catch(e=>TAbstractDataController.returnError(e,r))}_updateWhere(e,t,r){super._updateWhere(e,t,r),this._databaseSchema.update(e,t,{multi:!0},this.return(r))}}class TMongoDBPlugin extends TAbstractDatabasePlugin{get schemas(){return this._schemas}set schemas(e){this._schemas=e}get types(){return this._types}set types(e){this._types=e}addType(e){return this._types.push(e),this}static _registerTypesTo(e,t){const r=path.join(t,"types");if(iteeValidators.isInvalidDirectoryPath(r))return void console.warn(`Unable to find "types" folder for path "${r}"`);const a=iteeUtils.getFilesPathsUnder(r);let s="",n=void 0;for(let t=0,r=a.length;t<r;t++)s=a[t],iteeValidators.isEmptyFile(s,200)?console.warn(`Skip empty core database schema: ${s}`):(n=require(s),iteeValidators.isFunction(n)?(console.log(`Register type: ${s}`),n(e)):console.error(`Unable to register type: ${s}`))}static _registerSchemasTo(e,t){const r=path.join(t,"schemas");if(iteeValidators.isInvalidDirectoryPath(r))return void console.warn(`Unable to find "schemas" folder for path "${r}"`);const a=iteeUtils.getFilesPathsUnder(r);let s="",n=void 0;for(let t=0,r=a.length;t<r;t++)s=a[t],iteeValidators.isEmptyFile(s)?console.warn(`Skip empty local database schema: ${s}`):(n=require(s),iteeValidators.isFunction(n)?(console.log(`Direct register local database schema: ${s}`),n(e)):iteeValidators.isFunction(n.registerModelTo)?(console.log(`Register local database schema: ${s}`),n.registerModelTo(e)):console.error(`Unable to register local database schema: ${s}`))}constructor(e={}){const t={types:[],schemas:[],...e};super(t),this.types=t.types,this.schemas=t.schemas}beforeRegisterRoutes(e){super.beforeRegisterRoutes(e),this._registerTypes(e),TMongoDBPlugin._registerTypesTo(e,this.__dirname),TMongoDBPlugin._registerSchemasTo(e,this.__dirname)}_registerTypes(e){for(let t of this._types)console.log(`Register type: ${t.name}`),t(e)}}class TMongoDBDatabase extends TAbstractDatabase{constructor(e={}){const t={databaseUrl:"",...e,driver:MongoDBDriver};super(t),this.databaseUrl=t.databaseUrl}close(e){this._driver.connection.close(e)}connect(){this._driver.connect(this.databaseUrl,{useNewUrlParser:!0}).then(e=>{console.log(`MongoDB at ${this.databaseUrl} is connected ! ${e}`)}).catch(e=>{console.error(e)})}init(){super.init()}on(e,t){-1!==["connecting","connected","open","disconnecting","disconnected","reconnected","close","error"].indexOf(e)&&this._driver.connection.on(e,t)}}class TMySQLDatabase extends TAbstractDatabase{constructor(e={}){super({...e,driver:MySQLDriver})}close(){}connect(){const e=this._driver.createConnection({host:"localhost",user:"dbuser",password:"s3kreee7",database:"my_db"});e.connect(),e.query("SELECT 1 + 1 AS solution",function(e,t,r){if(e)throw e;console.log("The solution is: ",t[0].solution),console.log("The fields is: ",r)}),e.end()}on(){}_initDatabase(){super._initDatabase()}}class TNeo4JDatabase extends TAbstractDatabase{constructor(e={}){super({...e,driver:Neo4JDriver})}close(){}connect(){this._driver.query("match (n) return n").exec().then(function(e){console.log(e)},function(e){console.log(e)})}on(){}_initDatabase(){super._initDatabase()}}class TOracleDatabase extends TAbstractDatabase{constructor(e={}){super({...e,driver:OracleDBDriver})}close(){}connect(){const e={user:"DbUser",password:"DbPassword",connectString:"localhost:1521/orcl"};!async function(t){let r;try{r=await this._driver.getConnection(e);const a=await r.execute("select * from employees where employee_id = :id",[t]);console.log(a.rows[0])}catch(e){console.log("Ouch!",e)}finally{r&&await r.close()}}(101)}on(){}_initDatabase(){super._initDatabase()}}const PostgreSQLDriver=PostgreSQL({});class TPostgreSQLDatabase extends TAbstractDatabase{constructor(e={}){const t={host:"localhost",port:"5432",database:"postgres",...e,driver:PostgreSQLDriver};super(t),this._host=t.host,this._port=t.port,this._database=t.database}close(){}connect(){this._driver.one(" SELECT 1 ",[]).then(e=>{console.log(`PostgreSQL at ${this._host}:${this._port}/${this._database} is connected ! ${e}`)}).catch(e=>{console.log("PostgreSQL - Connection error ",e)})}init(){super.init()}on(){}}class TPostgreSQLController extends TAbstractDataController{constructor(e={}){const t={driver:null,tableName:"",tableFields:[],...e};super(t),this.tableName=t.tableName,this.tableFields=t.tableFields}get tableFields(){return this._tableFields}set tableFields(e){const t="Expect an instance of Array of String.";if(iteeValidators.isNull(e))throw new TypeError(`Table fields cannot be null ! ${t}`);if(iteeValidators.isUndefined(e))throw new TypeError(`Table fields cannot be undefined ! ${t}`);let r="";for(let t=0,a=e.length;t<a;t++)r+=`${e[t]}, `;this._tableFields=r.slice(0,-2)}get tableName(){return this._tableName}set tableName(e){const t="Expect an instance of String.";if(iteeValidators.isNull(e))throw new TypeError(`Table name cannot be null ! ${t}`);if(iteeValidators.isUndefined(e))throw new TypeError(`Table name cannot be undefined ! ${t}`);if(iteeValidators.isNotString(e))throw new TypeError(`Table name cannot be an instance of ${e.constructor.name} ! ${t}`);this._tableName=e}setTableName(e){return this.tableName=e,this}_createMany(e,t){super._createOne(e,t);const r=[],a=[];let s=e.length,n=null,o=null,i=null,l=null,c=null,u=null,d=null;for(let h in e){n=e[h],o=Object.keys(n),i=Object.values(n),l=0,c="(",u="(";for(let e in o)c+=`${e}, `,u+=`$${++l}, `;c=c.slice(0,-2),u=u.slice(0,-2),c+=")",u+=")",d=`INSERT INTO ${this._tableName} ${c} VALUES ${u}`,this._driver.one(d,i).then(e=>{r.push(e)}).catch(e=>{a.push(e)}).finally(()=>{if(--s>0)return;const e=r.length>0,n=a.length>0;e&&n?TAbstractDataController.returnErrorAndData(a,r,t):!e&&n?TAbstractDataController.returnError(a,t):e&&!n?TAbstractDataController.returnData(r,t):e||n||TAbstractDataController.returnData(null,t)})}}_createOne(e,t){super._createOne(e,t);const r=Object.keys(e),a=Object.values(e);let s=0,n="(",o="(";for(let e in r)n+=`${e}, `,o+=`$${++s}, `;n=n.slice(0,-2),o=o.slice(0,-2),n+=")",o+=")";let i=`INSERT INTO ${this._tableName} ${n} VALUES ${o}`;this._driver.one(i,a).then(e=>{TAbstractDataController.returnData(e,t)}).catch(e=>{TAbstractDataController.returnError(e,t)})}_deleteAll(e){super._deleteAll(e),this._driver.one(` TRUNCATE TABLE ${this._tableName} `).then(t=>{TAbstractDataController.returnData(t,e)}).catch(t=>{TAbstractDataController.returnError(t,e)})}_deleteMany(e,t){super._deleteMany(e,t),this._driver.any(` DELETE FROM ${this._tableName} WHERE id IN ($1:list) `,[e]).then(e=>{TAbstractDataController.returnData(e,t)}).catch(e=>{TAbstractDataController.returnError(e,t)})}_deleteOne(e,t){super._deleteOne(e,t),this._driver.one(` DELETE FROM ${this._tableName} WHERE id=$1 `,[e]).then(e=>{TAbstractDataController.returnData(e,t)}).catch(e=>{TAbstractDataController.returnError(e,t)})}_deleteWhere(e,t){super._deleteWhere(e,t),TAbstractDataController.returnError("DeleteWhere method is not implemented yet ! Sorry for the disagrement.",t)}_readAll(e,t){super._readAll(e,t),this._driver.any(` SELECT ${this._tableFields} FROM ${this._tableName} `).then(e=>{TAbstractDataController.returnData(e,t)}).catch(e=>{TAbstractDataController.returnError(e,t)})}_readMany(e,t,r){super._readMany(e,t,r),this._driver.any(` SELECT ${this._tableFields} FROM ${this._tableName} WHERE id IN ($1:list)`,[e]).then(e=>{TAbstractDataController.returnData(e,r)}).catch(e=>{TAbstractDataController.returnError(e,r)})}_readOne(e,t,r){super._readOne(e,t,r),this._driver.one(` SELECT ${this._tableFields} FROM ${this._tableName} WHERE id = $1 `,[e]).then(e=>{TAbstractDataController.returnData(e,r)}).catch(e=>{TAbstractDataController.returnError(e,r)})}_readWhere(e,t,r){super._readWhere(e,t,r),this._driver.any(` SELECT ${this._tableFields} FROM ${this._tableName} WHERE ${t}`).then(e=>{TAbstractDataController.returnData(e,r)}).catch(e=>{TAbstractDataController.returnError(e,r)})}_updateAll(e,t){super._updateAll(e,t),TAbstractDataController.returnError("UpdateAll method is not implemented yet ! Sorry for the disagrement.",t)}_updateMany(e,t,r){super._updateMany(e,t,r);const a=e.length,s=t.length;if(a!==s)return void TAbstractDataController.returnError("Number of ids doesn't match the number of updates. Abort updates !",r);const n=[],o=[];let i=a,l=null,c=null,u=null,d=null,h=null,p=null,b=null,_=null;for(let a=0;a<s;a++){l=e[a],c=t[a],u=Object.keys(c),d=Object.values(c),h=1,p="";for(let e in u)p+=`${e}=$${++h}, `;p=p.slice(0,-2),p+=")",b=` UPDATE ${this._tableName} SET ${p} WHERE id=$1 `,_=[l].concat(d),this._driver.one(b,_).then(e=>{n.push(e)}).catch(e=>{o.push(e)}).finally(()=>{if(--i>0)return;const e=n.length>0,t=o.length>0;e&&t?TAbstractDataController.returnErrorAndData(o,n,r):!e&&t?TAbstractDataController.returnError(o,r):e&&!t?TAbstractDataController.returnData(n,r):e||t||TAbstractDataController.returnData(null,r)})}}_updateOne(e,t,r){super._updateOne(e,t,r);const a=Object.keys(t),s=Object.values(t);let n=1,o="";for(let e in a)o+=`${e}=$${++n}, `;o=o.slice(0,-2),o+=")";let i=` UPDATE ${this._tableName} SET ${o} WHERE id=$1 `,l=[e].concat(s);this._driver.one(i,l).then(e=>{TAbstractDataController.returnData(e,r)}).catch(e=>{TAbstractDataController.returnError(e,r)})}_updateWhere(e,t,r){super._updateWhere(e,t,r),TAbstractDataController.returnError("UpdateWhere method is not implemented yet ! Sorry for the disagrement.",r)}}class TRedisDatabase extends TAbstractDatabase{constructor(e={}){super({...e,driver:RedisDriver})}close(){}connect(){var e=this._driver.createClient();e.on("error",function(e){console.log("Error "+e)}),e.set("string key","string val",this._driver.print),e.hset("hash key","hashtest 1","some value",this._driver.print),e.hset(["hash key","hashtest 2","some other value"],this._driver.print),e.hkeys("hash key",function(t,r){console.log(r.length+" replies:"),r.forEach(function(e,t){console.log("    "+t+": "+e)}),e.quit()})}init(){super.init()}on(){}}class TSQLiteDatabase extends TAbstractDatabase{constructor(e={}){super({...e,driver:SQLiteDriver})}close(){}connect(){var e=new this._driver.Database(":memory:");e.serialize(function(){e.run("CREATE TABLE lorem (info TEXT)");for(var t=e.prepare("INSERT INTO lorem VALUES (?)"),r=0;r<10;r++)t.run("Ipsum "+r);t.finalize(),e.each("SELECT rowid AS id, info FROM lorem",function(e,t){console.log(t.id+": "+t.info)})}),e.close()}init(){super.init()}on(){}}const DEFAULT_CONNECT_TIMEOUT=15e3,DEFAULT_CLIENT_REQUEST_TIMEOUT=15e3,DEFAULT_CANCEL_TIMEOUT=5e3,DEFAULT_CONNECT_RETRY_INTERVAL=500,DEFAULT_PACKET_SIZE=4096,DEFAULT_TEXTSIZE=2147483647,DEFAULT_DATEFIRST=7,DEFAULT_PORT=1433,DEFAULT_TDS_VERSION="7_4",DEFAULT_LANGUAGE="us_english",DEFAULT_DATEFORMAT="mdy";class TSQLServerDatabase extends TAbstractDatabase{constructor(e={}){const t={server:"localhost",authentication:{type:"default",options:{userName:"dbo",password:"intelCOREi7"}},options:{abortTransactionOnError:!1,appName:void 0,camelCaseColumns:!1,cancelTimeout:DEFAULT_CANCEL_TIMEOUT,columnNameReplacer:void 0,connectionRetryInterval:DEFAULT_CONNECT_RETRY_INTERVAL,connectTimeout:DEFAULT_CONNECT_TIMEOUT,cryptoCredentialsDetails:{},database:void 0,datefirst:DEFAULT_DATEFIRST,dateFormat:DEFAULT_DATEFORMAT,debug:{data:!1,packet:!1,payload:!1,token:!1},enableAnsiNull:!0,enableAnsiNullDefault:!0,enableAnsiPadding:!0,enableAnsiWarnings:!0,enableArithAbort:!1,enableConcatNullYieldsNull:!0,enableCursorCloseOnCommit:null,enableImplicitTransactions:!1,enableNumericRoundabort:!1,enableQuotedIdentifier:!0,encrypt:!1,fallbackToDefaultDb:!1,instanceName:void 0,language:DEFAULT_LANGUAGE,localAddress:void 0,maxRetriesOnTransientErrors:3,multiSubnetFailover:!1,packetSize:DEFAULT_PACKET_SIZE,port:DEFAULT_PORT,readOnlyIntent:!1,requestTimeout:DEFAULT_CLIENT_REQUEST_TIMEOUT,rowCollectionOnDone:!1,rowCollectionOnRequestCompletion:!1,tdsVersion:DEFAULT_TDS_VERSION,textsize:DEFAULT_TEXTSIZE,trustServerCertificate:!0,useColumnNames:!1,useUTC:!0},...e};t.driver={SqlServerDriver:SqlServerDriver,Connection:new SqlServerDriver.Connection(t),Request:SqlServerDriver.Request},super(t)}close(e){this._driver.Connection.close(),e()}connect(){this._driver.Connection.on("connect",e=>{e?console.error(e):console.log("SQLServer at XXX is connected !")})}init(){super.init()}on(){}}class TSQLServerController extends TAbstractDataController{constructor(e={}){const t={driver:null,tableName:"",columns:[],...e};super(t),this.tableName=t.tableName,this.columns=t.columns}get tableName(){return this._tableName}set tableName(e){const t="Expect an instance of String.";if(iteeValidators.isNull(e))throw new TypeError(`Table name cannot be null ! ${t}`);if(iteeValidators.isUndefined(e))throw new TypeError(`Table name cannot be undefined ! ${t}`);if(iteeValidators.isNotString(e))throw new TypeError(`Table name cannot be an instance of ${e.constructor.name} ! ${t}`);this._tableName=e}get columns(){return this._columns}set columns(e){const t="Expect an array of strings.";if(iteeValidators.isNull(e))throw new TypeError(`Columns cannot be null ! ${t}`);if(iteeValidators.isUndefined(e))throw new TypeError(`Columns cannot be undefined ! ${t}`);if(iteeValidators.isNotArrayOfString(e))throw new TypeError(`Columns cannot be an instance of ${e.constructor.name} ! ${t}`);this._columns=e}setTableName(e){return this.tableName=e,this}setColumns(e){return this.columns=e,this}_createMany(e,t){super._createMany(e,t);const r=this.columns,a=r.toString();let s=null,n="",o=null;for(let t=0,a=e.length;t<a;t++){s=e[t],n+="(";for(let e in s)r.includes(e)&&(o=s[e],iteeValidators.isString(o)?n+=`'${o}', `:n+=`${o}, `);n=n.slice(0,-2),n+="), "}n=n.slice(0,-2);const i=`INSERT INTO ${this._tableName} (${a}) VALUES ${n}`,l=new this._driver.Request(i,this.return(t));this._driver.Connection.execSql(l)}_createOne(e,t){super._createOne(e,t);const r=this.columns;let a="",s=null,n="",o=null;for(let t=0,i=r.length;t<i;t++)(o=e[s=r[t]])&&(a+=`${s}, `,iteeValidators.isString(o)?n+=`'${o}', `:n+=`${o}, `);a=a.slice(0,-2),n=n.slice(0,-2);const i=`INSERT INTO ${this._tableName} (${a}) VALUES (${n})`,l=new this._driver.Request(i,this.return(t));this._driver.Connection.execSql(l)}_deleteAll(e){super._deleteAll(e);const t=`TRUNCATE TABLE ${this._tableName}`,r=new this._driver.Request(t,this.return(e));this._driver.Connection.execSql(r)}_deleteMany(e,t){super._deleteMany(e,t);const r=`DELETE FROM ${this._tableName} WHERE id IN (${e})`,a=new this._driver.Request(r,this.return(t));this._driver.Connection.execSql(a)}_deleteOne(e,t){super._deleteOne(e,t);const r=`DELETE FROM ${this._tableName} WHERE id=${e}`,a=new this._driver.Request(r,this.return(t));this._driver.Connection.execSql(a)}_deleteWhere(e,t){super._deleteWhere(e,t),TAbstractDataController.returnError("Unimplemented methods (DELETE WHERE)",t)}_readAll(e,t){super._readAll(e,t);const r=`SELECT * FROM ${this.tableName}`,a=new this._driver.Request(r,(e,r,a)=>{console.log(`Get ${r} elements.`),e?TAbstractDataController.returnError(e,t):0===a.length?TAbstractDataController.returnNotFound(t):TAbstractDataController.returnData(a,t)});a.on("row",e=>{let t={};e.forEach(e=>{t[e.metadata.colName]=e.value})}),this._driver.Connection.execSql(a)}_readMany(e,t,r){super._readMany(e,t,r);const a=e.toString(),s=`SELECT * FROM ${this.tableName} WHERE id IN (${a})`,n=new this._driver.Request(s,(e,t,a)=>{console.log(`Get ${t} elements !`),e?TAbstractDataController.returnError(e,r):0===a.length?TAbstractDataController.returnNotFound(r):TAbstractDataController.returnData(a,r)});n.on("row",e=>{let t={};e.forEach(e=>{t[e.metadata.colName]=e.value})}),this._driver.Connection.execSql(n)}_readOne(e,t,r){super._readOne(e,t,r);const a=`SELECT * FROM ${this.tableName} WHERE id=${e}`,s=new this._driver.Request(a,(e,t,a)=>{console.log(`Get ${t} elements !`),e?TAbstractDataController.returnError(e,r):0===a.length?TAbstractDataController.returnNotFound(r):TAbstractDataController.returnData(a,r)});s.on("row",e=>{let t={};e.forEach(e=>{t[e.metadata.colName]=e.value})}),this._driver.Connection.execSql(s)}_readWhere(e,t,r){super._readWhere(e,t,r),TAbstractDataController.returnError("Unimplemented methods (READ WHERE)",r)}_updateAll(e,t){super._updateAll(e,t);let r="";for(let t in e){const a=e[t];iteeValidators.isString(a)?r+=`${t} = '${a}', `:r+=`${t} = ${a}, `}r=r.slice(0,-2);const a=`UPDATE ${this._tableName} SET ${r}`,s=new this._driver.Request(a,this.return(t));this._driver.Connection.execSql(s)}_updateMany(e,t,r){super._updateMany(e,t,r);let a="",s=null;for(let e in t)s=t[e],iteeValidators.isString(s)?a+=`${e} = '${s}', `:a+=`${e} = ${s}, `;a=a.slice(0,-2);const n=`UPDATE ${this._tableName} SET ${a} WHERE id IN (${e})`,o=new this._driver.Request(n,this.return(r));this._driver.Connection.execSql(o)}_updateOne(e,t,r){super._updateOne(e,t,r);let a="",s=null;for(let e in t)s=t[e],iteeValidators.isString(s)?a+=`${e} = '${s}', `:a+=`${e} = ${s}, `;a=a.slice(0,-2);const n=`UPDATE ${this._tableName} SET ${a} WHERE id=${e}`,o=new this._driver.Request(n,this.return(r));this._driver.Connection.execSql(o)}_updateWhere(e,t,r){super._updateWhere(e,t,r),TAbstractDataController.returnError("Unimplemented methods (UPDATE WHERE)",r)}}exports.MemoryWriteStream=MemoryWriteStream,exports.TAbstractConverterManager=TAbstractConverterManager,exports.TAbstractDataController=TAbstractDataController,exports.TAbstractDataConverter=TAbstractDataConverter,exports.TAbstractDataInserter=TAbstractDataInserter,exports.TAbstractDatabase=TAbstractDatabase,exports.TAbstractDatabasePlugin=TAbstractDatabasePlugin,exports.TAbstractFileConverter=TAbstractFileConverter,exports.TCassandraDatabase=TCassandraDatabase,exports.TCouchBaseDatabase=TCouchBaseDatabase,exports.TCouchDBDatabase=TCouchDBDatabase,exports.TElasticSearchDatabase=TElasticSearchDatabase,exports.TLevelDBDatabase=TLevelDBDatabase,exports.TMongoDBDatabase=TMongoDBDatabase,exports.TMongoDBPlugin=TMongoDBPlugin,exports.TMongooseController=TMongooseController,exports.TMySQLDatabase=TMySQLDatabase,exports.TNeo4JDatabase=TNeo4JDatabase,exports.TOracleDatabase=TOracleDatabase,exports.TPostgreSQLController=TPostgreSQLController,exports.TPostgreSQLDatabase=TPostgreSQLDatabase,exports.TRedisDatabase=TRedisDatabase,exports.TSQLServerController=TSQLServerController,exports.TSQLServerDatabase=TSQLServerDatabase,exports.TSQLiteDatabase=TSQLiteDatabase;
//# sourceMappingURL=itee-database.cjs.min.js.map
