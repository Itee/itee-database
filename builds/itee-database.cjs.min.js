"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var r=require("itee-validators"),t=e(require("path")),s=require("buffer"),n=e(require("fs")),i=require("stream");
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @class TDatabaseController
 * @classdesc The TDatabaseController is the base class to perform CRUD operations on the database
 */
class o{static __checkData(e,t,s){const n=t.body,i=t.params,a=t.query;return r.isDefined(n)&&n[e]?n[e]:r.isDefined(i)&&i[e]?i[e]:r.isDefined(a)&&a[e]?a[e]:void o.returnError({title:"Erreur de paramètre",message:`${e} n'existe pas dans les paramètres !`},s)}static _formatError(e){let t=[];if(r.isArray(e))for(let r=0,s=e.length;r<s;++r)t=t.concat(o._formatError(e[r]));else if(r.isObject(e))if("ValidationError"===e.name){let r="",s=e.errors;for(let e in s)Object.prototype.hasOwnProperty.call(s,e)&&(r+=s[e].message+"<br>");t.push({title:"Erreur de validation",message:r||"Aucun message d'erreur... Gloups !"})}else"VersionError"===e.name?t.push({title:"Erreur de base de donnée",message:"Aucun document correspondant n'as put être trouvé pour la requete !"}):t.push({title:e.title||"Erreur",message:e.message||"Aucun message d'erreur... Gloups !"});else{if(!r.isString(e))throw new Error(`Unknown error type: ${e} !`);t.push({title:"Erreur",message:e})}return t}static returnNotFound(e){if(r.isFunction(e))return e();e.headersSent||e.status(204).end()}static returnError(e,t){if(r.isFunction(t))return t(e,null);if(t.headersSent)return;const s=o._formatError(e);t.format({"application/json":()=>{t.status(500).json(s)},default:()=>{t.status(406).send("Not Acceptable")}})}static returnData(e,t){if(r.isFunction(t))return t(null,e);if(t.headersSent)return;const s=r.isArray(e)?e:[e];t.format({"application/json":()=>{t.status(200).json(s)},default:()=>{t.status(406).send("Not Acceptable")}})}static returnErrorAndData(e,t,s){if(r.isFunction(s))return s(e,t);if(s.headersSent)return;const n={errors:e,datas:t};s.format({"application/json":()=>{s.status(416).json(n)},default:()=>{s.status(416).send("Range Not Satisfiable")}})}constructor(e={}){const r={driver:null,useNext:!1,...e};this._driver=r.driver,this._useNext=r.useNext}return(e,t={}){const s=Object.assign({immediate:null,beforeAll:null,beforeReturnErrorAndData:null,afterReturnErrorAndData:null,beforeReturnError:null,afterReturnError:null,beforeReturnData:null,afterReturnData:null,beforeReturnNotFound:null,afterReturnNotFound:null,afterAll:null},t,{returnErrorAndData:o.returnErrorAndData.bind(this),returnError:o.returnError.bind(this),returnData:o.returnData.bind(this),returnNotFound:o.returnNotFound.bind(this)});return s.immediate&&s.immediate(),function(t=null,n=null){const i=r.isDefined(n),o=r.isDefined(t);s.beforeAll&&s.beforeAll(),i&&o?(s.beforeReturnErrorAndData&&s.beforeReturnErrorAndData(t,n),s.returnErrorAndData(t,n,e),s.afterReturnErrorAndData&&s.afterReturnErrorAndData(t,n)):i&&!o?(s.beforeReturnData&&s.beforeReturnData(n),s.returnData(n,e),s.afterReturnData&&s.afterReturnData(n)):!i&&o?(s.beforeReturnError&&s.beforeReturnError(t),s.returnError(t,e),s.afterReturnError&&s.afterReturnError(t)):i||o||(s.beforeReturnNotFound&&s.beforeReturnNotFound(),s.returnNotFound(e),s.afterReturnNotFound&&s.afterReturnNotFound()),s.afterAll&&s.afterAll()}}create(e,t,s){const n=e.body;r.isNotDefined(n)?o.returnError({title:"Erreur de paramètre",message:"Le corps de la requete ne peut pas être null ou indefini."},this._useNext?s:t):r.isArray(n)?r.isEmptyArray(n)?o.returnError({title:"Erreur de paramètre",message:"Le tableau d'objet de la requete ne peut pas être vide."},this._useNext?s:t):this._createMany(n,t,s):r.isObject(n)?r.isEmptyObject(n)?o.returnError({title:"Erreur de paramètre",message:"L'objet de la requete ne peut pas être vide."},this._useNext?s:t):this._createOne(n,t,s):o.returnError({title:"Erreur de paramètre",message:"Le type de donnée de la requete est invalide. Les paramètres valides sont objet ou un tableau d'objet."},this._useNext?s:t)}_createOne(){}_createMany(){}read(e,t,s){const n=e.params.id,i=e.body,a=r.isDefined(i),u=a?i.ids:null,l=a?i.query:null,c=a?i.projection:null;r.isDefined(n)?r.isNotString(n)?o.returnError({title:"Erreur de paramètre",message:"L'identifiant devrait être une chaine de caractères."},this._useNext?s:t):r.isEmptyString(n)||r.isBlankString(n)?o.returnError({title:"Erreur de paramètre",message:"L'identifiant ne peut pas être une chaine de caractères vide."},this._useNext?s:t):this._readOne(n,c,t,s):r.isDefined(u)?r.isNotArray(u)?o.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants devrait être un tableau de chaine de caractères."},this._useNext?s:t):r.isEmptyArray(u)?o.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants ne peut pas être vide."},this._useNext?s:t):this._readMany(u,c,t,s):r.isDefined(l)?r.isNotObject(l)?o.returnError({title:"Erreur de paramètre",message:"La requete devrait être un objet javascript."},this._useNext?s:t):r.isEmptyObject(l)?this._readAll(c,t,s):this._readWhere(l,c,t,s):o.returnError({title:"Erreur de paramètre",message:"La requete ne peut pas être null."},this._useNext?s:t)}_readOne(){}_readMany(){}_readWhere(){}_readAll(){}update(e,t,s){const n=e.params.id,i=e.body,a=r.isDefined(i),u=a?i.ids:null,l=a?i.query:null,c=a?i.update:null;r.isNotDefined(c)?o.returnError({title:"Erreur de paramètre",message:"La mise à jour a appliquer ne peut pas être null ou indefini."},this._useNext?s:t):r.isDefined(n)?r.isNotString(n)?o.returnError({title:"Erreur de paramètre",message:"L'identifiant devrait être une chaine de caractères."},this._useNext?s:t):r.isEmptyString(n)||r.isBlankString(n)?o.returnError({title:"Erreur de paramètre",message:"L'identifiant ne peut pas être une chaine de caractères vide."},this._useNext?s:t):this._updateOne(n,c,t,s):r.isDefined(u)?r.isNotArray(u)?o.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants devrait être un tableau de chaine de caractères."},this._useNext?s:t):r.isEmptyArray(u)?o.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants ne peut pas être vide."},this._useNext?s:t):this._updateMany(u,c,t,s):r.isDefined(l)?r.isNotObject(l)?o.returnError({title:"Erreur de paramètre",message:"La requete devrait être un objet javascript."},this._useNext?s:t):r.isEmptyObject(l)?this._updateAll(c,t,s):this._updateWhere(l,c,t,s):o.returnError({title:"Erreur de paramètre",message:"La requete ne peut pas être vide."},this._useNext?s:t)}_updateOne(){}_updateMany(){}_updateWhere(){}_updateAll(){}delete(e,t,s){const n=e.params.id,i=e.body,a=r.isDefined(i),u=a?i.ids:null,l=a?i.query:null;r.isDefined(n)?r.isNotString(n)?o.returnError({title:"Erreur de paramètre",message:"L'identifiant devrait être une chaine de caractères."},this._useNext?s:t):r.isEmptyString(n)||r.isBlankString(n)?o.returnError({title:"Erreur de paramètre",message:"L'identifiant ne peut pas être une chaine de caractères vide."},this._useNext?s:t):this._deleteOne(n,t,s):r.isDefined(u)?r.isNotArray(u)?o.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants devrait être un tableau de chaine de caractères."},this._useNext?s:t):r.isEmptyArray(u)?o.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants ne peut pas être vide."},this._useNext?s:t):this._deleteMany(u,t,s):r.isDefined(l)?r.isNotObject(l)?o.returnError({title:"Erreur de paramètre",message:"La requete devrait être un objet javascript."},this._useNext?s:t):r.isEmptyObject(l)?this._deleteAll(t,s):this._deleteWhere(l,t,s):o.returnError({title:"Erreur de paramètre",message:"La requete ne peut pas être vide."},this._useNext?s:t)}_deleteOne(){}_deleteMany(){}_deleteWhere(){}_deleteAll(){}}
/**
 * @author [Ahmed DCHAR]{@link https://github.com/dragoneel}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
class a{static _formatError(e){let t=[];if(r.isArray(e))for(let r=0,s=e.length;r<s;++r)t=t.concat(a._formatError(e[r]));else if(r.isObject(e))if("ValidationError"===e.name){let r="",s=e.errors;for(let e in s)Object.prototype.hasOwnProperty.call(s,e)&&(r+=s[e].message+"<br>");t.push({title:"Erreur de validation",message:r||"Aucun message d'erreur... Gloups !"})}else"VersionError"===e.name?t.push({title:"Erreur de base de donnée",message:"Aucun document correspondant n'as put être trouvé pour la requete !"}):t.push({title:e.title||"Erreur",message:e.message||"Aucun message d'erreur... Gloups !"});else{if(!r.isString(e))throw new Error(`Unknown error type: ${e} !`);t.push({title:"Erreur",message:e})}return t}static _convertFilesObjectToArray(e){const r=[];for(let t in e)Object.prototype.hasOwnProperty.call(e,t)&&r.push(e[t]);return r}static returnNotFound(e){if(r.isFunction(e))return e();e.headersSent||e.status(204).end()}static returnError(e,t){if(r.isFunction(t))return t(e,null);if(t.headersSent)return;const s=a._formatError(e);t.format({"application/json":()=>{t.status(500).json(s)},default:()=>{t.status(406).send("Not Acceptable")}})}static returnData(e,t){if(r.isFunction(t))return t(null,e);if(t.headersSent)return;const s=r.isArray(e)?e:[e];t.format({"application/json":()=>{t.status(200).json(s)},default:()=>{t.status(406).send("Not Acceptable")}})}static returnErrorAndData(e,t,s){if(r.isFunction(s))return s(e,t);if(s.headersSent)return;const n={errors:e,datas:t};s.format({"application/json":()=>{s.status(416).json(n)},default:()=>{s.status(416).send("Range Not Satisfiable")}})}static return(e,t={}){const s=Object.assign({immediate:null,beforeAll:null,beforeReturnErrorAndData:null,afterReturnErrorAndData:null,beforeReturnError:null,afterReturnError:null,beforeReturnData:null,afterReturnData:null,beforeReturnNotFound:null,afterReturnNotFound:null,afterAll:null},t,{returnErrorAndData:a.returnErrorAndData.bind(this),returnError:a.returnError.bind(this),returnData:a.returnData.bind(this),returnNotFound:a.returnNotFound.bind(this)});return s.immediate&&s.immediate(),function(t=null,n=null){const i=r.isDefined(n),o=r.isDefined(t);s.beforeAll&&s.beforeAll(),i&&o?(s.beforeReturnErrorAndData&&s.beforeReturnErrorAndData(t,n),s.returnErrorAndData(t,n,e),s.afterReturnErrorAndData&&s.afterReturnErrorAndData(t,n)):i&&!o?(s.beforeReturnData&&s.beforeReturnData(n),s.returnData(n,e),s.afterReturnData&&s.afterReturnData(n)):!i&&o?(s.beforeReturnError&&s.beforeReturnError(t),s.returnError(t,e),s.afterReturnError&&s.afterReturnError(t)):i||o||(s.beforeReturnNotFound&&s.beforeReturnNotFound(),s.returnNotFound(e),s.afterReturnNotFound&&s.afterReturnNotFound()),s.afterAll&&s.afterAll()}}constructor(e={}){const r={driver:null,useNext:!1,converters:new Map,convertersOptions:void 0,rules:{},inserter:{},...e};this._driver=r.driver,this._useNext=r.useNext,this._converters=r.converters,this._convertersOptions=r.convertersOptions,this._rules=r.rules,this._inserter=new r.inserter({driver:this._driver}),this._errors=[],this._processedFiles=[],this._filesToProcess=0}_fileConversionSuccessCallback(e,r,t,s){t?t(s):this._inserter.save(s,this._convertersOptions,this._fileInsertionSuccessCallback.bind(this,e,r),this._fileConversionProgressCallback.bind(this,e),this._fileConversionErrorCallback.bind(this,e,r))}_fileInsertionSuccessCallback(e,r,t){this._filesToProcess--,this._checkEndOfReturns(e,r,t)}_fileConversionProgressCallback(e,r){console.log(r)}_fileConversionErrorCallback(e,r,t){this._errors.push(t),this._filesToProcess--,this._checkEndOfReturns(e,r,null)}_checkEndOfReturns(e,r,t){this._errors.length>0?this._useNext?r(this._errors):(a.return(e)(this._errors),this._errors=[]):this._useNext?r():a.returnData(t,e)}processFiles(e,r,t){const s=a._convertFilesObjectToArray(e.files),n=s.length;if(0===n){if(this._useNext)return void t("Aucun fichier à traiter !");a.returnError("Aucun fichier à traiter !",r)}this._convertersOptions=e.body;const i=[];for(let e=0;e<n;e++){let n=s[e];if(this._processedFiles.includes(n.name)){if(this._useNext)return void t(`Le fichier ${n.name} à déjà été inséré.`);a.returnError(`Le fichier ${n.name} à déjà été inséré.`,r)}this._processedFiles.push(n.name),i.push(n)}const o=i.length;if(0===o){if(this._useNext)return void t(`Impossible d'analyser ${o} fichiers associatifs simultanément !`);a.returnError(`Impossible d'analyser ${o} fichiers associatifs simultanément !`,r)}this._filesToProcess+=o,this._processFiles(i,this._convertersOptions,r,t)}_processFiles(e,s,n,i){const o=e.map(e=>t.extname(e.name)),a=this._rules.filter(e=>{const t=e.on;if(r.isArray(t)){for(let e=0;e<t.length;e++)if(!o.includes(t[e]))return!1;return!0}return o.includes(t)});for(let t=0,o=a.length;t<o;t++){let o=a[t].use;if(r.isArray(o)){let r=void 0;for(let t=o.length-1;t>=0;t--){const a=o[t];0===t?this._converters[a].convert(e,s,this._fileConversionSuccessCallback.bind(this,n,i,r),this._fileConversionProgressCallback.bind(this,n),this._fileConversionErrorCallback.bind(this,n,i)):r=t===o.length-1?e=>{this._converters[a].convert(e,s,this._fileConversionSuccessCallback.bind(this,n,i,null),this._fileConversionProgressCallback.bind(this,n),this._fileConversionErrorCallback.bind(this,n,i))}:e=>{this._converters[a].convert(e,s,this._fileConversionSuccessCallback.bind(this,n,i,r),this._fileConversionProgressCallback.bind(this,n),this._fileConversionErrorCallback.bind(this,n,i))}}}else this._converters[o].convert(e[0],s,this._fileConversionSuccessCallback.bind(this,n,i,null),this._fileConversionProgressCallback.bind(this,n),this._fileConversionErrorCallback.bind(this,n,i))}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
class u extends i.Writable{constructor(e){super(e);const r=e.bufferSize||s.kStringMaxLength;this.memoryBuffer=Buffer.alloc(r),this.offset=0}_final(e){e()}_write(e,r,t){const s=Buffer.isBuffer(e)?e:new Buffer(e,r);for(let e=0,r=s.length;e<r;e++)this.memoryBuffer[this.offset]=s[e],this.offset++;t()}_writev(e,r){for(let r=0,t=e.length;r<t;r++)this.memoryBuffer=Buffer.concat([this.memoryBuffer,e[r]]);r()}_releaseMemory(){this.memoryBuffer=null}toArrayBuffer(){const e=this.memoryBuffer,r=new ArrayBuffer(e.length),t=new Uint8Array(r);for(let r=0;r<e.length;++r)t[r]=e[r];return this._releaseMemory(),r}toJSON(){return JSON.parse(this.toString())}toString(){const e=this.memoryBuffer.toString();return this._releaseMemory(),e}}class l{constructor(e={}){const r={dumpType:l.DumpType.ArrayBuffer,...e};this.dumpType=r.dumpType,this._isProcessing=!1,this._queue=[]}get dumpType(){return this._dumpType}set dumpType(e){if(r.isNull(e))throw new TypeError("Dump type cannot be null ! Expect a non empty string.");if(r.isUndefined(e))throw new TypeError("Dump type cannot be undefined ! Expect a non empty string.");this._dumpType=e}setDumpType(e){return this.dumpType=e,this}convert(e,r,t,s,n){e?(this._queue.push({file:e,parameters:r,onSuccess:t,onProgress:s,onError:n}),this._processQueue()):n("File cannot be null or empty, aborting file convertion !!!")}_processQueue(){if(0===this._queue.length||this._isProcessing)return;this._isProcessing=!0;const e=this,t=this._queue.shift(),s=t.file,n=t.parameters,i=t.onSuccess,o=t.onProgress,a=t.onError;if(r.isString(s))e._dumpFileInMemoryAs(e._dumpType,s,n,u,d,p);else{const r=s.data;switch(e._dumpType){case l.DumpType.ArrayBuffer:{const e=r.length,t=new ArrayBuffer(e),s=new Uint8Array(t);for(let t=0;t<e;++t)s[t]=r[t];u(t)}break;case l.DumpType.JSON:u(JSON.parse(r.toString()));break;case l.DumpType.String:u(r.toString());break;default:throw new RangeError(`Invalid switch parameter: ${e._dumpType}`)}}function u(r){e._convert(r,n,c,d,p)}function c(r){i(r),e._isProcessing=!1,e._processQueue()}function d(e){o(e)}function p(r){a(r),e._isProcessing=!1,e._processQueue()}}_dumpFileInMemoryAs(e,r,t,s,i,o){let a=!1;const c=n.createReadStream(r);c.on("error",e=>{a=!0,o(e)});const d=parseInt(t.fileSize),p=new u({bufferSize:d});p.on("error",e=>{a=!0,o(e)}),p.on("finish",()=>{if(!a){switch(e){case l.DumpType.ArrayBuffer:s(p.toArrayBuffer());break;case l.DumpType.String:s(p.toString());break;case l.DumpType.JSON:s(p.toJSON());break;default:throw new RangeError(`Invalid switch parameter: ${e}`)}c.unpipe(),c.close(),p.end()}}),c.pipe(p)}_convert(){}}l.MAX_FILE_SIZE=67108864,l.DumpType=Object.freeze({ArrayBuffer:0,String:1,JSON:2});
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
class c{static _registerRoutesTo(e,r,t,s,n){for(let i=0,o=n.length;i<o;i++){const o=n[i],a=new(s.get(o.controller.name))({driver:e,...o.controller.options}),u=t({mergeParams:!0});console.log(`\tAdd controller for base route: ${o.route}`),r.use(o.route,c._populateRouter(u,a,o.controller.can))}}static _populateRouter(e,r,t={}){for(let s in t){const n=t[s];console.log(`\t\tMap route ${n.over} on (${n.on}) to ${r.constructor.name}.${s} method.`),e[n.on](n.over,r[s].bind(r))}return e}constructor(e={}){const r={controllers:new Map,descriptors:[],...e};this.controllers=r.controllers,this.descriptors=r.descriptors,this.__dirname=void 0}get controllers(){return this._controllers}set controllers(e){if(r.isNull(e))throw new TypeError("Controllers cannot be null ! Expect a map of controller.");if(r.isUndefined(e))throw new TypeError("Controllers cannot be undefined ! Expect a map of controller.");if(!(e instanceof Map))throw new TypeError(`Controllers cannot be an instance of ${e.constructor.name} ! Expect a map of controller.`);this._controllers=e}get descriptors(){return this._descriptors}set descriptors(e){if(r.isNull(e))throw new TypeError("Descriptors cannot be null ! Expect an array of POJO.");if(r.isUndefined(e))throw new TypeError("Descriptors cannot be undefined ! Expect an array of POJO.");this._descriptors=e}addController(e){return this._controllers.set(e.name,e),this}addDescriptor(e){return this._descriptors.push(e),this}beforeRegisterRoutes(){}registerTo(e,r,t){this.beforeRegisterRoutes(e),c._registerRoutesTo(e,r,t,this._controllers,this._descriptors)}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */exports.MemoryWriteStream=u,exports.TAbstractConverterManager=a,exports.TAbstractDataController=o,exports.TAbstractDataConverter=class{constructor(){this._isProcessing=!1,this._queue=[]}convert(e,r,t,s,n){this._queue.push({file:e,parameters:r,onSuccess:t,onProgress:s,onError:n}),this._isProcessing||this._processQueue()}_processQueue(){if(0===this._queue.length)return void(this._isProcessing=!1);this._isProcessing=!0;const e=this,r=this._queue.shift(),t=r.file,s=r.parameters,n=r.onSuccess,i=r.onProgress,o=r.onError;e._convert(t,s,(function(r){n(r),e._processQueue()}),(function(e){i(e)}),(function(r){o(r),e._processQueue()}))}_convert(){}},exports.TAbstractDataInserter=class{constructor(e={}){const r={driver:null,...e};this._driver=r.driver,this._isProcessing=!1,this._queue=[]}save(e,r,t,s,n){e?r?(this._queue.push({data:e,parameters:r,onSuccess:t,onProgress:s,onError:n}),this._processQueue()):n("Invalid parent id, unable to set children to unknown database node !!!"):n("Data cannot be null or empty, aborting database insert !!!")}_processQueue(){if(0===this._queue.length||this._isProcessing)return;this._isProcessing=!0;const e=this,r=this._queue.shift(),t=r.data,s=r.parameters,n=r.onSuccess,i=r.onProgress,o=r.onError;e._save(t,s,(function(r){n(r),e._isProcessing=!1,e._processQueue()}),(function(e){i(e)}),(function(r){o(r),e._isProcessing=!1,e._processQueue()}))}_save(){}},exports.TAbstractDatabase=class{constructor(e={}){const r={driver:null,application:null,router:null,plugins:[],...e};this.driver=r.driver,this.application=r.application,this.router=r.router,this.plugins=r.plugins,this.init(),this._registerPlugins()}get plugins(){return this._plugins}set plugins(e){if(r.isNull(e))throw new TypeError("Plugins cannot be null ! Expect an array of TDatabasePlugin.");if(r.isUndefined(e))throw new TypeError("Plugins cannot be undefined ! Expect an array of TDatabasePlugin.");this._plugins=e}get router(){return this._router}set router(e){if(r.isNull(e))throw new TypeError("Router cannot be null ! Expect a Express Router.");if(r.isUndefined(e))throw new TypeError("Router cannot be undefined ! Expect a Express Router.");this._router=e}get application(){return this._application}set application(e){if(r.isNull(e))throw new TypeError("Application cannot be null ! Expect a Express Application.");if(r.isUndefined(e))throw new TypeError("Application cannot be undefined ! Expect a Express Application.");this._application=e}get driver(){return this._driver}set driver(e){if(r.isNull(e))throw new TypeError("Driver cannot be null ! Expect a database driver.");if(r.isUndefined(e))throw new TypeError("Driver cannot be undefined ! Expect a database driver.");this._driver=e}setPlugins(e){return this.plugins=e,this}setRouter(e){return this.router=e,this}setApplication(e){return this.application=e,this}setDriver(e){return this.driver=e,this}init(){}_registerPlugins(){for(let[e,r]of Object.entries(this._plugins))this._registerPackagePlugin(e,r)?console.log(`Use ${e} plugin from node_modules`):this._registerLocalPlugin(e,r)?console.log(`Use ${e} plugin from local folder`):console.error(`Unable to register the plugin ${e} the package or local folder doesn't seem to exist ! Skip it.`)}_registerPackagePlugin(e){let r=!1;try{const s=require(e);s instanceof c?(s.__dirname=t.dirname(require.resolve(e)),s.registerTo(this._driver,this._application,this._router),r=!0):console.error(`The plugin ${e} doesn't seem to be an instance of an extended class from TAbstractDatabasePlugin ! Skip it.`)}catch(e){e.code&&"MODULE_NOT_FOUND"===e.code||console.error(e)}return r}_registerLocalPlugin(e){let r=!1;try{const s=t.join(__dirname,"../../../","databases/plugins/",e,`${e}.js`),n=require(s);n instanceof c?(n.__dirname=t.dirname(require.resolve(s)),n.registerTo(this._driver,this._application,this._router),r=!0):console.error(`The plugin ${e} doesn't seem to be an instance of an extended class from TAbstractDatabasePlugin ! Skip it.`)}catch(e){console.error(e)}return r}connect(){}close(){}on(){}},exports.TAbstractDatabasePlugin=c,exports.TAbstractFileConverter=l;
