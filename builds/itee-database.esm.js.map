{"version":3,"file":"itee-database.esm.js","sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","../sources/messages/AbstractError.js","../sources/messages/http/AbstractHTTPError.js","../sources/messages/http/UnknownError.js","../sources/databases/TAbstractResponder.js","../sources/messages/http/UnprocessableEntityError.js","../sources/controllers/TAbstractDataController.js","../sources/converters/TAbstractDataConverter.js","../sources/converters/TAbstractConverterManager.js","../sources/converters/TAbstractDataInserter.js","../sources/converters/TAbstractFileConverter.js","../sources/plugins/TAbstractDatabasePlugin.js","../sources/databases/TAbstractDatabase.js","../sources/messages/http/BadRequestError.js","../sources/messages/http/BadMappingError.js","../sources/messages/http/BlockedByWindowsParentalControlsError.js","../sources/messages/http/ClientClosedRequestError.js","../sources/messages/http/ConflictError.js","../sources/messages/http/ExpectationFailedError.js","../sources/messages/http/ForbiddenError.js","../sources/messages/http/GoneError.js","../sources/messages/http/HTTPRequestSentToHTTPSPortError.js","../sources/messages/http/ImATeapotError.js","../sources/messages/http/LengthRequiredError.js","../sources/messages/http/LockedError.js","../sources/messages/http/MethodFailureError.js","../sources/messages/http/MethodNotAllowedError.js","../sources/messages/http/NoResponseError.js","../sources/messages/http/NotAcceptableError.js","../sources/messages/http/NotFoundError.js","../sources/messages/http/PaymentRequiredError.js","../sources/messages/http/PreconditionFailedError.js","../sources/messages/http/PreconditionRequiredError.js","../sources/messages/http/ProxyAuthenticationRequiredError.js","../sources/messages/http/RequestEntityTooLargeError.js","../sources/messages/http/RequestHeaderFieldsTooLargeError.js","../sources/messages/http/RequestRangeUnsatisfiableError.js","../sources/messages/http/RequestTimeOutError.js","../sources/messages/http/RetryWithError.js","../sources/messages/http/SSLCertificateError.js","../sources/messages/http/SSLCertificateRequiredError.js","../sources/messages/http/TooManyRequestsError.js","../sources/messages/http/UnauthorizedError.js","../sources/messages/http/UnavailableForLegalReasonsError.js","../sources/messages/http/UnorderedCollectionError.js","../sources/messages/http/UnrecoverableError.js","../sources/messages/http/UpgradeRequiredError.js","../sources/messages/http/ATimeoutOccuredError.js","../sources/messages/http/BadGatewayError.js","../sources/messages/http/BandwidthLimitExceededError.js","../sources/messages/http/ConnectionTimedOutError.js","../sources/messages/http/GatewayTimeOutError.js","../sources/messages/http/HTTPVersionNotSupportedError.js","../sources/messages/http/InsufficientStorageError.js","../sources/messages/http/InternalServerError.js","../sources/messages/http/InvalidSSLCertificateError.js","../sources/messages/http/LoopDetectedError.js","../sources/messages/http/NetworkAuthenticationRequiredError.js","../sources/messages/http/NotExtendedError.js","../sources/messages/http/NotImplementedError.js","../sources/messages/http/OriginIsUnreachableError.js","../sources/messages/http/RailgunError.js","../sources/messages/http/ServiceUnavailableError.js","../sources/messages/http/SSLHandshakeFailedError.js","../sources/messages/http/VariantAlsoNegotiatesError.js","../sources/messages/http/WebServerIsDownError.js","../sources/itee-database.js"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","/**\n * @module Messages/AbstractError\n * @desc Export the AbstractError abstract class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires {@link https://github.com/uuidjs/uuid uuid}\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\nimport {\n    isBlankString,\n    isEmptyString,\n    isNotDefined,\n    isNotString\n}                       from 'itee-validators'\nimport { v4 as uuidv4 } from 'uuid'\n\n/**\n * @class\n * @classdesc The AbstractError is the base class for all derived errors.\n * It is composed by an uuid v4, the name which is based on the instance constructor name, and a message\n *\n * @extends Error\n */\nclass AbstractError extends Error {\n\n    /**\n     * @constructor\n     * @param message {string} The error message to dispatch\n     */\n    constructor ( message ) {\n        super()\n\n        this._uuid    = uuidv4()\n        this._name    = this.constructor.name\n        this._message = ( () => {\n            // Validate message before assign it as readonly property !\n            const expect = 'Expect a non empty string.'\n            if ( isNotDefined( message ) ) { throw new ReferenceError( `The error message cannot be null or undefined. ${ expect }` )}\n            if ( isNotString( message ) ) { throw new TypeError( `The error message cannot be an instance of ${ message.constructor.name }. ${ expect }` )}\n            if ( isEmptyString( message ) ) { throw new TypeError( `The error message cannot be an empty string. ${ expect }` )}\n            if ( isBlankString( message ) ) { throw new TypeError( `The error message cannot be a blank string. ${ expect }` )}\n\n            return message\n        } )()\n\n        // Override the default Error stack behavior and apply get/set to avoid mutation\n        this._stack = this.stack\n\n        /**\n         * The stack trace of the error\n         * @member module:Messages/AbstractError~AbstractError#stack\n         * @readonly\n         * @type {string}\n         */\n        Object.defineProperty( this, 'stack', {\n            get: () => { return this._stack },\n            set: () => { throw new SyntaxError( 'Try to assign a read only property.' ) }\n        } )\n\n\n    }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isAbstractError () { return true }\n    /**\n     * An auto-generated universally unique identifier, this allow to recognize any error by id\n     * @readonly\n     * @type {string}\n     */\n    get uuid () { return this._uuid }\n    set uuid ( value ) { throw new SyntaxError( 'Try to assign a read only property.' ) }\n    /**\n     * The name of current instanced error (a.k.a the constructor name)\n     * @readonly\n     * @type {string}\n     */\n    get name () { return this._name }\n    set name ( value ) { throw new SyntaxError( 'Try to assign a read only property.' ) }\n    /**\n     * The error message\n     * @readonly\n     * @type {string}\n     */\n    get message () { return this._message }\n    set message ( value ) { throw new SyntaxError( 'Try to assign a read only property.' ) }\n\n}\n\nexport { AbstractError }\n","/**\n * @module Messages/HTTP/AbstractHTTPError\n * @desc Export the AbstractHTTPError abstract class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/AbstractError~AbstractError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { isNotDefined }  from 'itee-validators'\nimport { AbstractError } from '../AbstractError'\n\n/**\n * @class\n * @classdesc The AbstractHTTPError is the base class for all derived HTTPError.\n * It extend is AbstractError and agmente it with the status code notion.\n *\n * @extends module:Messages/AbstractError~AbstractError\n */\nclass AbstractHTTPError extends AbstractError {\n\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    static get isAbstractHTTPError () { return true }\n\n    /**\n     * The abstract getter of http status code, internally it call the static getter statusCode that need to be reimplemented by extended class.\n     * @readonly\n     * @abstract\n     * @type {number}\n     * @throws {ReferenceError} In case the static statusCode getter is not redefined in class that inherit this class.\n     */\n    get statusCode () {\n        if ( isNotDefined( this.constructor.statusCode ) ) {\n            throw new ReferenceError( `${ this.name } class need to reimplement static statusCode getter.` )\n        }\n        return this.constructor.statusCode\n    }\n\n    set statusCode ( value ) {\n        throw new SyntaxError( 'Try to assign a read only property.' )\n    }\n}\n\nexport { AbstractHTTPError }\n","/**\n * @module Messages/HTTP/UnknownError\n * @desc Export the UnknownError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass UnknownError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 520\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 520 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isUnknownError () { return true }\n\n}\n\nexport { UnknownError }\n","/**\n * @module Databases/TAbstractResponder\n * @desc Export the TAbstractResponder abstract class.\n * @exports TAbstractResponder\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { TAbstractObject } from 'itee-core'\nimport {\n    isArray,\n    isDefined,\n    isFunction,\n    isObject,\n    isString\n}                          from 'itee-validators'\nimport { UnknownError }    from '../messages/http/UnknownError'\n\n/**\n * @class\n * @classdesc The TAbstractResponder is the base class for all derived database controller that require to send a response to client.\n * It allow to send preformatted response in function of database query result.\n */\nclass TAbstractResponder extends TAbstractObject {\n\n    /**\n     * Normalize errors that can be in different format like single string, object, array of string, or array of object.\n     *\n     * @example <caption>Normalized error are simple literal object like:</caption>\n     * {\n     *     name: 'TypeError',\n     *     message: 'the error message'\n     * }\n     *\n     * @param {String|Object|Array.<String>|Array.<Object>} errors - The error object to normalize\n     * @returns {Array.<Object>}\n     * @private\n     */\n    static _formatErrors ( errors = [] ) {\n\n        const _errors = ( isArray( errors ) ) ? errors : [ errors ]\n\n        let formattedErrors = []\n\n        for ( let i = 0, numberOfErrors = _errors.length ; i < numberOfErrors ; i++ ) {\n            formattedErrors.push( TAbstractResponder._formatError( _errors[ i ] ) )\n        }\n\n        return formattedErrors\n\n    }\n    /**\n     * Normalize error that can be in different format like single string, object, array of string, or array of object.\n     *\n     * @example <caption>Normalized error are simple literal object like:</caption>\n     * {\n     *     name: 'TypeError',\n     *     message: 'the error message'\n     * }\n     *\n     * @param {String|Object|Error} error - The error object to normalize\n     * @returns {AbstractHTTPError}\n     * @private\n     */\n    static _formatError ( error ) {\n\n        let formattedError\n\n        if ( error instanceof Error ) {\n\n            formattedError = error\n            formattedError.statusCode = 500\n\n        } else if ( isString( error ) ) {\n\n            formattedError = new UnknownError( error )\n\n        } else if ( isObject( error ) ) {\n\n            const name    = error.name\n            const message = error.message || 'Empty message...'\n\n            formattedError = new UnknownError( message )\n            if ( name ) {\n                formattedError.name = name\n            }\n\n        } else {\n\n            formattedError = new UnknownError( error.toString() )\n\n        }\n\n        return formattedError\n\n    }\n    /**\n     * In case database call return nothing consider that is a not found.\n     * If response parameter is a function consider this is a returnNotFound callback function to call,\n     * else check if server response headers aren't send yet, and return response with status 204\n     *\n     * @param response - The server response or returnNotFound callback\n     * @returns {*} callback call or response with status 204\n     */\n    static returnNotFound ( response ) {\n\n        if ( isFunction( response ) ) { return response() }\n        if ( response.headersSent ) { return }\n\n        response.status( 204 ).end()\n\n    }\n    /**\n     * In case database call return an error.\n     * If response parameter is a function consider this is a returnError callback function to call,\n     * else check if server response headers aren't send yet, log and flush stack trace (if allowed) and return response with status 500 and\n     * stringified error as content\n     *\n     * @param error - A server/database error\n     * @param response - The server response or returnError callback\n     * @returns {*} callback call or response with status 500 and associated error\n     */\n    static returnError ( error, response ) {\n\n        if ( isFunction( response ) ) { return response( error, null ) }\n        if ( response.headersSent ) { return }\n\n        const formatedError = TAbstractResponder._formatError( error )\n\n        response.format( {\n\n            'application/json': () => {\n                response.status( formatedError.statusCode ).json( formatedError )\n            },\n\n            'default': () => {\n                response.status( 406 ).send( 'Not Acceptable' )\n            }\n\n        } )\n\n    }\n    /**\n     * In case database call return some data.\n     * If response parameter is a function consider this is a returnData callback function to call,\n     * else check if server response headers aren't send yet, and return response with status 200 and\n     * stringified data as content\n     *\n     * @param data - The server/database data\n     * @param response - The server response or returnData callback\n     * @returns {*} callback call or response with status 200 and associated data\n     */\n    static returnData ( data, response ) {\n\n        if ( isFunction( response ) ) { return response( null, data ) }\n        if ( response.headersSent ) { return }\n\n        const _data = isArray( data ) ? data : [ data ]\n\n        response.format( {\n\n            'application/json': () => {\n                response.status( 200 ).json( _data )\n            },\n\n            'default': () => {\n                response.status( 406 ).send( 'Not Acceptable' )\n            }\n\n        } )\n\n    }\n    /**\n     * In case database call return some data AND error.\n     * If response parameter is a function consider this is a returnErrorAndData callback function to call,\n     * else check if server response headers aren't send yet, log and flush stack trace (if allowed) and\n     * return response with status 406 with stringified data and error in a literal object as content\n     *\n     * @param error - A server/database error\n     * @param data - The server/database data\n     * @param response - The server response or returnErrorAndData callback\n     * @returns {*} callback call or response with status 406, associated error and data\n     */\n    static returnErrorAndData ( error, data, response ) {\n\n        if ( isFunction( response ) ) { return response( error, data ) }\n        if ( response.headersSent ) { return }\n\n        const result = {\n            errors: TAbstractResponder._formatErrors( error ),\n            datas:  data\n        }\n\n        response.format( {\n\n            'application/json': () => {\n                response.status( 416 ).json( result )\n            },\n\n            'default': () => {\n                response.status( 416 ).send( 'Range Not Satisfiable' )\n            }\n\n        } )\n\n    }\n    static return ( response, callbacks = {} ) {\n\n        const _callbacks = Object.assign( {\n                immediate:                null,\n                beforeAll:                null,\n                beforeReturnErrorAndData: null,\n                afterReturnErrorAndData:  null,\n                beforeReturnError:        null,\n                afterReturnError:         null,\n                beforeReturnData:         null,\n                afterReturnData:          null,\n                beforeReturnNotFound:     null,\n                afterReturnNotFound:      null,\n                afterAll:                 null\n            },\n            callbacks,\n            {\n                returnErrorAndData: TAbstractResponder.returnErrorAndData.bind( this ),\n                returnError:        TAbstractResponder.returnError.bind( this ),\n                returnData:         TAbstractResponder.returnData.bind( this ),\n                returnNotFound:     TAbstractResponder.returnNotFound.bind( this )\n            } )\n\n        /**\n         * The callback that will be used for parse database response\n         */\n        function dispatchResult ( error = null, data = null ) {\n\n            const haveData  = isDefined( data )\n            const haveError = isDefined( error )\n\n            if ( _callbacks.beforeAll ) { _callbacks.beforeAll() }\n\n            if ( haveData && haveError ) {\n\n                if ( _callbacks.beforeReturnErrorAndData ) { _callbacks.beforeReturnErrorAndData( error, data ) }\n                _callbacks.returnErrorAndData( error, data, response )\n                if ( _callbacks.afterReturnErrorAndData ) { _callbacks.afterReturnErrorAndData( error, data ) }\n\n            } else if ( haveData && !haveError ) {\n\n                if ( _callbacks.beforeReturnData ) { _callbacks.beforeReturnData( data ) }\n                _callbacks.returnData( data, response )\n                if ( _callbacks.afterReturnData ) { _callbacks.afterReturnData( data ) }\n\n            } else if ( !haveData && haveError ) {\n\n                if ( _callbacks.beforeReturnError ) { _callbacks.beforeReturnError( error ) }\n                _callbacks.returnError( error, response )\n                if ( _callbacks.afterReturnError ) { _callbacks.afterReturnError( error ) }\n\n            } else if ( !haveData && !haveError ) {\n\n                if ( _callbacks.beforeReturnNotFound ) { _callbacks.beforeReturnNotFound() }\n                _callbacks.returnNotFound( response )\n                if ( _callbacks.afterReturnNotFound ) { _callbacks.afterReturnNotFound() }\n\n            }\n\n            if ( _callbacks.afterAll ) { _callbacks.afterAll() }\n\n        }\n\n        // An immediate callback hook ( for timing for example )\n        if ( _callbacks.immediate ) { _callbacks.immediate() }\n\n        return dispatchResult\n\n    }\n    constructor ( parameters = {} ) {\n        const _parameters = {\n            ...{},\n            ...parameters\n        }\n\n        super( _parameters )\n    }\n\n}\n\nexport { TAbstractResponder }\n","/**\n * @module Messages/HTTP/ClientErrors/UnprocessableEntityError\n * @desc Export the AbstractHTTPError abstract class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass UnprocessableEntityError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 422\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 422 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isUnprocessableEntityError () { return true }\n\n}\n\nexport { UnprocessableEntityError }\n","/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @class TDatabaseController\n * @classdesc The TDatabaseController is the base class to perform CRUD operations on the database\n */\n\nimport {\n    isArray,\n    isBlankString,\n    isDefined,\n    isEmptyArray,\n    isEmptyObject,\n    isEmptyString,\n    isNotArray,\n    isNotBoolean,\n    isNotDefined,\n    isNotObject,\n    isNotString,\n    isNull,\n    isObject,\n    isUndefined\n}                                   from 'itee-validators'\nimport { TAbstractResponder }       from '../databases/TAbstractResponder'\nimport { UnprocessableEntityError } from '../messages/http/UnprocessableEntityError'\n\n/**\n * @class\n * @classdesc The TDatabaseController is the base class to perform CRUD operations on the database\n * @augments module:Databases/TAbstractResponder~TAbstractResponder\n */\nclass TAbstractDataController extends TAbstractResponder {\n\n    /**\n     * @constructor\n     * @param {Object} [parameters={}] - An object containing all parameters to pass through the inheritance chain to initialize this instance\n     * @param {external:Others~DatabaseDriver} parameters.driver Any official database driver that will be used internally by inherited class\n     * @param {boolean} [parameters.useNext=false] A boolean flag to indicate that this instance should use \"next()\" function instead of return response to client.\n     */\n    constructor ( parameters ) {\n\n        const _parameters = {\n            ...{\n                driver:  null,\n                useNext: false\n            },\n            ...parameters\n        }\n\n        super( _parameters )\n\n        /**\n         * The database drive to use internally\n         * @throws {TypeError} Will throw an error if the argument is null.\n         * @throws {TypeError} Will throw an error if the argument is undefined.\n         */\n        this.driver = _parameters.driver\n        this.useNext = _parameters.useNext\n\n    }\n    get useNext () {\n        return this._useNext\n    }\n    set useNext ( value ) {\n        if ( isNull( value ) ) { throw new TypeError( 'Driver cannot be null ! Expect a database driver.' ) }\n        if ( isUndefined( value ) ) { throw new TypeError( 'Driver cannot be undefined ! Expect a database driver.' ) }\n        if ( isNotBoolean( value ) ) { throw new TypeError( 'Driver cannot be undefined ! Expect a database driver.' ) }\n\n        this._useNext = value\n    }\n    get driver () {\n        return this._driver\n    }\n    set driver ( value ) {\n        if ( isNull( value ) ) { throw new TypeError( 'Driver cannot be null ! Expect a database driver.' ) }\n        if ( isUndefined( value ) ) { throw new TypeError( 'Driver cannot be undefined ! Expect a database driver.' ) }\n\n        this._driver = value\n    }\n\n    //////////////////\n    // CRUD Methods //\n    //////////////////\n    create ( request, response, next ) {\n\n        const data = request.body\n\n        if ( isNotDefined( data ) ) {\n\n            TAbstractDataController.returnError(\n                new UnprocessableEntityError( 'Le corps de la requete ne peut pas être null ou indefini.' ),\n                ( this.useNext ) ? next : response\n            )\n\n        } else if ( isArray( data ) ) {\n\n            if ( isEmptyArray( data ) ) {\n\n                TAbstractDataController.returnError(\n                    new UnprocessableEntityError( `Le tableau d'objet de la requete ne peut pas être vide.` ),\n                    ( this.useNext ) ? next : response\n                )\n\n            } else {\n\n                this._createMany( data, response, next )\n\n            }\n\n        } else if ( isObject( data ) ) {\n\n            if ( isEmptyObject( data ) ) {\n\n                TAbstractDataController.returnError(\n                    new UnprocessableEntityError( `L'objet de la requete ne peut pas être vide.` ),\n                    ( this.useNext ) ? next : response\n                )\n\n            } else {\n\n                this._createOne( data, response, next )\n\n            }\n\n        } else {\n\n            TAbstractDataController.returnError(\n                new UnprocessableEntityError( `Le type de donnée de la requete est invalide. Les paramètres valides sont objet ou un tableau d'objet.` ),\n                ( this.useNext ) ? next : response\n            )\n\n        }\n\n    }\n\n    _createOne ( /*data, response, next*/ ) {}\n\n    _createMany ( /*datas, response, next*/ ) {}\n\n    read ( request, response, next ) {\n\n        const id          = request.params[ 'id' ]\n        const requestBody = request.body\n        const haveBody    = ( isDefined( requestBody ) )\n        const ids         = ( haveBody ) ? requestBody.ids : null\n        const query       = ( haveBody ) ? requestBody.query : null\n        const projection  = ( haveBody ) ? requestBody.projection : null\n\n        if ( isDefined( id ) ) {\n\n            if ( isNotString( id ) ) {\n\n                TAbstractDataController.returnError(\n                    new UnprocessableEntityError( `L'identifiant devrait être une chaine de caractères.` ),\n                    ( this.useNext ) ? next : response\n                )\n\n            } else if ( isEmptyString( id ) || isBlankString( id ) ) {\n\n                TAbstractDataController.returnError(\n                    new UnprocessableEntityError( `L'identifiant ne peut pas être une chaine de caractères vide.` ),\n                    ( this.useNext ) ? next : response\n                )\n\n            } else {\n\n                this._readOne( id, projection, response, next )\n\n            }\n\n        } else if ( isDefined( ids ) ) {\n\n            if ( isNotArray( ids ) ) {\n\n                TAbstractDataController.returnError(\n                    new UnprocessableEntityError( `Le tableau d'identifiants devrait être un tableau de chaine de caractères.` ),\n                    ( this.useNext ) ? next : response\n                )\n\n            } else if ( isEmptyArray( ids ) ) {\n\n                TAbstractDataController.returnError(\n                    new UnprocessableEntityError( `Le tableau d'identifiants ne peut pas être vide.` ),\n                    ( this.useNext ) ? next : response\n                )\n\n            } else {\n\n                this._readMany( ids, projection, response, next )\n\n            }\n\n        } else if ( isDefined( query ) ) {\n\n            if ( isNotObject( query ) ) {\n\n                TAbstractDataController.returnError(\n                    new UnprocessableEntityError( `La requete devrait être un objet javascript.` ),\n                    ( this.useNext ) ? next : response\n                )\n\n            } else if ( isEmptyObject( query ) ) {\n\n                this._readAll( projection, response, next )\n\n            } else {\n\n                this._readWhere( query, projection, response, next )\n\n            }\n\n        } else {\n\n            TAbstractDataController.returnError(\n                new UnprocessableEntityError( `La requete ne peut pas être null.` ),\n                ( this.useNext ) ? next : response\n            )\n\n        }\n\n    }\n\n    _readOne ( /*id, projection, response, next*/ ) {}\n\n    _readMany ( /*ids, projection, response, next*/ ) {}\n\n    _readWhere ( /*query, projection, response, next*/ ) {}\n\n    _readAll ( /*projection, response, next*/ ) {}\n\n    update ( request, response, next ) {\n\n        const id          = request.params[ 'id' ]\n        const requestBody = request.body\n        const haveBody    = ( isDefined( requestBody ) )\n        const ids         = ( haveBody ) ? requestBody.ids : null\n        const query       = ( haveBody ) ? requestBody.query : null\n        const update      = ( haveBody ) ? requestBody.update : null\n\n        if ( isNotDefined( update ) ) {\n\n            TAbstractDataController.returnError(\n                new UnprocessableEntityError( `La mise à jour a appliquer ne peut pas être null ou indefini.` ),\n                ( this.useNext ) ? next : response\n            )\n\n        } else if ( isDefined( id ) ) {\n\n            if ( isNotString( id ) ) {\n\n                TAbstractDataController.returnError(\n                    new UnprocessableEntityError( `L'identifiant devrait être une chaine de caractères.` ),\n                    ( this.useNext ) ? next : response\n                )\n\n            } else if ( isEmptyString( id ) || isBlankString( id ) ) {\n\n                TAbstractDataController.returnError(\n                    new UnprocessableEntityError( `L'identifiant ne peut pas être une chaine de caractères vide.` ),\n                    ( this.useNext ) ? next : response\n                )\n\n            } else {\n\n                this._updateOne( id, update, response, next )\n\n            }\n\n        } else if ( isDefined( ids ) ) {\n\n            if ( isNotArray( ids ) ) {\n\n                TAbstractDataController.returnError(\n                    new UnprocessableEntityError( `Le tableau d'identifiants devrait être un tableau de chaine de caractères.` ),\n                    ( this.useNext ) ? next : response\n                )\n\n            } else if ( isEmptyArray( ids ) ) {\n\n                TAbstractDataController.returnError(\n                    new UnprocessableEntityError( `Le tableau d'identifiants ne peut pas être vide.` ),\n                    ( this.useNext ) ? next : response\n                )\n\n            } else {\n\n                this._updateMany( ids, update, response, next )\n\n            }\n\n        } else if ( isDefined( query ) ) {\n\n            if ( isNotObject( query ) ) {\n\n                TAbstractDataController.returnError(\n                    new UnprocessableEntityError( `La requete devrait être un objet javascript.` ),\n                    ( this.useNext ) ? next : response\n                )\n\n            } else if ( isEmptyObject( query ) ) {\n\n                this._updateAll( update, response, next )\n\n            } else {\n\n                this._updateWhere( query, update, response, next )\n\n            }\n\n        } else {\n\n            TAbstractDataController.returnError(\n                new UnprocessableEntityError( `La requete ne peut pas être vide.` ),\n                ( this.useNext ) ? next : response\n            )\n\n        }\n\n    }\n\n    _updateOne ( /*id, update, response, next*/ ) {}\n\n    _updateMany ( /*ids, updates, response, next*/ ) {}\n\n    _updateWhere ( /*query, update, response, next*/ ) {}\n\n    _updateAll ( /*update, response, next*/ ) {}\n\n    delete ( request, response, next ) {\n\n        const id          = request.params[ 'id' ]\n        const requestBody = request.body\n        const haveBody    = ( isDefined( requestBody ) )\n        const ids         = ( haveBody ) ? requestBody.ids : null\n        const query       = ( haveBody ) ? requestBody.query : null\n\n        if ( isDefined( id ) ) {\n\n            if ( isNotString( id ) ) {\n\n                TAbstractDataController.returnError(\n                    new UnprocessableEntityError( `L'identifiant devrait être une chaine de caractères.` ),\n                    ( this.useNext ) ? next : response\n                )\n\n            } else if ( isEmptyString( id ) || isBlankString( id ) ) {\n\n                TAbstractDataController.returnError(\n                    new UnprocessableEntityError( `L'identifiant ne peut pas être une chaine de caractères vide.` ),\n                    ( this.useNext ) ? next : response\n                )\n\n            } else {\n\n                this._deleteOne( id, response, next )\n\n            }\n\n        } else if ( isDefined( ids ) ) {\n\n            if ( isNotArray( ids ) ) {\n\n                TAbstractDataController.returnError(\n                    new UnprocessableEntityError( `Le tableau d'identifiants devrait être un tableau de chaine de caractères.` ),\n                    ( this.useNext ) ? next : response\n                )\n\n            } else if ( isEmptyArray( ids ) ) {\n\n                TAbstractDataController.returnError(\n                    new UnprocessableEntityError( `Le tableau d'identifiants ne peut pas être vide.` ),\n                    ( this.useNext ) ? next : response\n                )\n\n            } else {\n\n                this._deleteMany( ids, response, next )\n\n            }\n\n        } else if ( isDefined( query ) ) {\n\n            if ( isNotObject( query ) ) {\n\n                TAbstractDataController.returnError(\n                    new UnprocessableEntityError( `La requete devrait être un objet javascript.` ),\n                    ( this.useNext ) ? next : response\n                )\n\n            } else if ( isEmptyObject( query ) ) {\n\n                this._deleteAll( response, next )\n\n            } else {\n\n                this._deleteWhere( query, response, next )\n\n            }\n\n        } else {\n\n            TAbstractDataController.returnError(\n                new UnprocessableEntityError( `La requete ne peut pas être vide.` ),\n                ( this.useNext ) ? next : response\n            )\n\n        }\n\n    }\n\n    _deleteOne ( /*id, response, next*/ ) {}\n\n    _deleteMany ( /*ids, response, next*/ ) {}\n\n    _deleteWhere ( /*query, response, next*/ ) {}\n\n    _deleteAll ( /*response, next*/ ) {}\n\n}\n\nexport { TAbstractDataController }\n","/**\n * @author [Ahmed DCHAR]{@link https://github.com/dragoneel}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @file Todo\n *\n * @example Todo\n *\n */\n\nclass TAbstractDataConverter {\n\n    constructor () {\n\n        this._isProcessing = false\n        this._queue        = []\n\n    }\n\n    convert ( file, parameters, onSuccess, onProgress, onError ) {\n\n        this._queue.push( {\n            file,\n            parameters,\n            onSuccess,\n            onProgress,\n            onError\n        } )\n\n        if ( !this._isProcessing ) {\n            this._processQueue()\n        }\n\n    }\n\n    _processQueue () {\n\n        if ( this._queue.length === 0 ) {\n\n            this._isProcessing = false\n            return\n\n        }\n\n        this._isProcessing = true\n\n        const self       = this\n        const dataBloc   = this._queue.shift()\n        const data       = dataBloc.file\n        const parameters = dataBloc.parameters\n        const onSuccess  = dataBloc.onSuccess\n        const onProgress = dataBloc.onProgress\n        const onError    = dataBloc.onError\n\n        self._convert(\n            data,\n            parameters,\n            _onSaveSuccess,\n            _onSaveProgress,\n            _onSaveError\n        )\n\n        function _onSaveSuccess ( result ) {\n\n            onSuccess( result )\n            self._processQueue()\n\n        }\n\n        function _onSaveProgress ( progress ) {\n\n            onProgress( progress )\n\n        }\n\n        function _onSaveError ( error ) {\n\n            onError( error )\n            self._processQueue()\n\n        }\n\n    }\n\n    _convert ( /*data, parameters, onSuccess, onProgress, onError*/ ) {}\n\n}\n\nexport { TAbstractDataConverter }\n","/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n */\n\nimport { isArray }            from 'itee-validators'\nimport path                   from 'path'\nimport { TAbstractResponder } from '../databases/TAbstractResponder'\n\n// Todo: Extend sort of Factory\nclass TAbstractConverterManager extends TAbstractResponder {\n\n    static _convertFilesObjectToArray ( files ) {\n\n        const fileArray = []\n\n        for ( let field in files ) {\n\n            if ( Object.prototype.hasOwnProperty.call( files, field ) ) {\n\n                fileArray.push( files[ field ] )\n\n            }\n\n        }\n\n        return fileArray\n\n    }\n\n    constructor ( parameters = {} ) {\n\n        const _parameters = {\n            ...{\n                driver:            null,\n                useNext:           false,\n                converters:        new Map(),\n                convertersOptions: undefined,\n                rules:             {},\n                inserter:          {}\n            }, ...parameters\n        }\n\n        super()\n\n        this._driver            = _parameters.driver\n        this._useNext           = _parameters.useNext\n        this._converters        = _parameters.converters\n        this._convertersOptions = _parameters.convertersOptions\n        this._rules             = _parameters.rules\n        this._inserter          = new _parameters.inserter( {\n            driver: this._driver\n        } )\n\n        this._errors         = []\n        this._processedFiles = []\n        this._filesToProcess = 0\n    }\n\n    _fileConversionSuccessCallback ( response, next, extraSuccessCallback, data ) {\n\n        if ( extraSuccessCallback ) {\n            extraSuccessCallback( data )\n            return\n        }\n\n        this._inserter.save(\n            data,\n            this._convertersOptions,\n            this._fileInsertionSuccessCallback.bind( this, response, next ),\n            this._fileConversionProgressCallback.bind( this, response ),\n            this._fileConversionErrorCallback.bind( this, response, next )\n        )\n\n    }\n\n    _fileInsertionSuccessCallback ( response, next, data ) {\n\n        this._filesToProcess--\n        this._checkEndOfReturns( response, next, data )\n\n    }\n\n    _fileConversionProgressCallback ( response, progress ) {\n\n        this.logger.log( progress )\n\n    }\n\n    _fileConversionErrorCallback ( response, next, error ) {\n\n        this._errors.push( error )\n        this._filesToProcess--\n        this._checkEndOfReturns( response, next, null )\n\n    }\n\n    _checkEndOfReturns ( response, next, data ) {\n\n        if ( this._errors.length > 0 ) {\n\n            if ( this._useNext ) {\n                next( this._errors )\n            } else {\n                TAbstractConverterManager.return( response )( this._errors )\n                this._errors = []\n            }\n\n        } else {\n            if ( this._useNext ) {\n                next()\n            } else {\n                TAbstractConverterManager.returnData( data, response )\n            }\n        }\n\n    }\n\n    processFiles ( request, response, next ) {\n\n        const files         = TAbstractConverterManager._convertFilesObjectToArray( request.files )\n        const numberOfFiles = files.length\n        if ( numberOfFiles === 0 ) {\n\n            if ( this._useNext ) {\n                next( `Aucun fichier à traiter !` )\n                return\n            } else {\n                TAbstractConverterManager.returnError( `Aucun fichier à traiter !`, response )\n            }\n\n        }\n\n        this._convertersOptions = request.body\n\n        // protect again multi-request from client on large file that take time to return response\n        const availableFiles = []\n        for ( let fileIndex = 0 ; fileIndex < numberOfFiles ; fileIndex++ ) {\n\n            let file = files[ fileIndex ]\n\n            if ( this._processedFiles.includes( file.name ) ) {\n\n                if ( this._useNext ) {\n                    next( `Le fichier ${ file.name } à déjà été inséré.` )\n                    return\n                } else {\n                    TAbstractConverterManager.returnError( `Le fichier ${ file.name } à déjà été inséré.`, response )\n                }\n\n            }\n\n            this._processedFiles.push( file.name )\n            availableFiles.push( file )\n\n        }\n\n        const availableFilesNumber = availableFiles.length\n        if ( availableFilesNumber === 0 ) {\n\n            if ( this._useNext ) {\n                next( `Impossible d'analyser ${ availableFilesNumber } fichiers associatifs simultanément !` )\n                return\n            } else {\n                TAbstractConverterManager.returnError( `Impossible d'analyser ${ availableFilesNumber } fichiers associatifs simultanément !`, response )\n            }\n\n        }\n\n        this._filesToProcess += availableFilesNumber\n\n        this._processFiles( availableFiles, this._convertersOptions, response, next )\n\n    }\n\n    _processFiles ( files, parameters, response, next ) {\n\n        const fileExtensions = files.map( ( file ) => path.extname( file.name ) )\n        const matchingRules  = this._rules.filter( elem => {\n\n            const availables = elem.on\n\n            if ( isArray( availables ) ) {\n\n                for ( let i = 0 ; i < availables.length ; i++ ) {\n                    if ( !fileExtensions.includes( availables[ i ] ) ) {\n                        return false\n                    }\n                }\n                return true\n\n            } else {\n                return fileExtensions.includes( availables )\n            }\n\n        } )\n\n        for ( let ruleIndex = 0, numberOfRules = matchingRules.length ; ruleIndex < numberOfRules ; ruleIndex++ ) {\n            let converterNames = matchingRules[ ruleIndex ].use\n\n            if ( isArray( converterNames ) ) {\n\n                let previousOnSucess = undefined\n                for ( let converterIndex = converterNames.length - 1 ; converterIndex >= 0 ; converterIndex-- ) {\n                    const converterName = converterNames[ converterIndex ]\n\n                    if ( converterIndex === 0 ) {\n\n                        this._converters[ converterName ].convert(\n                            files,\n                            parameters,\n                            this._fileConversionSuccessCallback.bind( this, response, next, previousOnSucess ),\n                            this._fileConversionProgressCallback.bind( this, response ),\n                            this._fileConversionErrorCallback.bind( this, response, next )\n                        )\n\n                    } else if ( converterIndex === converterNames.length - 1 ) {\n\n                        previousOnSucess = ( previousResult ) => {\n\n                            this._converters[ converterName ].convert(\n                                previousResult,\n                                parameters,\n                                this._fileConversionSuccessCallback.bind( this, response, next, null ),\n                                this._fileConversionProgressCallback.bind( this, response ),\n                                this._fileConversionErrorCallback.bind( this, response, next )\n                            )\n\n                        }\n\n                    } else {\n\n                        previousOnSucess = ( previousResult ) => {\n\n                            this._converters[ converterName ].convert(\n                                previousResult,\n                                parameters,\n                                this._fileConversionSuccessCallback.bind( this, response, next, previousOnSucess ),\n                                this._fileConversionProgressCallback.bind( this, response ),\n                                this._fileConversionErrorCallback.bind( this, response, next )\n                            )\n\n                        }\n\n                    }\n\n                }\n\n            } else {\n\n                this._converters[ converterNames ].convert(\n                    files[ 0 ],\n                    parameters,\n                    this._fileConversionSuccessCallback.bind( this, response, next, null ),\n                    this._fileConversionProgressCallback.bind( this, response ),\n                    this._fileConversionErrorCallback.bind( this, response, next )\n                )\n\n            }\n\n        }\n\n    }\n\n}\n\nexport { TAbstractConverterManager }\n","/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @file Todo\n *\n * @example Todo\n *\n */\n\n    // Todo: Extend from TDataQueueProcessor\nclass TAbstractDataInserter {\n\n    constructor ( parameters = {} ) {\n\n        const _parameters = {\n            ...{\n                driver: null\n            }, ...parameters\n        }\n\n        this._driver = _parameters.driver\n\n        this._isProcessing = false\n        this._queue        = []\n\n    }\n\n    save ( data, parameters, onSuccess, onProgress, onError ) {\n\n        if ( !data ) {\n            onError( 'Data cannot be null or empty, aborting database insert !!!' )\n            return\n        }\n\n        if ( !parameters ) {\n            onError( 'Invalid parent id, unable to set children to unknown database node !!!' )\n            return\n        }\n\n        this._queue.push( {\n            data,\n            parameters,\n            onSuccess,\n            onProgress,\n            onError\n        } )\n\n        this._processQueue()\n\n    }\n\n    _processQueue () {\n\n        if ( this._queue.length === 0 || this._isProcessing ) { return }\n\n        this._isProcessing = true\n\n        const self       = this\n        const dataBloc   = this._queue.shift()\n        const data       = dataBloc.data\n        const parameters = dataBloc.parameters\n        const onSuccess  = dataBloc.onSuccess\n        const onProgress = dataBloc.onProgress\n        const onError    = dataBloc.onError\n\n        self._save(\n            data,\n            parameters,\n            _onSaveSuccess,\n            _onSaveProgress,\n            _onSaveError\n        )\n\n        function _onSaveSuccess ( result ) {\n\n            onSuccess( result )\n\n            self._isProcessing = false\n            self._processQueue()\n\n        }\n\n        function _onSaveProgress ( progress ) {\n\n            onProgress( progress )\n\n        }\n\n        function _onSaveError ( error ) {\n\n            onError( error )\n\n            self._isProcessing = false\n            self._processQueue()\n\n        }\n\n    }\n\n    _save ( /*data, parameters, onSuccess, onProgress, onError*/ ) {}\n\n}\n\nexport { TAbstractDataInserter }\n","/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @file Todo\n *\n * @example Todo\n *\n */\n\nimport * as globalBuffer from 'buffer'\nimport fs                from 'fs'\nimport {\n    isNull,\n    isString,\n    isUndefined\n}                        from 'itee-validators'\nimport { Writable }      from 'stream'\n\n/* Writable memory stream */\nclass MemoryWriteStream extends Writable {\n\n    constructor ( options ) {\n\n        super( options )\n\n        const bufferSize  = options.bufferSize || globalBuffer.kStringMaxLength\n        this.memoryBuffer = Buffer.alloc( bufferSize )\n        this.offset       = 0\n    }\n\n    _final ( callback ) {\n\n        callback()\n\n    }\n\n    _write ( chunk, encoding, callback ) {\n\n        // our memory store stores things in buffers\n        const buffer = ( Buffer.isBuffer( chunk ) ) ? chunk : new Buffer( chunk, encoding )\n\n        // concat to the buffer already there\n        for ( let byteIndex = 0, numberOfByte = buffer.length ; byteIndex < numberOfByte ; byteIndex++ ) {\n            this.memoryBuffer[ this.offset ] = buffer[ byteIndex ]\n            this.offset++\n        }\n\n        // Next\n        callback()\n\n    }\n\n    _writev ( chunks, callback ) {\n\n        for ( let chunkIndex = 0, numberOfChunks = chunks.length ; chunkIndex < numberOfChunks ; chunkIndex++ ) {\n            this.memoryBuffer = Buffer.concat( [ this.memoryBuffer, chunks[ chunkIndex ] ] )\n        }\n\n        // Next\n        callback()\n\n    }\n\n    _releaseMemory () {\n\n        this.memoryBuffer = null\n\n    }\n\n    toArrayBuffer () {\n\n        const buffer      = this.memoryBuffer\n        const arrayBuffer = new ArrayBuffer( buffer.length )\n        const view        = new Uint8Array( arrayBuffer )\n\n        for ( let i = 0 ; i < buffer.length ; ++i ) {\n            view[ i ] = buffer[ i ]\n        }\n\n        this._releaseMemory()\n\n        return arrayBuffer\n\n    }\n\n    toJSON () {\n\n        return JSON.parse( this.toString() )\n\n    }\n\n    toString () {\n\n        const string = this.memoryBuffer.toString()\n        this._releaseMemory()\n\n        return string\n\n    }\n\n}\n\n////////\n\nclass TAbstractFileConverter {\n\n    constructor ( parameters = {} ) {\n\n        const _parameters = {\n            ...{\n                dumpType: TAbstractFileConverter.DumpType.ArrayBuffer\n            }, ...parameters\n        }\n\n        this.dumpType = _parameters.dumpType\n\n        this._isProcessing = false\n        this._queue        = []\n\n    }\n\n    get dumpType () {\n\n        return this._dumpType\n\n    }\n\n    set dumpType ( value ) {\n\n        if ( isNull( value ) ) { throw new TypeError( 'Dump type cannot be null ! Expect a non empty string.' ) }\n        if ( isUndefined( value ) ) { throw new TypeError( 'Dump type cannot be undefined ! Expect a non empty string.' ) }\n\n        this._dumpType = value\n\n    }\n\n    setDumpType ( value ) {\n\n        this.dumpType = value\n        return this\n\n    }\n\n    convert ( file, parameters, onSuccess, onProgress, onError ) {\n\n        if ( !file ) {\n            onError( 'File cannot be null or empty, aborting file convertion !!!' )\n            return\n        }\n\n        this._queue.push( {\n            file,\n            parameters,\n            onSuccess,\n            onProgress,\n            onError\n        } )\n\n        this._processQueue()\n\n    }\n\n    _processQueue () {\n\n        if ( this._queue.length === 0 || this._isProcessing ) { return }\n\n        this._isProcessing = true\n\n        const self       = this\n        const dataBloc   = this._queue.shift()\n        const file       = dataBloc.file\n        const parameters = dataBloc.parameters\n        const onSuccess  = dataBloc.onSuccess\n        const onProgress = dataBloc.onProgress\n        const onError    = dataBloc.onError\n\n        if ( isString( file ) ) {\n\n            self._dumpFileInMemoryAs(\n                self._dumpType,\n                file,\n                parameters,\n                _onDumpSuccess,\n                _onProcessProgress,\n                _onProcessError\n            )\n\n        } else {\n\n            const data = file.data\n\n            switch ( self._dumpType ) {\n\n                case TAbstractFileConverter.DumpType.ArrayBuffer: {\n\n                    const bufferSize  = data.length\n                    const arrayBuffer = new ArrayBuffer( bufferSize )\n                    const view        = new Uint8Array( arrayBuffer )\n\n                    for ( let i = 0 ; i < bufferSize ; ++i ) {\n                        view[ i ] = data[ i ]\n                    }\n\n                    _onDumpSuccess( arrayBuffer )\n\n                }\n                    break\n\n                case TAbstractFileConverter.DumpType.JSON:\n                    _onDumpSuccess( JSON.parse( data.toString() ) )\n                    break\n\n                case TAbstractFileConverter.DumpType.String:\n                    _onDumpSuccess( data.toString() )\n                    break\n\n                default:\n                    throw new RangeError( `Invalid switch parameter: ${ self._dumpType }` )\n\n            }\n\n        }\n\n        function _onDumpSuccess ( data ) {\n\n            self._convert(\n                data,\n                parameters,\n                _onProcessSuccess,\n                _onProcessProgress,\n                _onProcessError\n            )\n\n        }\n\n        function _onProcessSuccess ( threeData ) {\n\n            onSuccess( threeData )\n\n            self._isProcessing = false\n            self._processQueue()\n\n        }\n\n        function _onProcessProgress ( progress ) {\n\n            onProgress( progress )\n\n        }\n\n        function _onProcessError ( error ) {\n\n            onError( error )\n\n            self._isProcessing = false\n            self._processQueue()\n\n        }\n\n    }\n\n    _dumpFileInMemoryAs ( dumpType, file, parameters, onSuccess, onProgress, onError ) {\n\n        let isOnError = false\n\n        const fileReadStream = fs.createReadStream( file )\n\n        fileReadStream.on( 'error', ( error ) => {\n\n            isOnError = true\n            onError( error )\n\n        } )\n\n        const fileSize          = parseInt( parameters.fileSize )\n        const memoryWriteStream = new MemoryWriteStream( { bufferSize: fileSize } )\n\n        memoryWriteStream.on( 'error', ( error ) => {\n\n            isOnError = true\n            onError( error )\n\n        } )\n\n        memoryWriteStream.on( 'finish', () => {\n\n            if ( isOnError ) {\n                return\n            }\n\n            switch ( dumpType ) {\n\n                case TAbstractFileConverter.DumpType.ArrayBuffer:\n                    onSuccess( memoryWriteStream.toArrayBuffer() )\n                    break\n\n                case TAbstractFileConverter.DumpType.String:\n                    onSuccess( memoryWriteStream.toString() )\n                    break\n\n                case TAbstractFileConverter.DumpType.JSON:\n                    onSuccess( memoryWriteStream.toJSON() )\n                    break\n\n                default:\n                    throw new RangeError( `Invalid switch parameter: ${ dumpType }` )\n\n            }\n\n            fileReadStream.unpipe()\n            fileReadStream.close()\n            memoryWriteStream.end()\n\n        } )\n\n        fileReadStream.pipe( memoryWriteStream )\n\n    }\n\n    _convert ( /*data, parameters, onSuccess, onProgress, onError*/ ) {}\n\n}\n\nTAbstractFileConverter.MAX_FILE_SIZE = 67108864\n\nTAbstractFileConverter.DumpType = /*#__PURE__*/Object.freeze( {\n    ArrayBuffer: 0,\n    String:      1,\n    JSON:        2\n} )\n\nexport {\n    TAbstractFileConverter,\n    MemoryWriteStream\n}\n","/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n */\n\nimport { TAbstractObject } from 'itee-core'\nimport {\n    isNull,\n    isUndefined\n}                          from 'itee-validators'\n\nclass TAbstractDatabasePlugin extends TAbstractObject {\n\n    static _registerRoutesTo ( Driver, Application, Router, ControllerCtors, descriptors, Logger ) {\n\n        for ( let index = 0, numberOfDescriptor = descriptors.length ; index < numberOfDescriptor ; index++ ) {\n\n            const descriptor      = descriptors[ index ]\n            const ControllerClass = ControllerCtors.get( descriptor.controller.name )\n            const controller      = new ControllerClass( {\n                driver: Driver,\n                ...descriptor.controller.options\n            } )\n            const router          = Router( { mergeParams: true } )\n\n            Logger.log( `\\tAdd controller for base route: ${ descriptor.route }` )\n            Application.use( descriptor.route, TAbstractDatabasePlugin._populateRouter( router, controller, descriptor.controller.can, Logger ) )\n\n        }\n\n    }\n    static _populateRouter ( router, controller, can = {}, Logger ) {\n\n        for ( let _do in can ) {\n\n            const action = can[ _do ]\n\n            Logger.log( `\\t\\tMap route ${ action.over } on (${ action.on }) to ${ controller.constructor.name }.${ _do } method.` )\n            router[ action.on ]( action.over, controller[ _do ].bind( controller ) )\n\n        }\n\n        return router\n\n    }\n    constructor ( parameters = {} ) {\n\n        const _parameters = {\n            ...{\n                controllers: new Map(),\n                descriptors: []\n            },\n            ...parameters\n        }\n\n        super( _parameters )\n\n        this.controllers = _parameters.controllers\n        this.descriptors = _parameters.descriptors\n\n        this.__dirname = undefined\n\n    }\n    get controllers () {\n        return this._controllers\n    }\n    set controllers ( value ) {\n\n        if ( isNull( value ) ) { throw new TypeError( 'Controllers cannot be null ! Expect a map of controller.' ) }\n        if ( isUndefined( value ) ) { throw new TypeError( 'Controllers cannot be undefined ! Expect a map of controller.' ) }\n        if ( !( value instanceof Map ) ) { throw new TypeError( `Controllers cannot be an instance of ${ value.constructor.name } ! Expect a map of controller.` ) }\n\n        this._controllers = value\n\n    }\n    get descriptors () {\n        return this._descriptors\n    }\n    set descriptors ( value ) {\n\n        if ( isNull( value ) ) { throw new TypeError( 'Descriptors cannot be null ! Expect an array of POJO.' ) }\n        if ( isUndefined( value ) ) { throw new TypeError( 'Descriptors cannot be undefined ! Expect an array of POJO.' ) }\n\n        this._descriptors = value\n\n    }\n    addController ( value ) {\n\n        this._controllers.set( value.name, value )\n        return this\n\n    }\n\n    addDescriptor ( value ) {\n\n        this._descriptors.push( value )\n        return this\n\n    }\n\n    beforeRegisterRoutes ( /*driver*/ ) {}\n\n    registerTo ( driver, application, router ) {\n\n        this.beforeRegisterRoutes( driver )\n\n        TAbstractDatabasePlugin._registerRoutesTo( driver, application, router, this._controllers, this._descriptors, this.logger )\n\n    }\n\n}\n\nexport { TAbstractDatabasePlugin }\n","/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @file Todo\n *\n * @example Todo\n *\n */\n\nimport { TAbstractObject }         from 'itee-core'\nimport {\n    isNull,\n    isUndefined\n}                                  from 'itee-validators'\nimport path                        from 'path'\nimport { TAbstractDatabasePlugin } from '../plugins/TAbstractDatabasePlugin'\n\nclass TAbstractDatabase extends TAbstractObject {\n\n    constructor ( parameters = {} ) {\n\n        const _parameters = {\n            ...{\n                driver:      null,\n                application: null,\n                router:      null,\n                plugins:     []\n            },\n            ...parameters\n        }\n\n        super( _parameters )\n\n        this.driver      = _parameters.driver\n        this.application = _parameters.application\n        this.router      = _parameters.router\n        this.plugins     = _parameters.plugins\n    }\n\n    get plugins () {\n\n        return this._plugins\n\n    }\n\n    set plugins ( value ) {\n\n        if ( isNull( value ) ) { throw new TypeError( 'Plugins cannot be null ! Expect an array of TDatabasePlugin.' ) }\n        if ( isUndefined( value ) ) { throw new TypeError( 'Plugins cannot be undefined ! Expect an array of TDatabasePlugin.' ) }\n\n        this._plugins = value\n        this._registerPlugins()\n\n    }\n\n    get router () {\n\n        return this._router\n\n    }\n\n    set router ( value ) {\n\n        if ( isNull( value ) ) { throw new TypeError( 'Router cannot be null ! Expect a Express Router.' ) }\n        if ( isUndefined( value ) ) { throw new TypeError( 'Router cannot be undefined ! Expect a Express Router.' ) }\n\n        this._router = value\n\n    }\n\n    get application () {\n\n        return this._application\n\n    }\n\n    set application ( value ) {\n\n        if ( isNull( value ) ) { throw new TypeError( 'Application cannot be null ! Expect a Express Application.' ) }\n        if ( isUndefined( value ) ) { throw new TypeError( 'Application cannot be undefined ! Expect a Express Application.' ) }\n\n        this._application = value\n\n    }\n\n    get driver () {\n\n        return this._driver\n\n    }\n\n    set driver ( value ) {\n\n        if ( isNull( value ) ) { throw new TypeError( 'Driver cannot be null ! Expect a database driver.' ) }\n        if ( isUndefined( value ) ) { throw new TypeError( 'Driver cannot be undefined ! Expect a database driver.' ) }\n\n        this._driver = value\n\n    }\n\n    setPlugins ( value ) {\n\n        this.plugins = value\n        return this\n\n    }\n\n    addPlugin ( value ) {\n\n        this._plugins.push( value )\n\n        const [ key, data ] = Object.entries( value )[ 0 ]\n        this._registerPlugin( key, data )\n\n        return this\n\n    }\n\n    setRouter ( value ) {\n\n        this.router = value\n        return this\n\n    }\n\n    setApplication ( value ) {\n\n        this.application = value\n        return this\n\n    }\n\n    setDriver ( value ) {\n\n        this.driver = value\n        return this\n\n    }\n\n    init () {}\n\n    _registerPlugins () {\n\n        for ( let [ name, config ] of Object.entries( this._plugins ) ) {\n            this._registerPlugin( name, config )\n        }\n\n    }\n\n    _registerPlugin ( name, config ) {\n\n        if ( this._registerPackagePlugin( name, config ) ) { return }\n        if ( this._registerLocalPlugin( name, config ) ) { return }\n\n        this.logger.error( `Unable to register the plugin ${ name } the package or local folder doesn't seem to exist ! Skip it.` )\n\n    }\n\n    _registerPackagePlugin ( name, config ) {\n\n        let success = false\n\n        try {\n\n            //[Itee:01/03/2022] Todo: Waiting better plugin management for package that expose more than instancied plugin\n            let plugin = require( name )\n            if(plugin.registerPlugin) {\n                plugin = plugin.registerPlugin( config )\n            }\n\n            if ( plugin instanceof TAbstractDatabasePlugin ) {\n\n                this.logger.log( `Use ${ name } plugin from node_modules` )\n                plugin.__dirname = path.dirname( require.resolve( name ) )\n                plugin.registerTo( this.driver, this.application, this.router )\n\n                success = true\n\n            } else {\n\n                this.logger.error( `The plugin ${ name } doesn't seem to be an instance of an extended class from TAbstractDatabasePlugin ! Skip it.` )\n\n            }\n\n        } catch ( error ) {\n\n            if ( !error.code || error.code !== 'MODULE_NOT_FOUND' ) {\n\n                this.logger.error( error )\n\n            }\n\n        }\n\n        return success\n\n    }\n\n    _registerLocalPlugin ( name, config ) {\n\n        let success = false\n\n        try {\n\n            //[Itee:01/03/2022] Todo: Waiting better plugin management for package that expose more than instancied plugin\n            // todo use rootPath or need to resolve depth correctly !\n            const localPluginPath = path.join( __dirname, '../../../', 'databases/plugins/', name, `${ name }.js` )\n            let plugin = require( localPluginPath )\n            if(plugin.registerPlugin) {\n                plugin = plugin.registerPlugin( config )\n            }\n\n            if ( plugin instanceof TAbstractDatabasePlugin ) {\n\n                this.logger.log( `Use ${ name } plugin from local folder` )\n                plugin.__dirname = path.dirname( require.resolve( localPluginPath ) )\n                plugin.registerTo( this.driver, this.application, this.router )\n\n                success = true\n\n            } else {\n\n                this.logger.error( `The plugin ${ name } doesn't seem to be an instance of an extended class from TAbstractDatabasePlugin ! Skip it.` )\n\n            }\n\n        } catch ( error ) {\n\n            this.logger.error( error )\n\n        }\n\n        return success\n\n    }\n\n    connect () {}\n\n    close ( /*callback*/ ) {}\n\n    on ( /*eventName, callback*/ ) {}\n\n}\n\nexport { TAbstractDatabase }\n","/**\n * @module Messages/HTTP/BadRequestError\n * @desc Export the BadRequestError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass BadRequestError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 400\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 400 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isBadRequestError () { return true }\n\n}\n\nexport { BadRequestError }\n","/**\n * @module Messages/HTTP/BadMappingError\n * @desc Export the BadMappingError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass BadMappingError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 421\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 421 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isBadMappingError () { return true }\n\n}\n\nexport { BadMappingError }\n","/**\n * @module Messages/HTTP/BlockedByWindowsParentalControlsError\n * @desc Export the BlockedByWindowsParentalControlsError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass BlockedByWindowsParentalControlsError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 450\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 450 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isBlockedByWindowsParentalControlsError () { return true }\n\n}\n\nexport { BlockedByWindowsParentalControlsError }\n","/**\n * @module Messages/HTTP/ClientClosedRequestError\n * @desc Export the ClientClosedRequestError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass ClientClosedRequestError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 499\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 499 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isClientClosedRequestError () { return true }\n\n}\n\nexport { ClientClosedRequestError }\n","/**\n * @module Messages/HTTP/ConflictError\n * @desc Export the ConflictError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass ConflictError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 409\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 409 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isConflictError () { return true }\n\n}\n\nexport { ConflictError }\n","/**\n * @module Messages/HTTP/ExpectationFailedError\n * @desc Export the ExpectationFailedError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass ExpectationFailedError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 417\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 417 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isExpectationFailedError () { return true }\n\n}\n\nexport { ExpectationFailedError }\n","/**\n * @module Messages/HTTP/ForbiddenError\n * @desc Export the ForbiddenError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass ForbiddenError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 403\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 403 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isForbiddenError () { return true }\n\n}\n\nexport { ForbiddenError }\n","/**\n * @module Messages/HTTP/GoneError\n * @desc Export the GoneError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass GoneError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 410\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 410 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isGoneError () { return true }\n\n}\n\nexport { GoneError }\n","/**\n * @module Messages/HTTP/HTTPRequestSentToHTTPSPortError\n * @desc Export the HTTPRequestSentToHTTPSPortError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass HTTPRequestSentToHTTPSPortError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 497\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 497 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isHTTPRequestSentToHTTPSPortError () { return true }\n\n}\n\nexport { HTTPRequestSentToHTTPSPortError }\n","/**\n * @module Messages/HTTP/ImATeapotError\n * @desc Export the ImATeapotError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass ImATeapotError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 418\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 418 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isImATeapotError () { return true }\n\n}\n\nexport { ImATeapotError }\n","/**\n * @module Messages/HTTP/LengthRequiredError\n * @desc Export the LengthRequiredError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass LengthRequiredError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 411\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 411 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isLengthRequiredError () { return true }\n\n}\n\nexport { LengthRequiredError }\n","/**\n * @module Messages/HTTP/LockedError\n * @desc Export the LockedError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass LockedError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 423\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 423 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isLockedError () { return true }\n\n}\n\nexport { LockedError }\n","/**\n * @module Messages/HTTP/MethodFailureError\n * @desc Export the MethodFailureError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass MethodFailureError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 424\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 424 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isMethodFailureError () { return true }\n\n}\n\nexport { MethodFailureError }\n","/**\n * @module Messages/HTTP/MethodNotAllowedError\n * @desc Export the MethodNotAllowedError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass MethodNotAllowedError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 405\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 405 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isMethodNotAllowedError () { return true }\n\n}\n\nexport { MethodNotAllowedError }\n","/**\n * @module Messages/HTTP/NoResponseError\n * @desc Export the NoResponseError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass NoResponseError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 444\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 444 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isNoResponseError () { return true }\n\n}\n\nexport { NoResponseError }\n","/**\n * @module Messages/HTTP/NotAcceptableError\n * @desc Export the NotAcceptableError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass NotAcceptableError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 406\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 406 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isNotAcceptableError () { return true }\n\n}\n\nexport { NotAcceptableError }\n","/**\n * @module Messages/HTTP/NotFoundError\n * @desc Export the NotFoundError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass NotFoundError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 404\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 404 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isNotFoundError () { return true }\n\n}\n\nexport { NotFoundError }\n","/**\n * @module Messages/HTTP/PaymentRequiredError\n * @desc Export the PaymentRequiredError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass PaymentRequiredError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 402\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 402 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isPaymentRequiredError () { return true }\n\n}\n\nexport { PaymentRequiredError }\n","/**\n * @module Messages/HTTP/PreconditionFailedError\n * @desc Export the PreconditionFailedError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass PreconditionFailedError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 412\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 412 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isPreconditionFailedError () { return true }\n\n}\n\nexport { PreconditionFailedError }\n","/**\n * @module Messages/HTTP/PreconditionRequiredError\n * @desc Export the PreconditionRequiredError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass PreconditionRequiredError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 428\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 428 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isPreconditionRequiredError () { return true }\n\n}\n\nexport { PreconditionRequiredError }\n","/**\n * @module Messages/HTTP/ProxyAuthenticationRequiredError\n * @desc Export the ProxyAuthenticationRequiredError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass ProxyAuthenticationRequiredError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 407\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 407 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isProxyAuthenticationRequiredError () { return true }\n\n}\n\nexport { ProxyAuthenticationRequiredError }\n","/**\n * @module Messages/HTTP/RequestEntityTooLargeError\n * @desc Export the RequestEntityTooLargeError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass RequestEntityTooLargeError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 413\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 413 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isRequestEntityTooLargeError () { return true }\n\n}\n\nexport { RequestEntityTooLargeError }\n","/**\n * @module Messages/HTTP/RequestHeaderFieldsTooLargeError\n * @desc Export the RequestHeaderFieldsTooLargeError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass RequestHeaderFieldsTooLargeError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 431\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 431 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isRequestHeaderFieldsTooLargeError () { return true }\n\n}\n\nexport { RequestHeaderFieldsTooLargeError }\n","/**\n * @module Messages/HTTP/RequestRangeUnsatisfiableError\n * @desc Export the RequestRangeUnsatisfiableError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass RequestRangeUnsatisfiableError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 416\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 416 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isRequestRangeUnsatisfiableError () { return true }\n\n}\n\nexport { RequestRangeUnsatisfiableError }\n","/**\n * @module Messages/HTTP/RequestTimeOutError\n * @desc Export the RequestTimeOutError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass RequestTimeOutError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 408\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 408 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isRequestTimeOutError () { return true }\n\n}\n\nexport { RequestTimeOutError }\n","/**\n * @module Messages/HTTP/RetryWithError\n * @desc Export the RetryWithError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass RetryWithError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 449\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 449 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isRetryWithError () { return true }\n\n}\n\nexport { RetryWithError }\n","/**\n * @module Messages/HTTP/SSLCertificateError\n * @desc Export the SSLCertificateError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass SSLCertificateError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 495\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 495 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isSSLCertificateError () { return true }\n\n}\n\nexport { SSLCertificateError }\n","/**\n * @module Messages/HTTP/SSLCertificateRequiredError\n * @desc Export the SSLCertificateRequiredError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass SSLCertificateRequiredError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 496\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 496 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isSSLCertificateRequiredError () { return true }\n\n}\n\nexport { SSLCertificateRequiredError }\n","/**\n * @module Messages/HTTP/TooManyRequestsError\n * @desc Export the TooManyRequestsError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass TooManyRequestsError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 429\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 429 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isTooManyRequestsError () { return true }\n\n}\n\nexport { TooManyRequestsError }\n","/**\n * @module Messages/HTTP/UnauthorizedError\n * @desc Export the UnauthorizedError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass UnauthorizedError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 401\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 401 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isUnauthorizedError () { return true }\n\n}\n\nexport { UnauthorizedError }\n","/**\n * @module Messages/HTTP/UnavailableForLegalReasonsError\n * @desc Export the UnavailableForLegalReasonsError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass UnavailableForLegalReasonsError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 451\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 451 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isUnavailableForLegalReasonsError () { return true }\n\n}\n\nexport { UnavailableForLegalReasonsError }\n","/**\n * @module Messages/HTTP/UnorderedCollectionError\n * @desc Export the UnorderedCollectionError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass UnorderedCollectionError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 425\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 425 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isUnorderedCollectionError () { return true }\n\n}\n\nexport { UnorderedCollectionError }\n","/**\n * @module Messages/HTTP/UnrecoverableError\n * @desc Export the UnrecoverableError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass UnrecoverableError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 456\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 456 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isUnrecoverableError () { return true }\n\n}\n\nexport { UnrecoverableError }\n","/**\n * @module Messages/HTTP/UpgradeRequiredError\n * @desc Export the UpgradeRequiredError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass UpgradeRequiredError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 426\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 426 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isUpgradeRequiredError () { return true }\n\n}\n\nexport { UpgradeRequiredError }\n","/**\n * @module Messages/HTTP/ATimeoutOccuredError\n * @desc Export the ATimeoutOccuredError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass ATimeoutOccuredError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 524\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 524 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isATimeoutOccuredError () { return true }\n\n}\n\nexport { ATimeoutOccuredError }\n","/**\n * @module Messages/HTTP/BadGatewayError\n * @desc Export the BadGatewayError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass BadGatewayError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 502\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 502 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isBadGatewayError () { return true }\n\n}\n\nexport { BadGatewayError }\n","/**\n * @module Messages/HTTP/BandwidthLimitExceededError\n * @desc Export the BandwidthLimitExceededError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass BandwidthLimitExceededError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 509\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 509 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isBandwidthLimitExceededError () { return true }\n\n}\n\nexport { BandwidthLimitExceededError }\n","/**\n * @module Messages/HTTP/ConnectionTimedOutError\n * @desc Export the ConnectionTimedOutError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass ConnectionTimedOutError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 522\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 522 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isConnectionTimedOutError () { return true }\n\n}\n\nexport { ConnectionTimedOutError }\n","/**\n * @module Messages/HTTP/GatewayTimeOutError\n * @desc Export the GatewayTimeOutError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass GatewayTimeOutError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 504\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 504 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isGatewayTimeOutError () { return true }\n\n}\n\nexport { GatewayTimeOutError }\n","/**\n * @module Messages/HTTP/HTTPVersionNotSupportedError\n * @desc Export the HTTPVersionNotSupportedError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass HTTPVersionNotSupportedError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 505\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 505 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isHTTPVersionNotSupportedError () { return true }\n\n}\n\nexport { HTTPVersionNotSupportedError }\n","/**\n * @module Messages/HTTP/InsufficientStorageError\n * @desc Export the InsufficientStorageError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass InsufficientStorageError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 507\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 507 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isInsufficientStorageError () { return true }\n\n}\n\nexport { InsufficientStorageError }\n","/**\n * @module Messages/HTTP/InternalServerError\n * @desc Export the InternalServerError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass InternalServerError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 500\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 500 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isInternalServerError () { return true }\n\n}\n\nexport { InternalServerError }\n","/**\n * @module Messages/HTTP/InvalidSSLCertificateError\n * @desc Export the InvalidSSLCertificateError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass InvalidSSLCertificateError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 526\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 526 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isInvalidSSLCertificateError () { return true }\n\n}\n\nexport { InvalidSSLCertificateError }\n","/**\n * @module Messages/HTTP/LoopDetectedError\n * @desc Export the LoopDetectedError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass LoopDetectedError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 508\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 508 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isLoopDetectedError () { return true }\n\n}\n\nexport { LoopDetectedError }\n","/**\n * @module Messages/HTTP/NetworkAuthenticationRequiredError\n * @desc Export the NetworkAuthenticationRequiredError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass NetworkAuthenticationRequiredError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 511\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 511 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isNetworkAuthenticationRequiredError () { return true }\n\n}\n\nexport { NetworkAuthenticationRequiredError }\n","/**\n * @module Messages/HTTP/NotExtendedError\n * @desc Export the NotExtendedError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass NotExtendedError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 510\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 510 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isNotExtendedError () { return true }\n\n}\n\nexport { NotExtendedError }\n","/**\n * @module Messages/HTTP/NotImplementedError\n * @desc Export the NotImplementedError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass NotImplementedError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 501\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 501 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isNotImplementedError () { return true }\n\n}\n\nexport { NotImplementedError }\n","/**\n * @module Messages/HTTP/OriginIsUnreachableError\n * @desc Export the OriginIsUnreachableError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass OriginIsUnreachableError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 523\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 523 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isOriginIsUnreachableError () { return true }\n\n}\n\nexport { OriginIsUnreachableError }\n","/**\n * @module Messages/HTTP/RailgunError\n * @desc Export the RailgunError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass RailgunError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 527\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 527 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isRailgunError () { return true }\n\n}\n\nexport { RailgunError }\n","/**\n * @module Messages/HTTP/ServiceUnavailableError\n * @desc Export the ServiceUnavailableError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass ServiceUnavailableError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 503\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 503 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isServiceUnavailableError () { return true }\n\n}\n\nexport { ServiceUnavailableError }\n","/**\n * @module Messages/HTTP/SSLHandshakeFailedError\n * @desc Export the SSLHandshakeFailedError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass SSLHandshakeFailedError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 525\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 525 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isSSLHandshakeFailedError () { return true }\n\n}\n\nexport { SSLHandshakeFailedError }\n","/**\n * @module Messages/HTTP/VariantAlsoNegotiatesError\n * @desc Export the VariantAlsoNegotiatesError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass VariantAlsoNegotiatesError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 506\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 506 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isVariantAlsoNegotiatesError () { return true }\n\n}\n\nexport { VariantAlsoNegotiatesError }\n","/**\n * @module Messages/HTTP/WebServerIsDownError\n * @desc Export the WebServerIsDownError http message class.\n *\n * @requires {@link https://github.com/Itee/itee-validators itee-validators}\n * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n *\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n */\n\nimport { AbstractHTTPError } from './AbstractHTTPError'\n\n/**\n * @class\n * @classdesc The UnprocessableEntityError is the error class for this kind of error.\n * It extend is AbstractHTTPError and fix his status code.\n *\n * @extends module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError\n */\nclass WebServerIsDownError extends AbstractHTTPError {\n\n    /**\n     * The static statusCode getter reimplementation for this kind of error, will return 521\n     * @see module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError#statusCode\n     * @static\n     * @constant\n     * @default 422\n     * @type {number}\n     */\n    static get statusCode () { return 521 }\n    /**\n     * A boolean based on classname that allow fast type checking, will ever be true\n     * @constant\n     * @default true\n     * @type {boolean}\n     */\n    get isWebServerIsDownError () { return true }\n\n}\n\nexport { WebServerIsDownError }\n","/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @file Todo\n *\n * @example Todo\n *\n */\n\n\n// Controllers\nexport * from './controllers/TAbstractDataController'\n\n// Converters\nexport * from './converters/TAbstractDataConverter'\nexport * from './converters/TAbstractConverterManager'\nexport * from './converters/TAbstractDataInserter'\nexport * from './converters/TAbstractFileConverter'\n\n// Databases\nexport * from './databases/TAbstractDatabase'\nexport * from './databases/TAbstractResponder'\n\n// Messages\nexport * from './messages/_messages'\n\n// Plugins interfaces\nexport * from './plugins/TAbstractDatabasePlugin'\n\nexport const Databases = new Map()\n"],"names":["uuidv4"],"mappings":"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ACA,IAAI,EAAE,CAAC,4BAA4B,EAAE;AACrC;AACA;;ACnPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,eAAe,SAAS,iBAAiB,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,iBAAiB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC5C;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,eAAe,SAAS,iBAAiB,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,iBAAiB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC5C;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qCAAqC,SAAS,iBAAiB,CAAC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,uCAAuC,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAClE;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,wBAAwB,SAAS,iBAAiB,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,0BAA0B,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACrD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa,SAAS,iBAAiB,CAAC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,eAAe,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC1C;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,sBAAsB,SAAS,iBAAiB,CAAC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,wBAAwB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACnD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,cAAc,SAAS,iBAAiB,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,gBAAgB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC3C;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,SAAS,SAAS,iBAAiB,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,WAAW,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACtC;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,+BAA+B,SAAS,iBAAiB,CAAC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,iCAAiC,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC5D;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,cAAc,SAAS,iBAAiB,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,gBAAgB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC3C;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mBAAmB,SAAS,iBAAiB,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,qBAAqB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAChD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,WAAW,SAAS,iBAAiB,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,aAAa,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACxC;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kBAAkB,SAAS,iBAAiB,CAAC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,oBAAoB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC/C;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB,SAAS,iBAAiB,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,uBAAuB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAClD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,eAAe,SAAS,iBAAiB,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,iBAAiB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC5C;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kBAAkB,SAAS,iBAAiB,CAAC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,oBAAoB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC/C;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa,SAAS,iBAAiB,CAAC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,eAAe,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC1C;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,oBAAoB,SAAS,iBAAiB,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,sBAAsB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACjD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,uBAAuB,SAAS,iBAAiB,CAAC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,yBAAyB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACpD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,yBAAyB,SAAS,iBAAiB,CAAC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,2BAA2B,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACtD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gCAAgC,SAAS,iBAAiB,CAAC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,kCAAkC,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC7D;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,0BAA0B,SAAS,iBAAiB,CAAC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,4BAA4B,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACvD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gCAAgC,SAAS,iBAAiB,CAAC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,kCAAkC,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC7D;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8BAA8B,SAAS,iBAAiB,CAAC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,gCAAgC,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC3D;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mBAAmB,SAAS,iBAAiB,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,qBAAqB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAChD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,cAAc,SAAS,iBAAiB,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,gBAAgB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC3C;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mBAAmB,SAAS,iBAAiB,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,qBAAqB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAChD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2BAA2B,SAAS,iBAAiB,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,6BAA6B,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACxD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,oBAAoB,SAAS,iBAAiB,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,sBAAsB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACjD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iBAAiB,SAAS,iBAAiB,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,mBAAmB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC9C;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,+BAA+B,SAAS,iBAAiB,CAAC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,iCAAiC,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC5D;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,wBAAwB,SAAS,iBAAiB,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,0BAA0B,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACrD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kBAAkB,SAAS,iBAAiB,CAAC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,oBAAoB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC/C;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,oBAAoB,SAAS,iBAAiB,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,sBAAsB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACjD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,oBAAoB,SAAS,iBAAiB,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,sBAAsB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACjD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,eAAe,SAAS,iBAAiB,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,iBAAiB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC5C;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2BAA2B,SAAS,iBAAiB,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,6BAA6B,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACxD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,uBAAuB,SAAS,iBAAiB,CAAC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,yBAAyB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACpD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mBAAmB,SAAS,iBAAiB,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,qBAAqB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAChD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4BAA4B,SAAS,iBAAiB,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,8BAA8B,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACzD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,wBAAwB,SAAS,iBAAiB,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,0BAA0B,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACrD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mBAAmB,SAAS,iBAAiB,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,qBAAqB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAChD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,0BAA0B,SAAS,iBAAiB,CAAC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,4BAA4B,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACvD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iBAAiB,SAAS,iBAAiB,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,mBAAmB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC9C;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kCAAkC,SAAS,iBAAiB,CAAC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,oCAAoC,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC/D;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB,SAAS,iBAAiB,CAAC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,kBAAkB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAC7C;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mBAAmB,SAAS,iBAAiB,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,qBAAqB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AAChD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,wBAAwB,SAAS,iBAAiB,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,0BAA0B,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACrD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY,SAAS,iBAAiB,CAAC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,cAAc,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACzC;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,uBAAuB,SAAS,iBAAiB,CAAC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,yBAAyB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACpD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,uBAAuB,SAAS,iBAAiB,CAAC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,yBAAyB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACpD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,0BAA0B,SAAS,iBAAiB,CAAC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,4BAA4B,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACvD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,oBAAoB,SAAS,iBAAiB,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,sBAAsB,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE;AACjD;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAqBA;AACY,MAAC,SAAS,GAAG,IAAI,GAAG;;;;"}