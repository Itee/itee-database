import{isNotDefined as e,isNotString as t,isEmptyString as r,isBlankString as s,isArray as n,isString as i,isObject as o,isFunction as a,isDefined as u,isNull as c,isUndefined as l,isNotBoolean as d,isEmptyArray as h,isEmptyObject as p,isNotArray as g,isNotObject as f}from"itee-validators";import{TAbstractObject as _}from"itee-core";import E from"path";import*as m from"buffer";import b from"fs";import{Writable as y}from"stream";var v,x=new Uint8Array(16);function w(){if(!v&&!(v="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return v(x)}var C=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function T(e){return"string"==typeof e&&C.test(e)}for(var R=[],N=0;N<256;++N)R.push((N+256).toString(16).substr(1));function S(e,t,r){var s=(e=e||{}).random||(e.rng||w)();if(s[6]=15&s[6]|64,s[8]=63&s[8]|128,t){r=r||0;for(var n=0;n<16;++n)t[r+n]=s[n];return t}return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=(R[e[t+0]]+R[e[t+1]]+R[e[t+2]]+R[e[t+3]]+"-"+R[e[t+4]]+R[e[t+5]]+"-"+R[e[t+6]]+R[e[t+7]]+"-"+R[e[t+8]]+R[e[t+9]]+"-"+R[e[t+10]]+R[e[t+11]]+R[e[t+12]]+R[e[t+13]]+R[e[t+14]]+R[e[t+15]]).toLowerCase();if(!T(r))throw TypeError("Stringified UUID is invalid");return r}(s)}
/**
 * @module Messages/AbstractError
 * @desc Export the AbstractError abstract class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires {@link https://github.com/uuidjs/uuid uuid}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class P extends Error{constructor(n){super(),this._uuid=S(),this._name=this.constructor.name,this._message=(()=>{const i="Expect a non empty string.";if(e(n))throw new ReferenceError(`The error message cannot be null or undefined. ${i}`);if(t(n))throw new TypeError(`The error message cannot be an instance of ${n.constructor.name}. ${i}`);if(r(n))throw new TypeError(`The error message cannot be an empty string. ${i}`);if(s(n))throw new TypeError(`The error message cannot be a blank string. ${i}`);return n})(),this._stack=this.stack,Object.defineProperty(this,"stack",{get:()=>this._stack,set:()=>{throw new SyntaxError("Try to assign a read only property.")}})}get isAbstractError(){return!0}get uuid(){return this._uuid}set uuid(e){throw new SyntaxError("Try to assign a read only property.")}get name(){return this._name}set name(e){throw new SyntaxError("Try to assign a read only property.")}get message(){return this._message}set message(e){throw new SyntaxError("Try to assign a read only property.")}}
/**
 * @module Messages/HTTP/AbstractHTTPError
 * @desc Export the AbstractHTTPError abstract class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/AbstractError~AbstractError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class A extends P{static get isAbstractHTTPError(){return!0}get statusCode(){if(e(this.constructor.statusCode))throw new ReferenceError(`${this.name} class need to reimplement static statusCode getter.`);return this.constructor.statusCode}set statusCode(e){throw new SyntaxError("Try to assign a read only property.")}}
/**
 * @module Messages/HTTP/UnknownError
 * @desc Export the UnknownError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class D extends A{static get statusCode(){return 520}get isUnknownError(){return!0}}
/**
 * @module Databases/TAbstractResponder
 * @desc Export the TAbstractResponder abstract class.
 * @exports TAbstractResponder
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class k extends _{static _formatErrors(e=[]){const t=n(e)?e:[e];let r=[];for(let e=0,s=t.length;e<s;e++)r.push(k._formatError(t[e]));return r}static _formatError(e){let t;if(e instanceof Error)t=e;else if(i(e))t=new D(e);else if(o(e)){const r=e.name,s=e.message||"Empty message...";t=new D(s),r&&(t.name=r)}else t=new D(e.toString());return t}static returnNotFound(e){if(a(e))return e();e.headersSent||e.status(204).end()}static returnError(e,t){if(a(t))return t(e,null);if(t.headersSent)return;const r=k._formatError(e);t.format({"application/json":()=>{t.status(r.statusCode).json(r)},default:()=>{t.status(406).send("Not Acceptable")}})}static returnData(e,t){if(a(t))return t(null,e);if(t.headersSent)return;const r=n(e)?e:[e];t.format({"application/json":()=>{t.status(200).json(r)},default:()=>{t.status(406).send("Not Acceptable")}})}static returnErrorAndData(e,t,r){if(a(r))return r(e,t);if(r.headersSent)return;const s={errors:k._formatErrors(e),datas:t};r.format({"application/json":()=>{r.status(416).json(s)},default:()=>{r.status(416).send("Range Not Satisfiable")}})}static return(e,t={}){const r=Object.assign({immediate:null,beforeAll:null,beforeReturnErrorAndData:null,afterReturnErrorAndData:null,beforeReturnError:null,afterReturnError:null,beforeReturnData:null,afterReturnData:null,beforeReturnNotFound:null,afterReturnNotFound:null,afterAll:null},t,{returnErrorAndData:k.returnErrorAndData.bind(this),returnError:k.returnError.bind(this),returnData:k.returnData.bind(this),returnNotFound:k.returnNotFound.bind(this)});return r.immediate&&r.immediate(),function(t=null,s=null){const n=u(s),i=u(t);r.beforeAll&&r.beforeAll(),n&&i?(r.beforeReturnErrorAndData&&r.beforeReturnErrorAndData(t,s),r.returnErrorAndData(t,s,e),r.afterReturnErrorAndData&&r.afterReturnErrorAndData(t,s)):n&&!i?(r.beforeReturnData&&r.beforeReturnData(s),r.returnData(s,e),r.afterReturnData&&r.afterReturnData(s)):!n&&i?(r.beforeReturnError&&r.beforeReturnError(t),r.returnError(t,e),r.afterReturnError&&r.afterReturnError(t)):n||i||(r.beforeReturnNotFound&&r.beforeReturnNotFound(),r.returnNotFound(e),r.afterReturnNotFound&&r.afterReturnNotFound()),r.afterAll&&r.afterAll()}}constructor(e={}){super({...e})}}
/**
 * @module Messages/HTTP/ClientErrors/UnprocessableEntityError
 * @desc Export the AbstractHTTPError abstract class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class q extends A{static get statusCode(){return 422}get isUnprocessableEntityError(){return!0}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @class TDatabaseController
 * @classdesc The TDatabaseController is the base class to perform CRUD operations on the database
 */class O extends k{constructor(e){const t={driver:null,useNext:!1,...e};super(t),this.driver=t.driver,this.useNext=t.useNext}get useNext(){return this._useNext}set useNext(e){if(c(e))throw new TypeError("Driver cannot be null ! Expect a database driver.");if(l(e))throw new TypeError("Driver cannot be undefined ! Expect a database driver.");if(d(e))throw new TypeError("Driver cannot be undefined ! Expect a database driver.");this._useNext=e}get driver(){return this._driver}set driver(e){if(c(e))throw new TypeError("Driver cannot be null ! Expect a database driver.");if(l(e))throw new TypeError("Driver cannot be undefined ! Expect a database driver.");this._driver=e}create(t,r,s){const i=t.body;e(i)?O.returnError(new q("Le corps de la requete ne peut pas être null ou indefini."),this.useNext?s:r):n(i)?h(i)?O.returnError(new q("Le tableau d'objet de la requete ne peut pas être vide."),this.useNext?s:r):this._createMany(i,r,s):o(i)?p(i)?O.returnError(new q("L'objet de la requete ne peut pas être vide."),this.useNext?s:r):this._createOne(i,r,s):O.returnError(new q("Le type de donnée de la requete est invalide. Les paramètres valides sont objet ou un tableau d'objet."),this.useNext?s:r)}_createOne(){}_createMany(){}read(e,n,i){const o=e.params.id,a=e.body,c=u(a),l=c?a.ids:null,d=c?a.query:null,_=c?a.projection:null;u(o)?t(o)?O.returnError(new q("L'identifiant devrait être une chaine de caractères."),this.useNext?i:n):r(o)||s(o)?O.returnError(new q("L'identifiant ne peut pas être une chaine de caractères vide."),this.useNext?i:n):this._readOne(o,_,n,i):u(l)?g(l)?O.returnError(new q("Le tableau d'identifiants devrait être un tableau de chaine de caractères."),this.useNext?i:n):h(l)?O.returnError(new q("Le tableau d'identifiants ne peut pas être vide."),this.useNext?i:n):this._readMany(l,_,n,i):u(d)?f(d)?O.returnError(new q("La requete devrait être un objet javascript."),this.useNext?i:n):p(d)?this._readAll(_,n,i):this._readWhere(d,_,n,i):O.returnError(new q("La requete ne peut pas être null."),this.useNext?i:n)}_readOne(){}_readMany(){}_readWhere(){}_readAll(){}update(n,i,o){const a=n.params.id,c=n.body,l=u(c),d=l?c.ids:null,_=l?c.query:null,E=l?c.update:null;e(E)?O.returnError(new q("La mise à jour a appliquer ne peut pas être null ou indefini."),this.useNext?o:i):u(a)?t(a)?O.returnError(new q("L'identifiant devrait être une chaine de caractères."),this.useNext?o:i):r(a)||s(a)?O.returnError(new q("L'identifiant ne peut pas être une chaine de caractères vide."),this.useNext?o:i):this._updateOne(a,E,i,o):u(d)?g(d)?O.returnError(new q("Le tableau d'identifiants devrait être un tableau de chaine de caractères."),this.useNext?o:i):h(d)?O.returnError(new q("Le tableau d'identifiants ne peut pas être vide."),this.useNext?o:i):this._updateMany(d,E,i,o):u(_)?f(_)?O.returnError(new q("La requete devrait être un objet javascript."),this.useNext?o:i):p(_)?this._updateAll(E,i,o):this._updateWhere(_,E,i,o):O.returnError(new q("La requete ne peut pas être vide."),this.useNext?o:i)}_updateOne(){}_updateMany(){}_updateWhere(){}_updateAll(){}delete(e,n,i){const o=e.params.id,a=e.body,c=u(a),l=c?a.ids:null,d=c?a.query:null;u(o)?t(o)?O.returnError(new q("L'identifiant devrait être une chaine de caractères."),this.useNext?i:n):r(o)||s(o)?O.returnError(new q("L'identifiant ne peut pas être une chaine de caractères vide."),this.useNext?i:n):this._deleteOne(o,n,i):u(l)?g(l)?O.returnError(new q("Le tableau d'identifiants devrait être un tableau de chaine de caractères."),this.useNext?i:n):h(l)?O.returnError(new q("Le tableau d'identifiants ne peut pas être vide."),this.useNext?i:n):this._deleteMany(l,n,i):u(d)?f(d)?O.returnError(new q("La requete devrait être un objet javascript."),this.useNext?i:n):p(d)?this._deleteAll(n,i):this._deleteWhere(d,n,i):O.returnError(new q("La requete ne peut pas être vide."),this.useNext?i:n)}_deleteOne(){}_deleteMany(){}_deleteWhere(){}_deleteAll(){}}
/**
 * @author [Ahmed DCHAR]{@link https://github.com/dragoneel}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class L{constructor(){this._isProcessing=!1,this._queue=[]}convert(e,t,r,s,n){this._queue.push({file:e,parameters:t,onSuccess:r,onProgress:s,onError:n}),this._isProcessing||this._processQueue()}_processQueue(){if(0===this._queue.length)return void(this._isProcessing=!1);this._isProcessing=!0;const e=this,t=this._queue.shift(),r=t.file,s=t.parameters,n=t.onSuccess,i=t.onProgress,o=t.onError;e._convert(r,s,(function(t){n(t),e._processQueue()}),(function(e){i(e)}),(function(t){o(t),e._processQueue()}))}_convert(){}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 */class j extends k{static _convertFilesObjectToArray(e){const t=[];for(let r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.push(e[r]);return t}constructor(e={}){const t={driver:null,useNext:!1,converters:new Map,convertersOptions:void 0,rules:{},inserter:{},...e};super(),this._driver=t.driver,this._useNext=t.useNext,this._converters=t.converters,this._convertersOptions=t.convertersOptions,this._rules=t.rules,this._inserter=new t.inserter({driver:this._driver}),this._errors=[],this._processedFiles=[],this._filesToProcess=0}_fileConversionSuccessCallback(e,t,r,s){r?r(s):this._inserter.save(s,this._convertersOptions,this._fileInsertionSuccessCallback.bind(this,e,t),this._fileConversionProgressCallback.bind(this,e),this._fileConversionErrorCallback.bind(this,e,t))}_fileInsertionSuccessCallback(e,t,r){this._filesToProcess--,this._checkEndOfReturns(e,t,r)}_fileConversionProgressCallback(e,t){this.logger.log(t)}_fileConversionErrorCallback(e,t,r){this._errors.push(r),this._filesToProcess--,this._checkEndOfReturns(e,t,null)}_checkEndOfReturns(e,t,r){this._errors.length>0?this._useNext?t(this._errors):(j.return(e)(this._errors),this._errors=[]):this._useNext?t():j.returnData(r,e)}processFiles(e,t,r){const s=j._convertFilesObjectToArray(e.files),n=s.length;if(0===n){if(this._useNext)return void r("Aucun fichier à traiter !");j.returnError("Aucun fichier à traiter !",t)}this._convertersOptions=e.body;const i=[];for(let e=0;e<n;e++){let n=s[e];if(this._processedFiles.includes(n.name)){if(this._useNext)return void r(`Le fichier ${n.name} à déjà été inséré.`);j.returnError(`Le fichier ${n.name} à déjà été inséré.`,t)}this._processedFiles.push(n.name),i.push(n)}const o=i.length;if(0===o){if(this._useNext)return void r(`Impossible d'analyser ${o} fichiers associatifs simultanément !`);j.returnError(`Impossible d'analyser ${o} fichiers associatifs simultanément !`,t)}this._filesToProcess+=o,this._processFiles(i,this._convertersOptions,t,r)}_processFiles(e,t,r,s){const i=e.map((e=>E.extname(e.name))),o=this._rules.filter((e=>{const t=e.on;if(n(t)){for(let e=0;e<t.length;e++)if(!i.includes(t[e]))return!1;return!0}return i.includes(t)}));for(let i=0,a=o.length;i<a;i++){let a=o[i].use;if(n(a)){let n;for(let i=a.length-1;i>=0;i--){const o=a[i];0===i?this._converters[o].convert(e,t,this._fileConversionSuccessCallback.bind(this,r,s,n),this._fileConversionProgressCallback.bind(this,r),this._fileConversionErrorCallback.bind(this,r,s)):n=i===a.length-1?e=>{this._converters[o].convert(e,t,this._fileConversionSuccessCallback.bind(this,r,s,null),this._fileConversionProgressCallback.bind(this,r),this._fileConversionErrorCallback.bind(this,r,s))}:e=>{this._converters[o].convert(e,t,this._fileConversionSuccessCallback.bind(this,r,s,n),this._fileConversionProgressCallback.bind(this,r),this._fileConversionErrorCallback.bind(this,r,s))}}}else this._converters[a].convert(e[0],t,this._fileConversionSuccessCallback.bind(this,r,s,null),this._fileConversionProgressCallback.bind(this,r),this._fileConversionErrorCallback.bind(this,r,s))}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class F{constructor(e={}){const t={driver:null,...e};this._driver=t.driver,this._isProcessing=!1,this._queue=[]}save(e,t,r,s,n){e?t?(this._queue.push({data:e,parameters:t,onSuccess:r,onProgress:s,onError:n}),this._processQueue()):n("Invalid parent id, unable to set children to unknown database node !!!"):n("Data cannot be null or empty, aborting database insert !!!")}_processQueue(){if(0===this._queue.length||this._isProcessing)return;this._isProcessing=!0;const e=this,t=this._queue.shift(),r=t.data,s=t.parameters,n=t.onSuccess,i=t.onProgress,o=t.onError;e._save(r,s,(function(t){n(t),e._isProcessing=!1,e._processQueue()}),(function(e){i(e)}),(function(t){o(t),e._isProcessing=!1,e._processQueue()}))}_save(){}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class B extends y{constructor(e){super(e);const t=e.bufferSize||m.kStringMaxLength;this.memoryBuffer=Buffer.alloc(t),this.offset=0}_final(e){e()}_write(e,t,r){const s=Buffer.isBuffer(e)?e:new Buffer(e,t);for(let e=0,t=s.length;e<t;e++)this.memoryBuffer[this.offset]=s[e],this.offset++;r()}_writev(e,t){for(let t=0,r=e.length;t<r;t++)this.memoryBuffer=Buffer.concat([this.memoryBuffer,e[t]]);t()}_releaseMemory(){this.memoryBuffer=null}toArrayBuffer(){const e=this.memoryBuffer,t=new ArrayBuffer(e.length),r=new Uint8Array(t);for(let t=0;t<e.length;++t)r[t]=e[t];return this._releaseMemory(),t}toJSON(){return JSON.parse(this.toString())}toString(){const e=this.memoryBuffer.toString();return this._releaseMemory(),e}}class M{constructor(e={}){const t={dumpType:M.DumpType.ArrayBuffer,...e};this.dumpType=t.dumpType,this._isProcessing=!1,this._queue=[]}get dumpType(){return this._dumpType}set dumpType(e){if(c(e))throw new TypeError("Dump type cannot be null ! Expect a non empty string.");if(l(e))throw new TypeError("Dump type cannot be undefined ! Expect a non empty string.");this._dumpType=e}setDumpType(e){return this.dumpType=e,this}convert(e,t,r,s,n){e?(this._queue.push({file:e,parameters:t,onSuccess:r,onProgress:s,onError:n}),this._processQueue()):n("File cannot be null or empty, aborting file convertion !!!")}_processQueue(){if(0===this._queue.length||this._isProcessing)return;this._isProcessing=!0;const e=this,t=this._queue.shift(),r=t.file,s=t.parameters,n=t.onSuccess,o=t.onProgress,a=t.onError;if(i(r))e._dumpFileInMemoryAs(e._dumpType,r,s,u,l,d);else{const t=r.data;switch(e._dumpType){case M.DumpType.ArrayBuffer:{const e=t.length,r=new ArrayBuffer(e),s=new Uint8Array(r);for(let r=0;r<e;++r)s[r]=t[r];u(r)}break;case M.DumpType.JSON:u(JSON.parse(t.toString()));break;case M.DumpType.String:u(t.toString());break;default:throw new RangeError(`Invalid switch parameter: ${e._dumpType}`)}}function u(t){e._convert(t,s,c,l,d)}function c(t){n(t),e._isProcessing=!1,e._processQueue()}function l(e){o(e)}function d(t){a(t),e._isProcessing=!1,e._processQueue()}}_dumpFileInMemoryAs(e,t,r,s,n,i){let o=!1;const a=b.createReadStream(t);a.on("error",(e=>{o=!0,i(e)}));const u=parseInt(r.fileSize),c=new B({bufferSize:u});c.on("error",(e=>{o=!0,i(e)})),c.on("finish",(()=>{if(!o){switch(e){case M.DumpType.ArrayBuffer:s(c.toArrayBuffer());break;case M.DumpType.String:s(c.toString());break;case M.DumpType.JSON:s(c.toJSON());break;default:throw new RangeError(`Invalid switch parameter: ${e}`)}a.unpipe(),a.close(),c.end()}})),a.pipe(c)}_convert(){}}M.MAX_FILE_SIZE=67108864,M.DumpType=Object.freeze({ArrayBuffer:0,String:1,JSON:2});
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 */
class $ extends _{static _registerRoutesTo(e,t,r,s,n,i){for(let o=0,a=n.length;o<a;o++){const a=n[o],u=new(s.get(a.controller.name))({driver:e,...a.controller.options}),c=r({mergeParams:!0});i.log(`\tAdd controller for base route: ${a.route}`),t.use(a.route,$._populateRouter(c,u,a.controller.can,i))}}static _populateRouter(e,t,r={},s){for(let n in r){const i=r[n];s.log(`\t\tMap route ${i.over} on (${i.on}) to ${t.constructor.name}.${n} method.`),e[i.on](i.over,t[n].bind(t))}return e}constructor(e={}){const t={controllers:new Map,descriptors:[],...e};super(t),this.controllers=t.controllers,this.descriptors=t.descriptors,this.__dirname=void 0}get controllers(){return this._controllers}set controllers(e){if(c(e))throw new TypeError("Controllers cannot be null ! Expect a map of controller.");if(l(e))throw new TypeError("Controllers cannot be undefined ! Expect a map of controller.");if(!(e instanceof Map))throw new TypeError(`Controllers cannot be an instance of ${e.constructor.name} ! Expect a map of controller.`);this._controllers=e}get descriptors(){return this._descriptors}set descriptors(e){if(c(e))throw new TypeError("Descriptors cannot be null ! Expect an array of POJO.");if(l(e))throw new TypeError("Descriptors cannot be undefined ! Expect an array of POJO.");this._descriptors=e}addController(e){return this._controllers.set(e.name,e),this}addDescriptor(e){return this._descriptors.push(e),this}beforeRegisterRoutes(){}registerTo(e,t,r){this.beforeRegisterRoutes(e),$._registerRoutesTo(e,t,r,this._controllers,this._descriptors,this.logger)}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class I extends _{constructor(e={}){const t={driver:null,application:null,router:null,plugins:[],...e};super(t),this.driver=t.driver,this.application=t.application,this.router=t.router,this.plugins=t.plugins}get plugins(){return this._plugins}set plugins(e){if(c(e))throw new TypeError("Plugins cannot be null ! Expect an array of TDatabasePlugin.");if(l(e))throw new TypeError("Plugins cannot be undefined ! Expect an array of TDatabasePlugin.");this._plugins=e,this._registerPlugins()}get router(){return this._router}set router(e){if(c(e))throw new TypeError("Router cannot be null ! Expect a Express Router.");if(l(e))throw new TypeError("Router cannot be undefined ! Expect a Express Router.");this._router=e}get application(){return this._application}set application(e){if(c(e))throw new TypeError("Application cannot be null ! Expect a Express Application.");if(l(e))throw new TypeError("Application cannot be undefined ! Expect a Express Application.");this._application=e}get driver(){return this._driver}set driver(e){if(c(e))throw new TypeError("Driver cannot be null ! Expect a database driver.");if(l(e))throw new TypeError("Driver cannot be undefined ! Expect a database driver.");this._driver=e}setPlugins(e){return this.plugins=e,this}addPlugin(e){this._plugins.push(e);const[t,r]=Object.entries(e)[0];return this._registerPlugin(t,r),this}setRouter(e){return this.router=e,this}setApplication(e){return this.application=e,this}setDriver(e){return this.driver=e,this}init(){}_registerPlugins(){for(let[e,t]of Object.entries(this._plugins))this._registerPlugin(e,t)}_registerPlugin(e,t){this._registerPackagePlugin(e,t)||this._registerLocalPlugin(e,t)||this.logger.error(`Unable to register the plugin ${e} the package or local folder doesn't seem to exist ! Skip it.`)}_registerPackagePlugin(e,t){let r=!1;try{const s=require(e)(t);s instanceof $?(this.logger.log(`Use ${e} plugin from node_modules`),s.__dirname=E.dirname(require.resolve(e)),s.registerTo(this.driver,this.application,this.router),r=!0):this.logger.error(`The plugin ${e} doesn't seem to be an instance of an extended class from TAbstractDatabasePlugin ! Skip it.`)}catch(e){e.code&&"MODULE_NOT_FOUND"===e.code||this.logger.error(e)}return r}_registerLocalPlugin(e,t){let r=!1;try{const s=E.join(__dirname,"../../../","databases/plugins/",e,`${e}.js`),n=require(s)(t);n instanceof $?(this.logger.log(`Use ${e} plugin from local folder`),n.__dirname=E.dirname(require.resolve(s)),n.registerTo(this.driver,this.application,this.router),r=!0):this.logger.error(`The plugin ${e} doesn't seem to be an instance of an extended class from TAbstractDatabasePlugin ! Skip it.`)}catch(e){this.logger.error(e)}return r}connect(){}close(){}on(){}}
/**
 * @module Messages/HTTP/BadRequestError
 * @desc Export the BadRequestError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class U extends A{static get statusCode(){return 400}get isBadRequestError(){return!0}}
/**
 * @module Messages/HTTP/BadMappingError
 * @desc Export the BadMappingError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class Q extends A{static get statusCode(){return 421}get isBadMappingError(){return!0}}
/**
 * @module Messages/HTTP/BlockedByWindowsParentalControlsError
 * @desc Export the BlockedByWindowsParentalControlsError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class J extends A{static get statusCode(){return 450}get isBlockedByWindowsParentalControlsError(){return!0}}
/**
 * @module Messages/HTTP/ClientClosedRequestError
 * @desc Export the ClientClosedRequestError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class W extends A{static get statusCode(){return 499}get isClientClosedRequestError(){return!0}}
/**
 * @module Messages/HTTP/ConflictError
 * @desc Export the ConflictError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class V extends A{static get statusCode(){return 409}get isConflictError(){return!0}}
/**
 * @module Messages/HTTP/ExpectationFailedError
 * @desc Export the ExpectationFailedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class H extends A{static get statusCode(){return 417}get isExpectationFailedError(){return!0}}
/**
 * @module Messages/HTTP/ForbiddenError
 * @desc Export the ForbiddenError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class z extends A{static get statusCode(){return 403}get isForbiddenError(){return!0}}
/**
 * @module Messages/HTTP/GoneError
 * @desc Export the GoneError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class G extends A{static get statusCode(){return 410}get isGoneError(){return!0}}
/**
 * @module Messages/HTTP/HTTPRequestSentToHTTPSPortError
 * @desc Export the HTTPRequestSentToHTTPSPortError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class X extends A{static get statusCode(){return 497}get isHTTPRequestSentToHTTPSPortError(){return!0}}
/**
 * @module Messages/HTTP/ImATeapotError
 * @desc Export the ImATeapotError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class Z extends A{static get statusCode(){return 418}get isImATeapotError(){return!0}}
/**
 * @module Messages/HTTP/LengthRequiredError
 * @desc Export the LengthRequiredError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class K extends A{static get statusCode(){return 411}get isLengthRequiredError(){return!0}}
/**
 * @module Messages/HTTP/LockedError
 * @desc Export the LockedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class Y extends A{static get statusCode(){return 423}get isLockedError(){return!0}}
/**
 * @module Messages/HTTP/MethodFailureError
 * @desc Export the MethodFailureError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class ee extends A{static get statusCode(){return 424}get isMethodFailureError(){return!0}}
/**
 * @module Messages/HTTP/MethodNotAllowedError
 * @desc Export the MethodNotAllowedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class te extends A{static get statusCode(){return 405}get isMethodNotAllowedError(){return!0}}
/**
 * @module Messages/HTTP/NoResponseError
 * @desc Export the NoResponseError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class re extends A{static get statusCode(){return 444}get isNoResponseError(){return!0}}
/**
 * @module Messages/HTTP/NotAcceptableError
 * @desc Export the NotAcceptableError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class se extends A{static get statusCode(){return 406}get isNotAcceptableError(){return!0}}
/**
 * @module Messages/HTTP/NotFoundError
 * @desc Export the NotFoundError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class ne extends A{static get statusCode(){return 404}get isNotFoundError(){return!0}}
/**
 * @module Messages/HTTP/PaymentRequiredError
 * @desc Export the PaymentRequiredError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class ie extends A{static get statusCode(){return 402}get isPaymentRequiredError(){return!0}}
/**
 * @module Messages/HTTP/PreconditionFailedError
 * @desc Export the PreconditionFailedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class oe extends A{static get statusCode(){return 412}get isPreconditionFailedError(){return!0}}
/**
 * @module Messages/HTTP/PreconditionRequiredError
 * @desc Export the PreconditionRequiredError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class ae extends A{static get statusCode(){return 428}get isPreconditionRequiredError(){return!0}}
/**
 * @module Messages/HTTP/ProxyAuthenticationRequiredError
 * @desc Export the ProxyAuthenticationRequiredError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class ue extends A{static get statusCode(){return 407}get isProxyAuthenticationRequiredError(){return!0}}
/**
 * @module Messages/HTTP/RequestEntityTooLargeError
 * @desc Export the RequestEntityTooLargeError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class ce extends A{static get statusCode(){return 413}get isRequestEntityTooLargeError(){return!0}}
/**
 * @module Messages/HTTP/RequestHeaderFieldsTooLargeError
 * @desc Export the RequestHeaderFieldsTooLargeError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class le extends A{static get statusCode(){return 431}get isRequestHeaderFieldsTooLargeError(){return!0}}
/**
 * @module Messages/HTTP/RequestRangeUnsatisfiableError
 * @desc Export the RequestRangeUnsatisfiableError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class de extends A{static get statusCode(){return 416}get isRequestRangeUnsatisfiableError(){return!0}}
/**
 * @module Messages/HTTP/RequestTimeOutError
 * @desc Export the RequestTimeOutError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class he extends A{static get statusCode(){return 408}get isRequestTimeOutError(){return!0}}
/**
 * @module Messages/HTTP/RetryWithError
 * @desc Export the RetryWithError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class pe extends A{static get statusCode(){return 449}get isRetryWithError(){return!0}}
/**
 * @module Messages/HTTP/SSLCertificateError
 * @desc Export the SSLCertificateError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class ge extends A{static get statusCode(){return 495}get isSSLCertificateError(){return!0}}
/**
 * @module Messages/HTTP/SSLCertificateRequiredError
 * @desc Export the SSLCertificateRequiredError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class fe extends A{static get statusCode(){return 496}get isSSLCertificateRequiredError(){return!0}}
/**
 * @module Messages/HTTP/TooManyRequestsError
 * @desc Export the TooManyRequestsError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class _e extends A{static get statusCode(){return 429}get isTooManyRequestsError(){return!0}}
/**
 * @module Messages/HTTP/UnauthorizedError
 * @desc Export the UnauthorizedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class Ee extends A{static get statusCode(){return 401}get isUnauthorizedError(){return!0}}
/**
 * @module Messages/HTTP/UnavailableForLegalReasonsError
 * @desc Export the UnavailableForLegalReasonsError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class me extends A{static get statusCode(){return 451}get isUnavailableForLegalReasonsError(){return!0}}
/**
 * @module Messages/HTTP/UnorderedCollectionError
 * @desc Export the UnorderedCollectionError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class be extends A{static get statusCode(){return 425}get isUnorderedCollectionError(){return!0}}
/**
 * @module Messages/HTTP/UnrecoverableError
 * @desc Export the UnrecoverableError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class ye extends A{static get statusCode(){return 456}get isUnrecoverableError(){return!0}}
/**
 * @module Messages/HTTP/UpgradeRequiredError
 * @desc Export the UpgradeRequiredError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class ve extends A{static get statusCode(){return 426}get isUpgradeRequiredError(){return!0}}
/**
 * @module Messages/HTTP/ATimeoutOccuredError
 * @desc Export the ATimeoutOccuredError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class xe extends A{static get statusCode(){return 524}get isATimeoutOccuredError(){return!0}}
/**
 * @module Messages/HTTP/BadGatewayError
 * @desc Export the BadGatewayError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class we extends A{static get statusCode(){return 502}get isBadGatewayError(){return!0}}
/**
 * @module Messages/HTTP/BandwidthLimitExceededError
 * @desc Export the BandwidthLimitExceededError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class Ce extends A{static get statusCode(){return 509}get isBandwidthLimitExceededError(){return!0}}
/**
 * @module Messages/HTTP/ConnectionTimedOutError
 * @desc Export the ConnectionTimedOutError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class Te extends A{static get statusCode(){return 522}get isConnectionTimedOutError(){return!0}}
/**
 * @module Messages/HTTP/GatewayTimeOutError
 * @desc Export the GatewayTimeOutError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class Re extends A{static get statusCode(){return 504}get isGatewayTimeOutError(){return!0}}
/**
 * @module Messages/HTTP/HTTPVersionNotSupportedError
 * @desc Export the HTTPVersionNotSupportedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class Ne extends A{static get statusCode(){return 505}get isHTTPVersionNotSupportedError(){return!0}}
/**
 * @module Messages/HTTP/InsufficientStorageError
 * @desc Export the InsufficientStorageError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class Se extends A{static get statusCode(){return 507}get isInsufficientStorageError(){return!0}}
/**
 * @module Messages/HTTP/InternalServerError
 * @desc Export the InternalServerError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class Pe extends A{static get statusCode(){return 500}get isInternalServerError(){return!0}}
/**
 * @module Messages/HTTP/InvalidSSLCertificateError
 * @desc Export the InvalidSSLCertificateError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class Ae extends A{static get statusCode(){return 526}get isInvalidSSLCertificateError(){return!0}}
/**
 * @module Messages/HTTP/LoopDetectedError
 * @desc Export the LoopDetectedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class De extends A{static get statusCode(){return 508}get isLoopDetectedError(){return!0}}
/**
 * @module Messages/HTTP/NetworkAuthenticationRequiredError
 * @desc Export the NetworkAuthenticationRequiredError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class ke extends A{static get statusCode(){return 511}get isNetworkAuthenticationRequiredError(){return!0}}
/**
 * @module Messages/HTTP/NotExtendedError
 * @desc Export the NotExtendedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class qe extends A{static get statusCode(){return 510}get isNotExtendedError(){return!0}}
/**
 * @module Messages/HTTP/NotImplementedError
 * @desc Export the NotImplementedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class Oe extends A{static get statusCode(){return 501}get isNotImplementedError(){return!0}}
/**
 * @module Messages/HTTP/OriginIsUnreachableError
 * @desc Export the OriginIsUnreachableError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class Le extends A{static get statusCode(){return 523}get isOriginIsUnreachableError(){return!0}}
/**
 * @module Messages/HTTP/RailgunError
 * @desc Export the RailgunError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class je extends A{static get statusCode(){return 527}get isRailgunError(){return!0}}
/**
 * @module Messages/HTTP/ServiceUnavailableError
 * @desc Export the ServiceUnavailableError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class Fe extends A{static get statusCode(){return 503}get isServiceUnavailableError(){return!0}}
/**
 * @module Messages/HTTP/SSLHandshakeFailedError
 * @desc Export the SSLHandshakeFailedError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class Be extends A{static get statusCode(){return 525}get isSSLHandshakeFailedError(){return!0}}
/**
 * @module Messages/HTTP/VariantAlsoNegotiatesError
 * @desc Export the VariantAlsoNegotiatesError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class Me extends A{static get statusCode(){return 506}get isVariantAlsoNegotiatesError(){return!0}}
/**
 * @module Messages/HTTP/WebServerIsDownError
 * @desc Export the WebServerIsDownError http message class.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 * @requires module:Messages/HTTP/AbstractHTTPError~AbstractHTTPError
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class $e extends A{static get statusCode(){return 521}get isWebServerIsDownError(){return!0}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const Ie=new Map;export{xe as ATimeoutOccuredError,P as AbstractError,A as AbstractHTTPError,we as BadGatewayError,Q as BadMappingError,U as BadRequestError,Ce as BandwidthLimitExceededError,J as BlockedByWindowsParentalControlsError,W as ClientClosedRequestError,V as ConflictError,Te as ConnectionTimedOutError,Ie as Databases,H as ExpectationFailedError,z as ForbiddenError,Re as GatewayTimeOutError,G as GoneError,X as HTTPRequestSentToHTTPSPortError,Ne as HTTPVersionNotSupportedError,Z as ImATeapotError,Se as InsufficientStorageError,Pe as InternalServerError,Ae as InvalidSSLCertificateError,K as LengthRequiredError,Y as LockedError,De as LoopDetectedError,B as MemoryWriteStream,ee as MethodFailureError,te as MethodNotAllowedError,ke as NetworkAuthenticationRequiredError,re as NoResponseError,se as NotAcceptableError,qe as NotExtendedError,ne as NotFoundError,Oe as NotImplementedError,Le as OriginIsUnreachableError,ie as PaymentRequiredError,oe as PreconditionFailedError,ae as PreconditionRequiredError,ue as ProxyAuthenticationRequiredError,je as RailgunError,ce as RequestEntityTooLargeError,le as RequestHeaderFieldsTooLargeError,de as RequestRangeUnsatisfiableError,he as RequestTimeOutError,pe as RetryWithError,ge as SSLCertificateError,fe as SSLCertificateRequiredError,Be as SSLHandshakeFailedError,Fe as ServiceUnavailableError,j as TAbstractConverterManager,O as TAbstractDataController,L as TAbstractDataConverter,F as TAbstractDataInserter,I as TAbstractDatabase,$ as TAbstractDatabasePlugin,M as TAbstractFileConverter,k as TAbstractResponder,_e as TooManyRequestsError,Ee as UnauthorizedError,me as UnavailableForLegalReasonsError,D as UnknownError,be as UnorderedCollectionError,q as UnprocessableEntityError,ye as UnrecoverableError,ve as UpgradeRequiredError,Me as VariantAlsoNegotiatesError,$e as WebServerIsDownError};
