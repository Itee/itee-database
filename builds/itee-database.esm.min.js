import{isDefined as e,isArray as r,isObject as t,isString as s,isFunction as n,isNotDefined as o,isEmptyArray as a,isEmptyObject as i,isNotString as l,isEmptyString as u,isBlankString as c,isNotArray as d,isNotObject as h,isNull as p,isUndefined as _,isInvalidDirectoryPath as m,isEmptyFile as f,isNotArrayOfString as b}from"itee-validators";import E from"path";import{kStringMaxLength as g}from"buffer";import v from"fs";import{Writable as y}from"stream";import*as N from"cassandra-driver";import*as $ from"couchbase";import*as T from"nano";import*as R from"elasticsearch";import*as S from"levelup";import{getFilesPathsUnder as A}from"itee-utils";import*as D from"mongoose";import*as w from"mysql";import*as x from"apoc";import*as O from"oracledb";import C from"pg-promise";import*as q from"redis";import*as F from"sqlite3";import*as M from"tedious";import{Connection as k,Request as P}from"tedious";class L{static __checkData(r,t,s){const n=t.body,o=t.params,a=t.query;return e(n)&&n[r]?n[r]:e(o)&&o[r]?o[r]:e(a)&&a[r]?a[r]:void L.returnError({title:"Erreur de paramètre",message:`${r} n'existe pas dans les paramètres !`},s)}static _formatError(e){let n=[];if(r(e))for(let r=0,t=e.length;r<t;++r)n=n.concat(L._formatError(e[r]));else if(t(e))if("ValidationError"===e.name){let r="",t=e.errors;for(let e in t)Object.prototype.hasOwnProperty.call(t,e)&&(r+=t[e].message+"<br>");n.push({title:"Erreur de validation",message:r||"Aucun message d'erreur... Gloups !"})}else"VersionError"===e.name?n.push({title:"Erreur de base de donnée",message:"Aucun document correspondant n'as put être trouvé pour la requete !"}):n.push({title:e.title||"Erreur",message:e.message||"Aucun message d'erreur... Gloups !"});else{if(!s(e))throw new Error(`Unknown error type: ${e} !`);n.push({title:"Erreur",message:e})}return n}static returnNotFound(e){if(n(e))return e();e.headersSent||e.status(204).end()}static returnError(e,r){if(n(r))return r(e,null);if(r.headersSent)return;const t=L._formatError(e);r.format({"application/json":()=>{r.status(500).json(t)},default:()=>{r.status(406).send("Not Acceptable")}})}static returnData(e,t){if(n(t))return t(null,e);if(t.headersSent)return;const s=r(e)?e:[e];t.format({"application/json":()=>{t.status(200).json(s)},default:()=>{t.status(406).send("Not Acceptable")}})}static returnErrorAndData(e,r,t){if(n(t))return t(e,r);if(t.headersSent)return;const s={errors:e,datas:r};t.format({"application/json":()=>{t.status(416).json(s)},default:()=>{t.status(416).send("Range Not Satisfiable")}})}constructor(e={}){const r={driver:null,useNext:!1,...e};this._driver=r.driver,this._useNext=r.useNext}return(r,t={}){const s=Object.assign({immediate:null,beforeAll:null,beforeReturnErrorAndData:null,afterReturnErrorAndData:null,beforeReturnError:null,afterReturnError:null,beforeReturnData:null,afterReturnData:null,beforeReturnNotFound:null,afterReturnNotFound:null,afterAll:null},t,{returnErrorAndData:L.returnErrorAndData.bind(this),returnError:L.returnError.bind(this),returnData:L.returnData.bind(this),returnNotFound:L.returnNotFound.bind(this)});return s.immediate&&s.immediate(),function(t=null,n=null){const o=e(n),a=e(t);s.beforeAll&&s.beforeAll(),o&&a?(s.beforeReturnErrorAndData&&s.beforeReturnErrorAndData(t,n),s.returnErrorAndData(t,n,r),s.afterReturnErrorAndData&&s.afterReturnErrorAndData(t,n)):o&&!a?(s.beforeReturnData&&s.beforeReturnData(n),s.returnData(n,r),s.afterReturnData&&s.afterReturnData(n)):!o&&a?(s.beforeReturnError&&s.beforeReturnError(t),s.returnError(t,r),s.afterReturnError&&s.afterReturnError(t)):o||a||(s.beforeReturnNotFound&&s.beforeReturnNotFound(),s.returnNotFound(r),s.afterReturnNotFound&&s.afterReturnNotFound()),s.afterAll&&s.afterAll()}}create(e,s,n){const l=e.body;o(l)?L.returnError({title:"Erreur de paramètre",message:"Le corps de la requete ne peut pas être null ou indefini."},this._useNext?n:s):r(l)?a(l)?L.returnError({title:"Erreur de paramètre",message:"Le tableau d'objet de la requete ne peut pas être vide."},this._useNext?n:s):this._createMany(l,s,n):t(l)?i(l)?L.returnError({title:"Erreur de paramètre",message:"L'objet de la requete ne peut pas être vide."},this._useNext?n:s):this._createOne(l,s,n):L.returnError({title:"Erreur de paramètre",message:"Le type de donnée de la requete est invalide. Les paramètres valides sont objet ou un tableau d'objet."},this._useNext?n:s)}_createOne(){}_createMany(){}read(r,t,s){const n=r.params.id,o=r.body,p=e(o),_=p?o.ids:null,m=p?o.query:null,f=p?o.projection:null;e(n)?l(n)?L.returnError({title:"Erreur de paramètre",message:"L'identifiant devrait être une chaine de caractères."},this._useNext?s:t):u(n)||c(n)?L.returnError({title:"Erreur de paramètre",message:"L'identifiant ne peut pas être une chaine de caractères vide."},this._useNext?s:t):this._readOne(n,f,t,s):e(_)?d(_)?L.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants devrait être un tableau de chaine de caractères."},this._useNext?s:t):a(_)?L.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants ne peut pas être vide."},this._useNext?s:t):this._readMany(_,f,t,s):e(m)?h(m)?L.returnError({title:"Erreur de paramètre",message:"La requete devrait être un objet javascript."},this._useNext?s:t):i(m)?this._readAll(f,t,s):this._readWhere(m,f,t,s):L.returnError({title:"Erreur de paramètre",message:"La requete ne peut pas être null."},this._useNext?s:t)}_readOne(){}_readMany(){}_readWhere(){}_readAll(){}update(r,t,s){const n=r.params.id,p=r.body,_=e(p),m=_?p.ids:null,f=_?p.query:null,b=_?p.update:null;o(b)?L.returnError({title:"Erreur de paramètre",message:"La mise à jour a appliquer ne peut pas être null ou indefini."},this._useNext?s:t):e(n)?l(n)?L.returnError({title:"Erreur de paramètre",message:"L'identifiant devrait être une chaine de caractères."},this._useNext?s:t):u(n)||c(n)?L.returnError({title:"Erreur de paramètre",message:"L'identifiant ne peut pas être une chaine de caractères vide."},this._useNext?s:t):this._updateOne(n,b,t,s):e(m)?d(m)?L.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants devrait être un tableau de chaine de caractères."},this._useNext?s:t):a(m)?L.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants ne peut pas être vide."},this._useNext?s:t):this._updateMany(m,b,t,s):e(f)?h(f)?L.returnError({title:"Erreur de paramètre",message:"La requete devrait être un objet javascript."},this._useNext?s:t):i(f)?this._updateAll(b,t,s):this._updateWhere(f,b,t,s):L.returnError({title:"Erreur de paramètre",message:"La requete ne peut pas être vide."},this._useNext?s:t)}_updateOne(){}_updateMany(){}_updateWhere(){}_updateAll(){}delete(r,t,s){const n=r.params.id,o=r.body,p=e(o),_=p?o.ids:null,m=p?o.query:null;e(n)?l(n)?L.returnError({title:"Erreur de paramètre",message:"L'identifiant devrait être une chaine de caractères."},this._useNext?s:t):u(n)||c(n)?L.returnError({title:"Erreur de paramètre",message:"L'identifiant ne peut pas être une chaine de caractères vide."},this._useNext?s:t):this._deleteOne(n,t,s):e(_)?d(_)?L.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants devrait être un tableau de chaine de caractères."},this._useNext?s:t):a(_)?L.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants ne peut pas être vide."},this._useNext?s:t):this._deleteMany(_,t,s):e(m)?h(m)?L.returnError({title:"Erreur de paramètre",message:"La requete devrait être un objet javascript."},this._useNext?s:t):i(m)?this._deleteAll(t,s):this._deleteWhere(m,t,s):L.returnError({title:"Erreur de paramètre",message:"La requete ne peut pas être vide."},this._useNext?s:t)}_deleteOne(){}_deleteMany(){}_deleteWhere(){}_deleteAll(){}}class j{constructor(){this._isProcessing=!1,this._queue=[]}convert(e,r,t,s,n){this._queue.push({file:e,parameters:r,onSuccess:t,onProgress:s,onError:n}),this._isProcessing||this._processQueue()}_processQueue(){if(0===this._queue.length)return void(this._isProcessing=!1);this._isProcessing=!0;const e=this,r=this._queue.shift(),t=r.file,s=r.parameters,n=r.onSuccess,o=r.onProgress,a=r.onError;e._convert(t,s,function(r){n(r),e._processQueue()},function(e){o(e)},function(r){a(r),e._processQueue()})}_convert(){}}class W{static _formatError(e){let n=[];if(r(e))for(let r=0,t=e.length;r<t;++r)n=n.concat(W._formatError(e[r]));else if(t(e))if("ValidationError"===e.name){let r="",t=e.errors;for(let e in t)Object.prototype.hasOwnProperty.call(t,e)&&(r+=t[e].message+"<br>");n.push({title:"Erreur de validation",message:r||"Aucun message d'erreur... Gloups !"})}else"VersionError"===e.name?n.push({title:"Erreur de base de donnée",message:"Aucun document correspondant n'as put être trouvé pour la requete !"}):n.push({title:e.title||"Erreur",message:e.message||"Aucun message d'erreur... Gloups !"});else{if(!s(e))throw new Error(`Unknown error type: ${e} !`);n.push({title:"Erreur",message:e})}return n}static _convertFilesObjectToArray(e){const r=[];for(let t in e)Object.prototype.hasOwnProperty.call(e,t)&&r.push(e[t]);return r}static returnNotFound(e){if(n(e))return e();e.headersSent||e.status(204).end()}static returnError(e,r){if(n(r))return r(e,null);if(r.headersSent)return;const t=W._formatError(e);r.format({"application/json":()=>{r.status(500).json(t)},default:()=>{r.status(406).send("Not Acceptable")}})}static returnData(e,t){if(n(t))return t(null,e);if(t.headersSent)return;const s=r(e)?e:[e];t.format({"application/json":()=>{t.status(200).json(s)},default:()=>{t.status(406).send("Not Acceptable")}})}static returnErrorAndData(e,r,t){if(n(t))return t(e,r);if(t.headersSent)return;const s={errors:e,datas:r};t.format({"application/json":()=>{t.status(416).json(s)},default:()=>{t.status(416).send("Range Not Satisfiable")}})}static return(r,t={}){const s=Object.assign({immediate:null,beforeAll:null,beforeReturnErrorAndData:null,afterReturnErrorAndData:null,beforeReturnError:null,afterReturnError:null,beforeReturnData:null,afterReturnData:null,beforeReturnNotFound:null,afterReturnNotFound:null,afterAll:null},t,{returnErrorAndData:W.returnErrorAndData.bind(this),returnError:W.returnError.bind(this),returnData:W.returnData.bind(this),returnNotFound:W.returnNotFound.bind(this)});return s.immediate&&s.immediate(),function(t=null,n=null){const o=e(n),a=e(t);s.beforeAll&&s.beforeAll(),o&&a?(s.beforeReturnErrorAndData&&s.beforeReturnErrorAndData(t,n),s.returnErrorAndData(t,n,r),s.afterReturnErrorAndData&&s.afterReturnErrorAndData(t,n)):o&&!a?(s.beforeReturnData&&s.beforeReturnData(n),s.returnData(n,r),s.afterReturnData&&s.afterReturnData(n)):!o&&a?(s.beforeReturnError&&s.beforeReturnError(t),s.returnError(t,r),s.afterReturnError&&s.afterReturnError(t)):o||a||(s.beforeReturnNotFound&&s.beforeReturnNotFound(),s.returnNotFound(r),s.afterReturnNotFound&&s.afterReturnNotFound()),s.afterAll&&s.afterAll()}}constructor(e={}){const r={driver:null,useNext:!1,converters:new Map,convertersOptions:void 0,rules:{},inserter:{},...e};this._driver=r.driver,this._useNext=r.useNext,this._converters=r.converters,this._convertersOptions=r.convertersOptions,this._rules=r.rules,this._inserter=new r.inserter(this._driver),this._errors=[],this._processedFiles=[]}_fileConversionSuccessCallback(e,r,t,s){t?t(s):this._inserter.save(s,this._convertersOptions,this._fileInsertionSuccessCallback.bind(this,e,r),this._fileConversionProgressCallback.bind(this,e),this._fileConversionErrorCallback.bind(this,e,r))}_fileInsertionSuccessCallback(e,r,t){this._checkEndOfReturns(e,r,t)}_fileConversionProgressCallback(e,r){console.log(r)}_fileConversionErrorCallback(e,r,t){this._errors.push(t),this._checkEndOfReturns(e,r,null)}_checkEndOfReturns(e,r,t){this._errors.length>0?this._useNext?r(this._errors):(W.return(e)(this._errors),this._errors=[]):this._useNext?r():W.returnData(t,e)}processFiles(e,r,t){const s=W._convertFilesObjectToArray(e.files),n=s.length;this._convertersOptions=e.body;for(let e=0;e<n;e++){let r=s[e];if(this._processedFiles.includes(r.filename))return;this._processedFiles.push(r.filename)}0===n&&(this._useNext?t(`Impossible d'analyser ${n} fichiers associatifs simultanément !`):W.returnError(`Impossible d'analyser ${n} fichiers associatifs simultanément !`,r)),this._processFiles(s,this._convertersOptions,r,t)}_processFiles(e,r,t,s){const n=e.map(e=>E.extname(e.filename)),o=this._rules.filter(e=>{const r=e.on;if(Array.isArray(r)){for(var t=0;t<r.length;t++)if(!n.includes(r[t]))return!1;return!0}return n.includes(r)});for(let n=0,a=o.length;n<a;n++){let a=o[n].use;if(Array.isArray(a)){let n=void 0;for(let o=a.length-1;o>=0;o--){const i=a[o];0===o?this._converters[i].convert(e,r,this._fileConversionSuccessCallback.bind(this,t,s,n),this._fileConversionProgressCallback.bind(this,t),this._fileConversionErrorCallback.bind(this,t,s)):n=o===a.length-1?e=>{this._converters[i].convert(e,r,this._fileConversionSuccessCallback.bind(this,t,s,null),this._fileConversionProgressCallback.bind(this,t),this._fileConversionErrorCallback.bind(this,t,s))}:e=>{this._converters[i].convert(e,r,this._fileConversionSuccessCallback.bind(this,t,s,n),this._fileConversionProgressCallback.bind(this,t),this._fileConversionErrorCallback.bind(this,t,s))}}}else this._converters[a].convert(e[0].file,r,this._fileConversionSuccessCallback.bind(this,t,s,null),this._fileConversionProgressCallback.bind(this,t),this._fileConversionErrorCallback.bind(this,t,s))}}}class U{constructor(e={}){const r={driver:null,...e};this._driver=r.driver,this._isProcessing=!1,this._queue=[]}save(e,r,t,s,n){e?r?(this._queue.push({data:e,parameters:r,onSuccess:t,onProgress:s,onError:n}),this._processQueue()):n("Invalid parent id, unable to set children to unknown database node !!!"):n("Data cannot be null or empty, aborting database insert !!!")}_processQueue(){if(0===this._queue.length||this._isProcessing)return;this._isProcessing=!0;const e=this,r=this._queue.shift(),t=r.data,s=r.parameters,n=r.onSuccess,o=r.onProgress,a=r.onError;e._save(t,s,function(r){n(r),e._isProcessing=!1,e._processQueue()},function(e){o(e)},function(r){a(r),e._isProcessing=!1,e._processQueue()})}_save(){}}class I extends y{constructor(e){super(e);const r=e.bufferSize||g;this.memoryBuffer=Buffer.alloc(r),this.offset=0}toString(){const e=this.memoryBuffer.toString();return this._releaseMemory(),e}_final(e){e()}_write(e,r,t){const s=Buffer.isBuffer(e)?e:new Buffer(e,r);for(let e=0,r=s.length;e<r;e++)this.memoryBuffer[this.offset]=s[e],this.offset++;t()}_writev(e,r){for(let r=0,t=e.length;r<t;r++)this.memoryBuffer=Buffer.concat([this.memoryBuffer,e[r]]);r()}_releaseMemory(){this.memoryBuffer=null}toArrayBuffer(){const e=this.memoryBuffer,r=new ArrayBuffer(e.length),t=new Uint8Array(r);for(let r=0;r<e.length;++r)t[r]=e[r];return this._releaseMemory(),r}toJSON(){return JSON.parse(this.toString())}}class B{constructor(e={}){const r={dumpType:B.DumpType.ArrayBuffer,...e};this.dumpType=r.dumpType,this._isProcessing=!1,this._queue=[]}get dumpType(){return this._dumpType}set dumpType(e){if(p(e))throw new TypeError("Dump type cannot be null ! Expect a non empty string.");if(_(e))throw new TypeError("Dump type cannot be undefined ! Expect a non empty string.");this._dumpType=e}setDumpType(e){return this.dumpType=e,this}convert(e,r,t,s,n){e?(this._queue.push({file:e,parameters:r,onSuccess:t,onProgress:s,onError:n}),this._processQueue()):n("File cannot be null or empty, aborting file convertion !!!")}_processQueue(){if(0===this._queue.length||this._isProcessing)return;this._isProcessing=!0;const e=this,r=this._queue.shift(),t=r.file,s=r.parameters,n=r.onSuccess,o=r.onProgress,a=r.onError;function i(r){n(r),e._isProcessing=!1,e._processQueue()}function l(e){o(e)}function u(r){a(r),e._isProcessing=!1,e._processQueue()}e._dumpFileInMemoryAs(e._dumpType,t,s,function(r){e._convert(r,s,i,l,u)},l,u)}_dumpFileInMemoryAs(e,r,t,s,n,o){let a=!1;const i=v.createReadStream(r);i.on("error",e=>{console.error(`Read stream on error: ${e}`),a=!0,o(e)});const l=parseInt(t.fileSize),u=new I({bufferSize:l});u.on("error",e=>{a=!0,o(e)}),u.on("finish",()=>{if(!a){switch(e){case B.DumpType.ArrayBuffer:s(u.toArrayBuffer());break;case B.DumpType.String:s(u.toString());break;case B.DumpType.JSON:s(u.toJSON());break;default:throw new RangeError(`Invalid switch parameter: ${e}`)}i.unpipe(),i.close(),u.end()}}),i.pipe(u)}_convert(){}}B.MAX_FILE_SIZE=67108864,B.DumpType=Object.freeze({ArrayBuffer:0,String:1,JSON:2});class H{static _registerRoutesTo(e,r,t,s,n){for(let o=0,a=n.length;o<a;o++){const a=n[o],i=new(s.get(a.controller.name))({driver:e,...a.controller.options}),l=t({mergeParams:!0});console.log(`\tAdd controller for base route: ${a.route}`),r.use(a.route,H._populateRouter(l,i,a.controller.can))}}static _populateRouter(e,r,t={}){for(let s in t){const n=t[s];console.log(`\t\tMap route ${n.over} on (${n.on}) to ${r.constructor.name}.${s} method.`),e[n.on](n.over,r[s].bind(r))}return e}constructor(e={}){const r={controllers:new Map,descriptors:[],...e};this.controllers=r.controllers,this.descriptors=r.descriptors,this.__dirname=void 0}get controllers(){return this._controllers}set controllers(e){if(p(e))throw new TypeError("Controllers cannot be null ! Expect a map of controller.");if(_(e))throw new TypeError("Controllers cannot be undefined ! Expect a map of controller.");if(!(e instanceof Map))throw new TypeError(`Controllers cannot be an instance of ${e.constructor.name} ! Expect a map of controller.`);this._controllers=e}get descriptors(){return this._descriptors}set descriptors(e){if(p(e))throw new TypeError("Descriptors cannot be null ! Expect an array of POJO.");if(_(e))throw new TypeError("Descriptors cannot be undefined ! Expect an array of POJO.");this._descriptors=e}addController(e){return this._controllers.set(e.name,e),this}addDescriptor(e){return this._descriptors.push(e),this}beforeRegisterRoutes(){}registerTo(e,r,t){this.beforeRegisterRoutes(e),H._registerRoutesTo(e,r,t,this._controllers,this._descriptors)}}class Q{constructor(e={}){const r={driver:null,application:null,router:null,plugins:[],...e};this.driver=r.driver,this.application=r.application,this.router=r.router,this.plugins=r.plugins,this.init(),this._registerPlugins()}get plugins(){return this._plugins}set plugins(e){if(p(e))throw new TypeError("Plugins cannot be null ! Expect an array of TDatabasePlugin.");if(_(e))throw new TypeError("Plugins cannot be undefined ! Expect an array of TDatabasePlugin.");this._plugins=e}get router(){return this._router}set router(e){if(p(e))throw new TypeError("Router cannot be null ! Expect a Express Router.");if(_(e))throw new TypeError("Router cannot be undefined ! Expect a Express Router.");this._router=e}get application(){return this._application}set application(e){if(p(e))throw new TypeError("Application cannot be null ! Expect a Express Application.");if(_(e))throw new TypeError("Application cannot be undefined ! Expect a Express Application.");this._application=e}get driver(){return this._driver}set driver(e){if(p(e))throw new TypeError("Driver cannot be null ! Expect a database driver.");if(_(e))throw new TypeError("Driver cannot be undefined ! Expect a database driver.");this._driver=e}setPlugins(e){return this.plugins=e,this}setRouter(e){return this.router=e,this}setApplication(e){return this.application=e,this}setDriver(e){return this.driver=e,this}init(){}_registerPlugins(){for(let[e,r]of Object.entries(this._plugins))this._registerPackagePlugin(e,r)?console.log(`Use ${e} plugin from node_modules`):this._registerLocalPlugin(e,r)?console.log(`Use ${e} plugin from local folder`):console.error(`Unable to register the plugin ${e} the package or local folder doesn't seem to exist ! Skip it.`)}_registerPackagePlugin(e){let r=!1;try{const t=require(e);t instanceof H?(t.__dirname=E.dirname(require.resolve(e)),t.registerTo(this._driver,this._application,this._router),r=!0):console.error(`The plugin ${e} doesn't seem to be an instance of an extended class from TAbstractDatabasePlugin ! Skip it.`)}catch(e){e.code&&"MODULE_NOT_FOUND"===e.code||console.error(e)}return r}_registerLocalPlugin(e){let r=!1;try{const t=E.join(__dirname,"../../../","databases/plugins/",e,`${e}.js`),s=require(t);s instanceof H?(s.__dirname=E.dirname(require.resolve(t)),s.registerTo(this._driver,this._application,this._router),r=!0):console.error(`The plugin ${e} doesn't seem to be an instance of an extended class from TAbstractDatabasePlugin ! Skip it.`)}catch(e){console.error(e)}return r}connect(){}close(){}on(){}}class z extends Q{constructor(e={}){super({...e,driver:N})}close(){}connect(){new this._driver.Client({contactPoints:["localhost"]}).execute("select key from system.local",function(e,r){if(e)throw e;console.log(r.rows[0])})}init(){super.init()}on(){}}class V extends Q{constructor(e={}){super({...e,driver:$})}close(){}connect(){var e=new this._driver.Cluster("http://localhost:8091").openBucket("bucketName");e.insert("document-key",{name:"Matt",shoeSize:13},function(e,r){e?console.log(e):console.log(r)});var r=this.driver.N1qlQuery.fromString("SELECT d.* FROM `bucketName` d WHERE shoeSize = $1");e.query(r,[13],function(e,r){e?console.log(e):console.log(r)})}init(){super.init()}on(){}}class G extends Q{constructor(e={}){super({...e,driver:T})}close(){}connect(){var e=this._driver("http://localhost:5984");e.db.create("books");var r=e.db.use("books");r.insert({name:"The Art of war"},null,function(e,r){e?console.log(e):console.log(r)}),r.list(function(e,r){e?console.log(e):console.log(r.rows)})}init(){super.init()}on(){}}class J extends Q{constructor(e={}){super({...e,driver:R})}close(){}connect(){this._driver.Client({host:"localhost:9200"}).search({index:"books",type:"book",body:{query:{multi_match:{query:"express js",fields:["title","description"]}}}}).then(function(e){var r=e.hits.hits;console.log(r)},function(e){console.trace(e.message)})}init(){super.init()}on(){}}class X extends Q{constructor(e={}){super({...e,driver:S})}close(){}connect(){var e=this._driver("./mydb");e.put("name","LevelUP",function(r){if(r)return console.log("Ooops!",r);e.get("name",function(e,r){if(e)return console.log("Ooops!",e);console.log("name="+r)})})}init(){super.init()}on(){}}class Y extends L{constructor(e={}){const r={driver:null,schemaName:"",...e};super(r),this.databaseSchema=this._driver.model(r.schemaName)}get databaseSchema(){return this._databaseSchema}set databaseSchema(e){if(p(e))throw new TypeError("Database schema cannot be null.");if(_(e))throw new TypeError("Database schema cannot be undefined.");this._databaseSchema=e}setDatabaseSchema(e){return this.databaseSchema=e,this}_createMany(e,r){super._createMany(e,r),this._databaseSchema.create(e,this.return(r))}_createOne(e,r){super._createOne(e,r),this._databaseSchema.create(e,this.return(r))}_deleteAll(e){super._deleteAll(e),this._databaseSchema.collection.drop(this.return(e))}_deleteMany(e,r){super._deleteMany(e,r),this._databaseSchema.deleteMany({_id:{$in:e}},this.return(r))}_deleteOne(e,r){super._deleteOne(e,r),this._databaseSchema.findByIdAndDelete(e).then(e=>L.returnData(e,r)).catch(e=>L.returnError(e,r))}_deleteWhere(e,r){super._deleteWhere(e,r),this._databaseSchema.deleteMany(e,this.return(r))}_readAll(e,r){super._readAll(e,r),this._databaseSchema.find({},e).lean().exec().then(e=>L.returnData(e,r)).catch(e=>L.returnError(e,r))}_readMany(e,r,t){super._readMany(e,r,t),this._databaseSchema.find({_id:{$in:e}},r).lean().exec().then(r=>{p(r)||a(r)?L.returnNotFound(t):e.length!==r.length?L.returnErrorAndData({title:"Missing data",message:"Some requested objects could not be found."},r,t):L.returnData(r,t)}).catch(e=>L.returnError(e,t))}_readOne(e,r,t){super._readOne(e,r,t),this._databaseSchema.findById(e,r).lean().exec().then(e=>{p(e)?L.returnNotFound(t):L.returnData(e,t)}).catch(e=>L.returnError(e,t))}_readWhere(e,r,t){super._readWhere(e,r,t),this._databaseSchema.find(e,r).lean().exec().then(e=>L.returnData(e,t)).catch(e=>L.returnError(e,t))}_updateAll(e,r){super._updateAll(e,r),this._databaseSchema.update({},e,{multi:!0},this.return(r))}_updateMany(e,r,t){super._updateMany(e,r,t),this._databaseSchema.update({_id:{$in:e}},r,{multi:!0},this.return(t))}_updateOne(e,r,t){super._updateOne(e,r,t),this._databaseSchema.findByIdAndUpdate(e,r).exec().then(e=>L.returnData(e,t)).catch(e=>L.returnError(e,t))}_updateWhere(e,r,t){super._updateWhere(e,r,t),this._databaseSchema.update(e,r,{multi:!0},this.return(t))}}class Z extends H{get schemas(){return this._schemas}set schemas(e){this._schemas=e}addSchema(e){return this._schemas.push(e),this}get types(){return this._types}set types(e){this._types=e}addType(e){return this._types.push(e),this}static _registerTypesTo(e,r){const t=E.join(r,"types");if(m(t))return void console.warn(`Unable to find "types" folder for path "${t}"`);const s=A(t);let o="",a=void 0;for(let r=0,t=s.length;r<t;r++)o=s[r],f(o,200)?console.warn(`Skip empty core database schema: ${o}`):(a=require(o),n(a)?(console.log(`Register type: ${o}`),a(e)):console.error(`Unable to register type: ${o}`))}static _registerSchemasTo(e,r){const t=E.join(r,"schemas");if(m(t))return void console.warn(`Unable to find "schemas" folder for path "${t}"`);const s=A(t);let o="",a=void 0;for(let r=0,t=s.length;r<t;r++)o=s[r],f(o)?console.warn(`Skip empty local database schema: ${o}`):(a=require(o),n(a)?(console.log(`Direct register local database schema: ${o}`),a(e)):n(a.registerModelTo)?(console.log(`Register local database schema: ${o}`),a.registerModelTo(e)):console.error(`Unable to register local database schema: ${o}`))}constructor(e={}){const r={types:[],schemas:[],...e};super(r),this.types=r.types,this.schemas=r.schemas}beforeRegisterRoutes(e){super.beforeRegisterRoutes(e),this._registerTypes(e),Z._registerTypesTo(e,this.__dirname),this._registerSchemas(e),Z._registerSchemasTo(e,this.__dirname)}_registerTypes(e){for(let r of this._types)console.log(`Register type: ${r.name}`),r(e)}_registerSchemas(e){for(let r of this._schemas)console.log(`Register schema: ${r.name}`),n(r)?(console.log(`Direct register local database schema: ${r}`),r(e)):n(r.registerModelTo)?(console.log(`Register local database schema: ${r}`),r.registerModelTo(e)):console.error(`Unable to register local database schema: ${r}`)}}class K extends Q{constructor(e={}){const r={databaseUrl:"",...e,driver:D};super(r),this.databaseUrl=r.databaseUrl}close(e){this._driver.connection.close(e)}connect(){this._driver.connect(this.databaseUrl,{useNewUrlParser:!0}).then(e=>{console.log(`MongoDB at ${this.databaseUrl} is connected ! ${e}`)}).catch(e=>{console.error(e)})}init(){super.init()}on(e,r){-1!==["connecting","connected","open","disconnecting","disconnected","reconnected","close","error"].indexOf(e)&&this._driver.connection.on(e,r)}}class ee extends Q{constructor(e={}){super({...e,driver:w})}close(){}connect(){const e=this._driver.createConnection({host:"localhost",user:"dbuser",password:"s3kreee7",database:"my_db"});e.connect(),e.query("SELECT 1 + 1 AS solution",function(e,r,t){if(e)throw e;console.log("The solution is: ",r[0].solution),console.log("The fields is: ",t)}),e.end()}on(){}_initDatabase(){super._initDatabase()}}class re extends Q{constructor(e={}){super({...e,driver:x})}close(){}connect(){this._driver.query("match (n) return n").exec().then(function(e){console.log(e)},function(e){console.log(e)})}on(){}_initDatabase(){super._initDatabase()}}class te extends Q{constructor(e={}){super({...e,driver:O})}close(){}connect(){const e={user:"DbUser",password:"DbPassword",connectString:"localhost:1521/orcl"};!async function(r){let t;try{t=await this._driver.getConnection(e);const s=await t.execute("select * from employees where employee_id = :id",[r]);console.log(s.rows[0])}catch(e){console.log("Ouch!",e)}finally{t&&await t.close()}}(101)}on(){}_initDatabase(){super._initDatabase()}}const se=C({});class ne extends Q{constructor(e={}){const r={host:"localhost",port:"5432",database:"postgres",...e,driver:se};super(r),this._host=r.host,this._port=r.port,this._database=r.database}close(){}connect(){this._driver.one(" SELECT 1 ",[]).then(e=>{console.log(`PostgreSQL at ${this._host}:${this._port}/${this._database} is connected ! ${e}`)}).catch(e=>{console.log("PostgreSQL - Connection error ",e)})}init(){super.init()}on(){}}class oe extends L{constructor(e={}){const r={driver:null,tableName:"",tableFields:[],...e};super(r),this.tableName=r.tableName,this.tableFields=r.tableFields}get tableFields(){return this._tableFields}set tableFields(e){const r="Expect an instance of Array of String.";if(p(e))throw new TypeError(`Table fields cannot be null ! ${r}`);if(_(e))throw new TypeError(`Table fields cannot be undefined ! ${r}`);let t="";for(let r=0,s=e.length;r<s;r++)t+=`${e[r]}, `;this._tableFields=t.slice(0,-2)}get tableName(){return this._tableName}set tableName(e){const r="Expect an instance of String.";if(p(e))throw new TypeError(`Table name cannot be null ! ${r}`);if(_(e))throw new TypeError(`Table name cannot be undefined ! ${r}`);if(l(e))throw new TypeError(`Table name cannot be an instance of ${e.constructor.name} ! ${r}`);this._tableName=e}setTableName(e){return this.tableName=e,this}_createMany(e,r){super._createOne(e,r);const t=[],s=[];let n=e.length,o=null,a=null,i=null,l=null,u=null,c=null,d=null;for(let h in e){o=e[h],a=Object.keys(o),i=Object.values(o),l=0,u="(",c="(";for(let e in a)u+=`${e}, `,c+=`$${++l}, `;u=u.slice(0,-2),c=c.slice(0,-2),u+=")",c+=")",d=`INSERT INTO ${this._tableName} ${u} VALUES ${c}`,this._driver.one(d,i).then(e=>{t.push(e)}).catch(e=>{s.push(e)}).finally(()=>{if(--n>0)return;const e=t.length>0,o=s.length>0;e&&o?L.returnErrorAndData(s,t,r):!e&&o?L.returnError(s,r):e&&!o?L.returnData(t,r):e||o||L.returnData(null,r)})}}_createOne(e,r){super._createOne(e,r);const t=Object.keys(e),s=Object.values(e);let n=0,o="(",a="(";for(let e in t)o+=`${e}, `,a+=`$${++n}, `;o=o.slice(0,-2),a=a.slice(0,-2),o+=")",a+=")";let i=`INSERT INTO ${this._tableName} ${o} VALUES ${a}`;this._driver.one(i,s).then(e=>{L.returnData(e,r)}).catch(e=>{L.returnError(e,r)})}_deleteAll(e){super._deleteAll(e),this._driver.one(` TRUNCATE TABLE ${this._tableName} `).then(r=>{L.returnData(r,e)}).catch(r=>{L.returnError(r,e)})}_deleteMany(e,r){super._deleteMany(e,r),this._driver.any(` DELETE FROM ${this._tableName} WHERE id IN ($1:list) `,[e]).then(e=>{L.returnData(e,r)}).catch(e=>{L.returnError(e,r)})}_deleteOne(e,r){super._deleteOne(e,r),this._driver.one(` DELETE FROM ${this._tableName} WHERE id=$1 `,[e]).then(e=>{L.returnData(e,r)}).catch(e=>{L.returnError(e,r)})}_deleteWhere(e,r){super._deleteWhere(e,r),L.returnError("DeleteWhere method is not implemented yet ! Sorry for the disagrement.",r)}_readAll(e,r){super._readAll(e,r),this._driver.any(` SELECT ${this._tableFields} FROM ${this._tableName} `).then(e=>{L.returnData(e,r)}).catch(e=>{L.returnError(e,r)})}_readMany(e,r,t){super._readMany(e,r,t),this._driver.any(` SELECT ${this._tableFields} FROM ${this._tableName} WHERE id IN ($1:list)`,[e]).then(e=>{L.returnData(e,t)}).catch(e=>{L.returnError(e,t)})}_readOne(e,r,t){super._readOne(e,r,t),this._driver.one(` SELECT ${this._tableFields} FROM ${this._tableName} WHERE id = $1 `,[e]).then(e=>{L.returnData(e,t)}).catch(e=>{L.returnError(e,t)})}_readWhere(e,r,t){super._readWhere(e,r,t),this._driver.any(` SELECT ${this._tableFields} FROM ${this._tableName} WHERE ${r}`).then(e=>{L.returnData(e,t)}).catch(e=>{L.returnError(e,t)})}_updateAll(e,r){super._updateAll(e,r),L.returnError("UpdateAll method is not implemented yet ! Sorry for the disagrement.",r)}_updateMany(e,r,t){super._updateMany(e,r,t);const s=e.length,n=r.length;if(s!==n)return void L.returnError("Number of ids doesn't match the number of updates. Abort updates !",t);const o=[],a=[];let i=s,l=null,u=null,c=null,d=null,h=null,p=null,_=null,m=null;for(let s=0;s<n;s++){l=e[s],u=r[s],c=Object.keys(u),d=Object.values(u),h=1,p="";for(let e in c)p+=`${e}=$${++h}, `;p=p.slice(0,-2),p+=")",_=` UPDATE ${this._tableName} SET ${p} WHERE id=$1 `,m=[l].concat(d),this._driver.one(_,m).then(e=>{o.push(e)}).catch(e=>{a.push(e)}).finally(()=>{if(--i>0)return;const e=o.length>0,r=a.length>0;e&&r?L.returnErrorAndData(a,o,t):!e&&r?L.returnError(a,t):e&&!r?L.returnData(o,t):e||r||L.returnData(null,t)})}}_updateOne(e,r,t){super._updateOne(e,r,t);const s=Object.keys(r),n=Object.values(r);let o=1,a="";for(let e in s)a+=`${e}=$${++o}, `;a=a.slice(0,-2),a+=")";let i=` UPDATE ${this._tableName} SET ${a} WHERE id=$1 `,l=[e].concat(n);this._driver.one(i,l).then(e=>{L.returnData(e,t)}).catch(e=>{L.returnError(e,t)})}_updateWhere(e,r,t){super._updateWhere(e,r,t),L.returnError("UpdateWhere method is not implemented yet ! Sorry for the disagrement.",t)}}class ae extends Q{constructor(e={}){super({...e,driver:q})}close(){}connect(){var e=this._driver.createClient();e.on("error",function(e){console.log("Error "+e)}),e.set("string key","string val",this._driver.print),e.hset("hash key","hashtest 1","some value",this._driver.print),e.hset(["hash key","hashtest 2","some other value"],this._driver.print),e.hkeys("hash key",function(r,t){console.log(t.length+" replies:"),t.forEach(function(e,r){console.log("    "+r+": "+e)}),e.quit()})}init(){super.init()}on(){}}class ie extends Q{constructor(e={}){super({...e,driver:F})}close(){}connect(){var e=new this._driver.Database(":memory:");e.serialize(function(){e.run("CREATE TABLE lorem (info TEXT)");for(var r=e.prepare("INSERT INTO lorem VALUES (?)"),t=0;t<10;t++)r.run("Ipsum "+t);r.finalize(),e.each("SELECT rowid AS id, info FROM lorem",function(e,r){console.log(r.id+": "+r.info)})}),e.close()}init(){super.init()}on(){}}const le=15e3,ue=15e3,ce=5e3,de=500,he=4096,pe=2147483647,_e=7,me=1433,fe="7_4",be="us_english",Ee="mdy";class ge extends Q{constructor(e={}){const r={server:"localhost",authentication:{type:"default",options:{userName:"dbo",password:"intelCOREi7"}},options:{abortTransactionOnError:!1,appName:void 0,camelCaseColumns:!1,cancelTimeout:ce,columnNameReplacer:void 0,connectionRetryInterval:de,connectTimeout:le,cryptoCredentialsDetails:{},database:void 0,datefirst:_e,dateFormat:Ee,debug:{data:!1,packet:!1,payload:!1,token:!1},enableAnsiNull:!0,enableAnsiNullDefault:!0,enableAnsiPadding:!0,enableAnsiWarnings:!0,enableArithAbort:!1,enableConcatNullYieldsNull:!0,enableCursorCloseOnCommit:null,enableImplicitTransactions:!1,enableNumericRoundabort:!1,enableQuotedIdentifier:!0,encrypt:!1,fallbackToDefaultDb:!1,instanceName:void 0,language:be,localAddress:void 0,maxRetriesOnTransientErrors:3,multiSubnetFailover:!1,packetSize:he,port:me,readOnlyIntent:!1,requestTimeout:ue,rowCollectionOnDone:!1,rowCollectionOnRequestCompletion:!1,tdsVersion:fe,textsize:pe,trustServerCertificate:!0,useColumnNames:!1,useUTC:!0},...e};r.driver={SqlServerDriver:M,Connection:new k(r),Request:P},super(r)}close(e){this._driver.Connection.close(),e()}connect(){this._driver.Connection.on("connect",e=>{e?console.error(e):console.log("SQLServer at XXX is connected !")})}init(){super.init()}on(){}}class ve extends L{constructor(e={}){const r={driver:null,tableName:"",columns:[],...e};super(r),this.tableName=r.tableName,this.columns=r.columns}get tableName(){return this._tableName}set tableName(e){const r="Expect an instance of String.";if(p(e))throw new TypeError(`Table name cannot be null ! ${r}`);if(_(e))throw new TypeError(`Table name cannot be undefined ! ${r}`);if(l(e))throw new TypeError(`Table name cannot be an instance of ${e.constructor.name} ! ${r}`);this._tableName=e}get columns(){return this._columns}set columns(e){const r="Expect an array of strings.";if(p(e))throw new TypeError(`Columns cannot be null ! ${r}`);if(_(e))throw new TypeError(`Columns cannot be undefined ! ${r}`);if(b(e))throw new TypeError(`Columns cannot be an instance of ${e.constructor.name} ! ${r}`);this._columns=e}setTableName(e){return this.tableName=e,this}setColumns(e){return this.columns=e,this}_createMany(e,r){super._createMany(e,r);const t=this.columns,n=t.toString();let o=null,a="",i=null;for(let r=0,n=e.length;r<n;r++){o=e[r],a+="(";for(let e in o)t.includes(e)&&(i=o[e],s(i)?a+=`'${i}', `:a+=`${i}, `);a=a.slice(0,-2),a+="), "}a=a.slice(0,-2);const l=`INSERT INTO ${this._tableName} (${n}) VALUES ${a}`,u=new this._driver.Request(l,this.return(r));this._driver.Connection.execSql(u)}_createOne(e,r){super._createOne(e,r);const t=this.columns;let n="",o=null,a="",i=null;for(let r=0,l=t.length;r<l;r++)(i=e[o=t[r]])&&(n+=`${o}, `,s(i)?a+=`'${i}', `:a+=`${i}, `);n=n.slice(0,-2),a=a.slice(0,-2);const l=`INSERT INTO ${this._tableName} (${n}) VALUES (${a})`,u=new this._driver.Request(l,this.return(r));this._driver.Connection.execSql(u)}_deleteAll(e){super._deleteAll(e);const r=`TRUNCATE TABLE ${this._tableName}`,t=new this._driver.Request(r,this.return(e));this._driver.Connection.execSql(t)}_deleteMany(e,r){super._deleteMany(e,r);const t=`DELETE FROM ${this._tableName} WHERE id IN (${e})`,s=new this._driver.Request(t,this.return(r));this._driver.Connection.execSql(s)}_deleteOne(e,r){super._deleteOne(e,r);const t=`DELETE FROM ${this._tableName} WHERE id=${e}`,s=new this._driver.Request(t,this.return(r));this._driver.Connection.execSql(s)}_deleteWhere(e,r){super._deleteWhere(e,r),L.returnError("Unimplemented methods (DELETE WHERE)",r)}_readAll(e,r){super._readAll(e,r);const t=`SELECT * FROM ${this.tableName}`,s=new this._driver.Request(t,(e,t,s)=>{console.log(`Get ${t} elements.`),e?L.returnError(e,r):0===s.length?L.returnNotFound(r):L.returnData(s,r)});s.on("row",e=>{let r={};e.forEach(e=>{r[e.metadata.colName]=e.value})}),this._driver.Connection.execSql(s)}_readMany(e,r,t){super._readMany(e,r,t);const s=e.toString(),n=`SELECT * FROM ${this.tableName} WHERE id IN (${s})`,o=new this._driver.Request(n,(e,r,s)=>{console.log(`Get ${r} elements !`),e?L.returnError(e,t):0===s.length?L.returnNotFound(t):L.returnData(s,t)});o.on("row",e=>{let r={};e.forEach(e=>{r[e.metadata.colName]=e.value})}),this._driver.Connection.execSql(o)}_readOne(e,r,t){super._readOne(e,r,t);const s=`SELECT * FROM ${this.tableName} WHERE id=${e}`,n=new this._driver.Request(s,(e,r,s)=>{console.log(`Get ${r} elements !`),e?L.returnError(e,t):0===s.length?L.returnNotFound(t):L.returnData(s,t)});n.on("row",e=>{let r={};e.forEach(e=>{r[e.metadata.colName]=e.value})}),this._driver.Connection.execSql(n)}_readWhere(e,r,t){super._readWhere(e,r,t),L.returnError("Unimplemented methods (READ WHERE)",t)}_updateAll(e,r){super._updateAll(e,r);let t="";for(let r in e){const n=e[r];s(n)?t+=`${r} = '${n}', `:t+=`${r} = ${n}, `}t=t.slice(0,-2);const n=`UPDATE ${this._tableName} SET ${t}`,o=new this._driver.Request(n,this.return(r));this._driver.Connection.execSql(o)}_updateMany(e,r,t){super._updateMany(e,r,t);let n="",o=null;for(let e in r)o=r[e],s(o)?n+=`${e} = '${o}', `:n+=`${e} = ${o}, `;n=n.slice(0,-2);const a=`UPDATE ${this._tableName} SET ${n} WHERE id IN (${e})`,i=new this._driver.Request(a,this.return(t));this._driver.Connection.execSql(i)}_updateOne(e,r,t){super._updateOne(e,r,t);let n="",o=null;for(let e in r)o=r[e],s(o)?n+=`${e} = '${o}', `:n+=`${e} = ${o}, `;n=n.slice(0,-2);const a=`UPDATE ${this._tableName} SET ${n} WHERE id=${e}`,i=new this._driver.Request(a,this.return(t));this._driver.Connection.execSql(i)}_updateWhere(e,r,t){super._updateWhere(e,r,t),L.returnError("Unimplemented methods (UPDATE WHERE)",t)}}export{I as MemoryWriteStream,W as TAbstractConverterManager,L as TAbstractDataController,j as TAbstractDataConverter,U as TAbstractDataInserter,Q as TAbstractDatabase,H as TAbstractDatabasePlugin,B as TAbstractFileConverter,z as TCassandraDatabase,V as TCouchBaseDatabase,G as TCouchDBDatabase,J as TElasticSearchDatabase,X as TLevelDBDatabase,K as TMongoDBDatabase,Z as TMongoDBPlugin,Y as TMongooseController,ee as TMySQLDatabase,re as TNeo4JDatabase,te as TOracleDatabase,oe as TPostgreSQLController,ne as TPostgreSQLDatabase,ae as TRedisDatabase,ve as TSQLServerController,ge as TSQLServerDatabase,ie as TSQLiteDatabase};
//# sourceMappingURL=itee-database.esm.min.js.map
