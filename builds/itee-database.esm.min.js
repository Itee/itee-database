import{isDefined as e,isArray as r,isObject as t,isString as s,isFunction as n,isNotDefined as o,isEmptyArray as i,isEmptyObject as a,isNotString as u,isEmptyString as l,isBlankString as c,isNotArray as d,isNotObject as p,isNull as h,isUndefined as f}from"itee-validators";import _ from"path";import{kStringMaxLength as m}from"buffer";import E from"fs";import{Writable as b}from"stream";
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @class TDatabaseController
 * @classdesc The TDatabaseController is the base class to perform CRUD operations on the database
 */class g{static __checkData(r,t,s){const n=t.body,o=t.params,i=t.query;return e(n)&&n[r]?n[r]:e(o)&&o[r]?o[r]:e(i)&&i[r]?i[r]:void g.returnError({title:"Erreur de paramètre",message:`${r} n'existe pas dans les paramètres !`},s)}static _formatError(e){let n=[];if(r(e))for(let r=0,t=e.length;r<t;++r)n=n.concat(g._formatError(e[r]));else if(t(e))if("ValidationError"===e.name){let r="",t=e.errors;for(let e in t)Object.prototype.hasOwnProperty.call(t,e)&&(r+=t[e].message+"<br>");n.push({title:"Erreur de validation",message:r||"Aucun message d'erreur... Gloups !"})}else"VersionError"===e.name?n.push({title:"Erreur de base de donnée",message:"Aucun document correspondant n'as put être trouvé pour la requete !"}):n.push({title:e.title||"Erreur",message:e.message||"Aucun message d'erreur... Gloups !"});else{if(!s(e))throw new Error(`Unknown error type: ${e} !`);n.push({title:"Erreur",message:e})}return n}static returnNotFound(e){if(n(e))return e();e.headersSent||e.status(204).end()}static returnError(e,r){if(n(r))return r(e,null);if(r.headersSent)return;const t=g._formatError(e);r.format({"application/json":()=>{r.status(500).json(t)},default:()=>{r.status(406).send("Not Acceptable")}})}static returnData(e,t){if(n(t))return t(null,e);if(t.headersSent)return;const s=r(e)?e:[e];t.format({"application/json":()=>{t.status(200).json(s)},default:()=>{t.status(406).send("Not Acceptable")}})}static returnErrorAndData(e,r,t){if(n(t))return t(e,r);if(t.headersSent)return;const s={errors:e,datas:r};t.format({"application/json":()=>{t.status(416).json(s)},default:()=>{t.status(416).send("Range Not Satisfiable")}})}constructor(e={}){const r={driver:null,useNext:!1,...e};this._driver=r.driver,this._useNext=r.useNext}return(r,t={}){const s=Object.assign({immediate:null,beforeAll:null,beforeReturnErrorAndData:null,afterReturnErrorAndData:null,beforeReturnError:null,afterReturnError:null,beforeReturnData:null,afterReturnData:null,beforeReturnNotFound:null,afterReturnNotFound:null,afterAll:null},t,{returnErrorAndData:g.returnErrorAndData.bind(this),returnError:g.returnError.bind(this),returnData:g.returnData.bind(this),returnNotFound:g.returnNotFound.bind(this)});return s.immediate&&s.immediate(),function(t=null,n=null){const o=e(n),i=e(t);s.beforeAll&&s.beforeAll(),o&&i?(s.beforeReturnErrorAndData&&s.beforeReturnErrorAndData(t,n),s.returnErrorAndData(t,n,r),s.afterReturnErrorAndData&&s.afterReturnErrorAndData(t,n)):o&&!i?(s.beforeReturnData&&s.beforeReturnData(n),s.returnData(n,r),s.afterReturnData&&s.afterReturnData(n)):!o&&i?(s.beforeReturnError&&s.beforeReturnError(t),s.returnError(t,r),s.afterReturnError&&s.afterReturnError(t)):o||i||(s.beforeReturnNotFound&&s.beforeReturnNotFound(),s.returnNotFound(r),s.afterReturnNotFound&&s.afterReturnNotFound()),s.afterAll&&s.afterAll()}}create(e,s,n){const u=e.body;o(u)?g.returnError({title:"Erreur de paramètre",message:"Le corps de la requete ne peut pas être null ou indefini."},this._useNext?n:s):r(u)?i(u)?g.returnError({title:"Erreur de paramètre",message:"Le tableau d'objet de la requete ne peut pas être vide."},this._useNext?n:s):this._createMany(u,s,n):t(u)?a(u)?g.returnError({title:"Erreur de paramètre",message:"L'objet de la requete ne peut pas être vide."},this._useNext?n:s):this._createOne(u,s,n):g.returnError({title:"Erreur de paramètre",message:"Le type de donnée de la requete est invalide. Les paramètres valides sont objet ou un tableau d'objet."},this._useNext?n:s)}_createOne(){}_createMany(){}read(r,t,s){const n=r.params.id,o=r.body,h=e(o),f=h?o.ids:null,_=h?o.query:null,m=h?o.projection:null;e(n)?u(n)?g.returnError({title:"Erreur de paramètre",message:"L'identifiant devrait être une chaine de caractères."},this._useNext?s:t):l(n)||c(n)?g.returnError({title:"Erreur de paramètre",message:"L'identifiant ne peut pas être une chaine de caractères vide."},this._useNext?s:t):this._readOne(n,m,t,s):e(f)?d(f)?g.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants devrait être un tableau de chaine de caractères."},this._useNext?s:t):i(f)?g.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants ne peut pas être vide."},this._useNext?s:t):this._readMany(f,m,t,s):e(_)?p(_)?g.returnError({title:"Erreur de paramètre",message:"La requete devrait être un objet javascript."},this._useNext?s:t):a(_)?this._readAll(m,t,s):this._readWhere(_,m,t,s):g.returnError({title:"Erreur de paramètre",message:"La requete ne peut pas être null."},this._useNext?s:t)}_readOne(){}_readMany(){}_readWhere(){}_readAll(){}update(r,t,s){const n=r.params.id,h=r.body,f=e(h),_=f?h.ids:null,m=f?h.query:null,E=f?h.update:null;o(E)?g.returnError({title:"Erreur de paramètre",message:"La mise à jour a appliquer ne peut pas être null ou indefini."},this._useNext?s:t):e(n)?u(n)?g.returnError({title:"Erreur de paramètre",message:"L'identifiant devrait être une chaine de caractères."},this._useNext?s:t):l(n)||c(n)?g.returnError({title:"Erreur de paramètre",message:"L'identifiant ne peut pas être une chaine de caractères vide."},this._useNext?s:t):this._updateOne(n,E,t,s):e(_)?d(_)?g.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants devrait être un tableau de chaine de caractères."},this._useNext?s:t):i(_)?g.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants ne peut pas être vide."},this._useNext?s:t):this._updateMany(_,E,t,s):e(m)?p(m)?g.returnError({title:"Erreur de paramètre",message:"La requete devrait être un objet javascript."},this._useNext?s:t):a(m)?this._updateAll(E,t,s):this._updateWhere(m,E,t,s):g.returnError({title:"Erreur de paramètre",message:"La requete ne peut pas être vide."},this._useNext?s:t)}_updateOne(){}_updateMany(){}_updateWhere(){}_updateAll(){}delete(r,t,s){const n=r.params.id,o=r.body,h=e(o),f=h?o.ids:null,_=h?o.query:null;e(n)?u(n)?g.returnError({title:"Erreur de paramètre",message:"L'identifiant devrait être une chaine de caractères."},this._useNext?s:t):l(n)||c(n)?g.returnError({title:"Erreur de paramètre",message:"L'identifiant ne peut pas être une chaine de caractères vide."},this._useNext?s:t):this._deleteOne(n,t,s):e(f)?d(f)?g.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants devrait être un tableau de chaine de caractères."},this._useNext?s:t):i(f)?g.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants ne peut pas être vide."},this._useNext?s:t):this._deleteMany(f,t,s):e(_)?p(_)?g.returnError({title:"Erreur de paramètre",message:"La requete devrait être un objet javascript."},this._useNext?s:t):a(_)?this._deleteAll(t,s):this._deleteWhere(_,t,s):g.returnError({title:"Erreur de paramètre",message:"La requete ne peut pas être vide."},this._useNext?s:t)}_deleteOne(){}_deleteMany(){}_deleteWhere(){}_deleteAll(){}}
/**
 * @author [Ahmed DCHAR]{@link https://github.com/dragoneel}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class v{constructor(){this._isProcessing=!1,this._queue=[]}convert(e,r,t,s,n){this._queue.push({file:e,parameters:r,onSuccess:t,onProgress:s,onError:n}),this._isProcessing||this._processQueue()}_processQueue(){if(0===this._queue.length)return void(this._isProcessing=!1);this._isProcessing=!0;const e=this,r=this._queue.shift(),t=r.file,s=r.parameters,n=r.onSuccess,o=r.onProgress,i=r.onError;e._convert(t,s,(function(r){n(r),e._processQueue()}),(function(e){o(e)}),(function(r){i(r),e._processQueue()}))}_convert(){}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class y{static _formatError(e){let n=[];if(r(e))for(let r=0,t=e.length;r<t;++r)n=n.concat(y._formatError(e[r]));else if(t(e))if("ValidationError"===e.name){let r="",t=e.errors;for(let e in t)Object.prototype.hasOwnProperty.call(t,e)&&(r+=t[e].message+"<br>");n.push({title:"Erreur de validation",message:r||"Aucun message d'erreur... Gloups !"})}else"VersionError"===e.name?n.push({title:"Erreur de base de donnée",message:"Aucun document correspondant n'as put être trouvé pour la requete !"}):n.push({title:e.title||"Erreur",message:e.message||"Aucun message d'erreur... Gloups !"});else{if(!s(e))throw new Error(`Unknown error type: ${e} !`);n.push({title:"Erreur",message:e})}return n}static _convertFilesObjectToArray(e){const r=[];for(let t in e)Object.prototype.hasOwnProperty.call(e,t)&&r.push(e[t]);return r}static returnNotFound(e){if(n(e))return e();e.headersSent||e.status(204).end()}static returnError(e,r){if(n(r))return r(e,null);if(r.headersSent)return;const t=y._formatError(e);r.format({"application/json":()=>{r.status(500).json(t)},default:()=>{r.status(406).send("Not Acceptable")}})}static returnData(e,t){if(n(t))return t(null,e);if(t.headersSent)return;const s=r(e)?e:[e];t.format({"application/json":()=>{t.status(200).json(s)},default:()=>{t.status(406).send("Not Acceptable")}})}static returnErrorAndData(e,r,t){if(n(t))return t(e,r);if(t.headersSent)return;const s={errors:e,datas:r};t.format({"application/json":()=>{t.status(416).json(s)},default:()=>{t.status(416).send("Range Not Satisfiable")}})}static return(r,t={}){const s=Object.assign({immediate:null,beforeAll:null,beforeReturnErrorAndData:null,afterReturnErrorAndData:null,beforeReturnError:null,afterReturnError:null,beforeReturnData:null,afterReturnData:null,beforeReturnNotFound:null,afterReturnNotFound:null,afterAll:null},t,{returnErrorAndData:y.returnErrorAndData.bind(this),returnError:y.returnError.bind(this),returnData:y.returnData.bind(this),returnNotFound:y.returnNotFound.bind(this)});return s.immediate&&s.immediate(),function(t=null,n=null){const o=e(n),i=e(t);s.beforeAll&&s.beforeAll(),o&&i?(s.beforeReturnErrorAndData&&s.beforeReturnErrorAndData(t,n),s.returnErrorAndData(t,n,r),s.afterReturnErrorAndData&&s.afterReturnErrorAndData(t,n)):o&&!i?(s.beforeReturnData&&s.beforeReturnData(n),s.returnData(n,r),s.afterReturnData&&s.afterReturnData(n)):!o&&i?(s.beforeReturnError&&s.beforeReturnError(t),s.returnError(t,r),s.afterReturnError&&s.afterReturnError(t)):o||i||(s.beforeReturnNotFound&&s.beforeReturnNotFound(),s.returnNotFound(r),s.afterReturnNotFound&&s.afterReturnNotFound()),s.afterAll&&s.afterAll()}}constructor(e={}){const r={driver:null,useNext:!1,converters:new Map,convertersOptions:void 0,rules:{},inserter:{},...e};this._driver=r.driver,this._useNext=r.useNext,this._converters=r.converters,this._convertersOptions=r.convertersOptions,this._rules=r.rules,this._inserter=new r.inserter({driver:this._driver}),this._errors=[],this._processedFiles=[],this._filesToProcess=0}_fileConversionSuccessCallback(e,r,t,s){t?t(s):this._inserter.save(s,this._convertersOptions,this._fileInsertionSuccessCallback.bind(this,e,r),this._fileConversionProgressCallback.bind(this,e),this._fileConversionErrorCallback.bind(this,e,r))}_fileInsertionSuccessCallback(e,r,t){this._filesToProcess--,this._checkEndOfReturns(e,r,t)}_fileConversionProgressCallback(e,r){console.log(r)}_fileConversionErrorCallback(e,r,t){this._errors.push(t),this._filesToProcess--,this._checkEndOfReturns(e,r,null)}_checkEndOfReturns(e,r,t){this._errors.length>0?this._useNext?r(this._errors):(y.return(e)(this._errors),this._errors=[]):this._useNext?r():y.returnData(t,e)}processFiles(e,r,t){const s=y._convertFilesObjectToArray(e.files),n=s.length;if(0===n){if(this._useNext)return void t("Aucun fichier à traiter !");y.returnError("Aucun fichier à traiter !",r)}this._convertersOptions=e.body;const o=[];for(let e=0;e<n;e++){let n=s[e];if(this._processedFiles.includes(n.name)){if(this._useNext)return void t(`Le fichier ${n.name} à déjà été inséré.`);y.returnError(`Le fichier ${n.name} à déjà été inséré.`,r)}this._processedFiles.push(n.name),o.push(n)}const i=o.length;if(0===i){if(this._useNext)return void t(`Impossible d'analyser ${i} fichiers associatifs simultanément !`);y.returnError(`Impossible d'analyser ${i} fichiers associatifs simultanément !`,r)}this._filesToProcess+=i,this._processFiles(o,this._convertersOptions,r,t)}_processFiles(e,t,s,n){const o=e.map(e=>_.extname(e.name)),i=this._rules.filter(e=>{const t=e.on;if(r(t)){for(let e=0;e<t.length;e++)if(!o.includes(t[e]))return!1;return!0}return o.includes(t)});for(let o=0,a=i.length;o<a;o++){let a=i[o].use;if(r(a)){let r=void 0;for(let o=a.length-1;o>=0;o--){const i=a[o];0===o?this._converters[i].convert(e,t,this._fileConversionSuccessCallback.bind(this,s,n,r),this._fileConversionProgressCallback.bind(this,s),this._fileConversionErrorCallback.bind(this,s,n)):r=o===a.length-1?e=>{this._converters[i].convert(e,t,this._fileConversionSuccessCallback.bind(this,s,n,null),this._fileConversionProgressCallback.bind(this,s),this._fileConversionErrorCallback.bind(this,s,n))}:e=>{this._converters[i].convert(e,t,this._fileConversionSuccessCallback.bind(this,s,n,r),this._fileConversionProgressCallback.bind(this,s),this._fileConversionErrorCallback.bind(this,s,n))}}}else this._converters[a].convert(e[0],t,this._fileConversionSuccessCallback.bind(this,s,n,null),this._fileConversionProgressCallback.bind(this,s),this._fileConversionErrorCallback.bind(this,s,n))}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class A{constructor(e={}){const r={driver:null,...e};this._driver=r.driver,this._isProcessing=!1,this._queue=[]}save(e,r,t,s,n){e?r?(this._queue.push({data:e,parameters:r,onSuccess:t,onProgress:s,onError:n}),this._processQueue()):n("Invalid parent id, unable to set children to unknown database node !!!"):n("Data cannot be null or empty, aborting database insert !!!")}_processQueue(){if(0===this._queue.length||this._isProcessing)return;this._isProcessing=!0;const e=this,r=this._queue.shift(),t=r.data,s=r.parameters,n=r.onSuccess,o=r.onProgress,i=r.onError;e._save(t,s,(function(r){n(r),e._isProcessing=!1,e._processQueue()}),(function(e){o(e)}),(function(r){i(r),e._isProcessing=!1,e._processQueue()}))}_save(){}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class R extends b{constructor(e){super(e);const r=e.bufferSize||m;this.memoryBuffer=Buffer.alloc(r),this.offset=0}_final(e){e()}_write(e,r,t){const s=Buffer.isBuffer(e)?e:new Buffer(e,r);for(let e=0,r=s.length;e<r;e++)this.memoryBuffer[this.offset]=s[e],this.offset++;t()}_writev(e,r){for(let r=0,t=e.length;r<t;r++)this.memoryBuffer=Buffer.concat([this.memoryBuffer,e[r]]);r()}_releaseMemory(){this.memoryBuffer=null}toArrayBuffer(){const e=this.memoryBuffer,r=new ArrayBuffer(e.length),t=new Uint8Array(r);for(let r=0;r<e.length;++r)t[r]=e[r];return this._releaseMemory(),r}toJSON(){return JSON.parse(this.toString())}toString(){const e=this.memoryBuffer.toString();return this._releaseMemory(),e}}class N{constructor(e={}){const r={dumpType:N.DumpType.ArrayBuffer,...e};this.dumpType=r.dumpType,this._isProcessing=!1,this._queue=[]}get dumpType(){return this._dumpType}set dumpType(e){if(h(e))throw new TypeError("Dump type cannot be null ! Expect a non empty string.");if(f(e))throw new TypeError("Dump type cannot be undefined ! Expect a non empty string.");this._dumpType=e}setDumpType(e){return this.dumpType=e,this}convert(e,r,t,s,n){e?(this._queue.push({file:e,parameters:r,onSuccess:t,onProgress:s,onError:n}),this._processQueue()):n("File cannot be null or empty, aborting file convertion !!!")}_processQueue(){if(0===this._queue.length||this._isProcessing)return;this._isProcessing=!0;const e=this,r=this._queue.shift(),t=r.file,n=r.parameters,o=r.onSuccess,i=r.onProgress,a=r.onError;if(s(t))e._dumpFileInMemoryAs(e._dumpType,t,n,u,c,d);else{const r=t.data;switch(e._dumpType){case N.DumpType.ArrayBuffer:{const e=r.length,t=new ArrayBuffer(e),s=new Uint8Array(t);for(let t=0;t<e;++t)s[t]=r[t];u(t)}break;case N.DumpType.JSON:u(JSON.parse(r.toString()));break;case N.DumpType.String:u(r.toString());break;default:throw new RangeError(`Invalid switch parameter: ${e._dumpType}`)}}function u(r){e._convert(r,n,l,c,d)}function l(r){o(r),e._isProcessing=!1,e._processQueue()}function c(e){i(e)}function d(r){a(r),e._isProcessing=!1,e._processQueue()}}_dumpFileInMemoryAs(e,r,t,s,n,o){let i=!1;const a=E.createReadStream(r);a.on("error",e=>{console.error(`Read stream on error: ${e}`),i=!0,o(e)});const u=parseInt(t.fileSize),l=new R({bufferSize:u});l.on("error",e=>{i=!0,o(e)}),l.on("finish",()=>{if(!i){switch(e){case N.DumpType.ArrayBuffer:s(l.toArrayBuffer());break;case N.DumpType.String:s(l.toString());break;case N.DumpType.JSON:s(l.toJSON());break;default:throw new RangeError(`Invalid switch parameter: ${e}`)}a.unpipe(),a.close(),l.end()}}),a.pipe(l)}_convert(){}}N.MAX_FILE_SIZE=67108864,N.DumpType=Object.freeze({ArrayBuffer:0,String:1,JSON:2});
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
class D{static _registerRoutesTo(e,r,t,s,n){for(let o=0,i=n.length;o<i;o++){const i=n[o],a=new(s.get(i.controller.name))({driver:e,...i.controller.options}),u=t({mergeParams:!0});console.log(`\tAdd controller for base route: ${i.route}`),r.use(i.route,D._populateRouter(u,a,i.controller.can))}}static _populateRouter(e,r,t={}){for(let s in t){const n=t[s];console.log(`\t\tMap route ${n.over} on (${n.on}) to ${r.constructor.name}.${s} method.`),e[n.on](n.over,r[s].bind(r))}return e}constructor(e={}){const r={controllers:new Map,descriptors:[],...e};this.controllers=r.controllers,this.descriptors=r.descriptors,this.__dirname=void 0}get controllers(){return this._controllers}set controllers(e){if(h(e))throw new TypeError("Controllers cannot be null ! Expect a map of controller.");if(f(e))throw new TypeError("Controllers cannot be undefined ! Expect a map of controller.");if(!(e instanceof Map))throw new TypeError(`Controllers cannot be an instance of ${e.constructor.name} ! Expect a map of controller.`);this._controllers=e}get descriptors(){return this._descriptors}set descriptors(e){if(h(e))throw new TypeError("Descriptors cannot be null ! Expect an array of POJO.");if(f(e))throw new TypeError("Descriptors cannot be undefined ! Expect an array of POJO.");this._descriptors=e}addController(e){return this._controllers.set(e.name,e),this}addDescriptor(e){return this._descriptors.push(e),this}beforeRegisterRoutes(){}registerTo(e,r,t){this.beforeRegisterRoutes(e),D._registerRoutesTo(e,r,t,this._controllers,this._descriptors)}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class w{constructor(e={}){const r={driver:null,application:null,router:null,plugins:[],...e};this.driver=r.driver,this.application=r.application,this.router=r.router,this.plugins=r.plugins,this.init(),this._registerPlugins()}get plugins(){return this._plugins}set plugins(e){if(h(e))throw new TypeError("Plugins cannot be null ! Expect an array of TDatabasePlugin.");if(f(e))throw new TypeError("Plugins cannot be undefined ! Expect an array of TDatabasePlugin.");this._plugins=e}get router(){return this._router}set router(e){if(h(e))throw new TypeError("Router cannot be null ! Expect a Express Router.");if(f(e))throw new TypeError("Router cannot be undefined ! Expect a Express Router.");this._router=e}get application(){return this._application}set application(e){if(h(e))throw new TypeError("Application cannot be null ! Expect a Express Application.");if(f(e))throw new TypeError("Application cannot be undefined ! Expect a Express Application.");this._application=e}get driver(){return this._driver}set driver(e){if(h(e))throw new TypeError("Driver cannot be null ! Expect a database driver.");if(f(e))throw new TypeError("Driver cannot be undefined ! Expect a database driver.");this._driver=e}setPlugins(e){return this.plugins=e,this}setRouter(e){return this.router=e,this}setApplication(e){return this.application=e,this}setDriver(e){return this.driver=e,this}init(){}_registerPlugins(){for(let[e,r]of Object.entries(this._plugins))this._registerPackagePlugin(e,r)?console.log(`Use ${e} plugin from node_modules`):this._registerLocalPlugin(e,r)?console.log(`Use ${e} plugin from local folder`):console.error(`Unable to register the plugin ${e} the package or local folder doesn't seem to exist ! Skip it.`)}_registerPackagePlugin(e){let r=!1;try{const t=require(e);t instanceof D?(t.__dirname=_.dirname(require.resolve(e)),t.registerTo(this._driver,this._application,this._router),r=!0):console.error(`The plugin ${e} doesn't seem to be an instance of an extended class from TAbstractDatabasePlugin ! Skip it.`)}catch(e){e.code&&"MODULE_NOT_FOUND"===e.code||console.error(e)}return r}_registerLocalPlugin(e){let r=!1;try{const t=_.join(__dirname,"../../../","databases/plugins/",e,`${e}.js`),s=require(t);s instanceof D?(s.__dirname=_.dirname(require.resolve(t)),s.registerTo(this._driver,this._application,this._router),r=!0):console.error(`The plugin ${e} doesn't seem to be an instance of an extended class from TAbstractDatabasePlugin ! Skip it.`)}catch(e){console.error(e)}return r}connect(){}close(){}on(){}}export{R as MemoryWriteStream,y as TAbstractConverterManager,g as TAbstractDataController,v as TAbstractDataConverter,A as TAbstractDataInserter,w as TAbstractDatabase,D as TAbstractDatabasePlugin,N as TAbstractFileConverter};
